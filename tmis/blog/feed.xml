<?xml version="1.0" encoding="utf-8"?>
<feed xml:base="https://servo.org" xmlns="http://www.w3.org/2005/Atom">
  <title>Servo Blog</title>
  <subtitle>All the entries in the Servo blog.</subtitle>
  <link href="https://servo.org/blog/feed.xml" rel="self"/>
  <link href="https://servo.org"/>
  <updated>2025-05-09T00:00:00Z</updated>
  <id>https://servo.org</id>
  <author>
    <name>Servo Team</name>
    <email>info@servo.org</email>
  </author>
  <entry>
    <title>This month in Servo: and more!</title>
    <link href="https://servo.org/tmis/blog/2025/05/09/this-month-in-servo/"/>
    <updated>2025-05-09T00:00:00Z</updated>
    <id>https://servo.org/tmis/blog/2025/05/09/this-month-in-servo/</id>
    <content xml:lang="en" type="html">&lt;!--
- donations
    - 1954.40/month opencollective
    - 2710.00/month github
    - 24 donors thanks.dev
- ai policy
- wpt
    - dashboard now has subtests
    - `fromDate = &quot;2025-03-10&quot;`
    - `toDate = &quot;2025-04-30&quot;`
--&gt;
&lt;!--
wpt dashboard analysis
&gt;&gt;&gt; top deltas (score, pp):
/content-security-policy/ (50.9pp to 53.5%)
/trusted-types/ (47.2pp to 47.2%)
/css/css-text/ (17.9pp to 65.3%)
/css/css-sizing/ (10.3pp to 62.8%)
/streams/ (8.2pp to 18.8%)
/css/cssom/ (6.6pp to 72.2%)
All WPT tests (5.6pp to 62.0%)
/shadow-dom/ (5.2pp to 52.1%)
/css/CSS2/box-display/ (4.4pp to 92.2%)
/css/css-align/ (4.0pp to 72.7%)
/css/ (3.1pp to 69.2%)
/css/css-grid/ (3.1pp to 44.3%)
/css/css-flexbox/ (2.0pp to 78.4%)
/css/css-position/ (1.0pp to 52.8%)
/css/CSS2/tables/ &amp; /css/css-tables/ (0.2pp to 92.2%)
/css/CSS2/positioning/ (0.2pp to 94.5%)
/css/CSS2/ (0.1pp to 85.0%)
/css/CSS2/linebox/ (0.0pp to 96.9%)
/css/CSS2/abspos/ (0.0pp to 98.2%)
/css/CSS2/floats/ (0.0pp to 91.5%)
/css/CSS2/floats-clear/ (0.0pp to 93.9%)
/css/CSS2/margin-padding-clear/ (0.0pp to 99.0%)
/css/CSS2/normal-flow/ (0.0pp to 96.5%)
/gamepad/ (0.0pp to 70.8%)
/WebCryptoAPI/ (0.0pp to 39.2%)
/webxr/ (0.0pp to 55.8%)
&gt;&gt;&gt; top deltas (subtests, pp):
/shadow-dom/ (70.0pp to 77.9%)
/trusted-types/ (57.8pp to 57.8%)
/content-security-policy/ (54.0pp to 54.8%)
/streams/ (31.9pp to 68.1%)
/css/css-text/ (20.4pp to 57.6%)
/css/CSS2/linebox/ (5.5pp to 84.8%)
All WPT tests (4.6pp to 87.4%)
/css/CSS2/box-display/ (4.4pp to 92.2%)
/css/css-sizing/ (3.5pp to 72.9%)
/css/cssom/ (3.3pp to 84.7%)
/css/css-flexbox/ (3.1pp to 62.7%)
/css/css-grid/ (2.7pp to 44.3%)
/css/ (2.6pp to 63.0%)
/css/css-align/ (2.2pp to 80.0%)
/css/CSS2/ (0.6pp to 86.6%)
/css/CSS2/tables/ &amp; /css/css-tables/ (0.3pp to 87.2%)
/css/css-position/ (0.2pp to 62.9%)
/css/CSS2/positioning/ (0.2pp to 94.5%)
/css/CSS2/abspos/ (0.0pp to 96.6%)
/css/CSS2/floats/ (0.0pp to 87.8%)
/css/CSS2/floats-clear/ (0.0pp to 92.2%)
/css/CSS2/margin-padding-clear/ (0.0pp to 99.0%)
/css/CSS2/normal-flow/ (0.0pp to 96.2%)
/gamepad/ (0.0pp to 93.0%)
/WebCryptoAPI/ (0.0pp to 60.7%)
/webxr/ (0.0pp to 64.0%)
--&gt;
&lt;!--
- api
    - DONE https://github.com/servo/servo/pull/36257	(@stevennovaryo, #36257)	canvas: Implement line dash setters and getters (#36257)
      api; CanvasPathDrawingStyles `setLineDash`, `getLineDash`, `lineDashOffset`
    - DONE https://github.com/servo/servo/pull/36313	(@Loirooriol, #36313)	script: Implement deprecated CSSStyleSheet members (#36313)
      api; for speedometer
    - https://github.com/servo/servo/pull/36225	(@simonwuelker, #36225)	script: Implement input preprocessing for URLPatterns (#36225)
      api
    - SEEN https://github.com/servo/servo/pull/36354	(@TimvdLippe, #36354)	Run Trusted Types tests (#36354)
      api; trusted types
    - SEEN https://github.com/servo/servo/pull/36355	(@TimvdLippe, #36355)	Stub out Trusted Types interfaces (#36355)
      api; trusted types
    - DONE https://github.com/servo/servo/pull/36336	(@Gae24, #36336)	dom: Implement `ClipboardItem` (#36336)
      api; clipboard
    - https://github.com/servo/servo/pull/36391	(@simonwuelker, #36391)	Split up the URLPattern implementation (#36391)
      api
    - https://github.com/servo/servo/pull/36382	(@simonwuelker, #36382)	Create a parser for URLPatterns (#36382)
      api
    - https://github.com/servo/servo/pull/36385	(@gterzian, #36385)	Streams: add an underlying sink type (#36385)
      api; streams
    - https://github.com/servo/servo/pull/36362	(@simonwuelker, #36362)	Add a tokenizer for URLPatterns (#36362)
      api
    - SEEN https://github.com/servo/servo/pull/36422	(@TimvdLippe, #36422)	Implement attribute and property lookup for Trusted Types (#36422)
      api; trusted types
    - DONE https://github.com/servo/servo/pull/36393	(@sebsebmc, #36393)	Handle HTTP Refresh header (#36393)
      api net
    - SEEN https://github.com/servo/servo/pull/36454	(@TimvdLippe, @jdm, #36454)	Implement &quot;Create a Trusted Type&quot; algorithm (#36454)
      api; start of trusted types
    - SEEN https://github.com/servo/servo/pull/36409	(@TimvdLippe, @jdm, #36409)	Update FetchTaskTarget to propagate CSP violations. (#36409)
      api; trusted types
    - https://github.com/servo/servo/pull/36308	(@jerensl, #36308)	Support optional message for dataclone error (#36308)
      api; streams
    - SEEN https://github.com/servo/servo/pull/36363	(@TimvdLippe, @jdm, #36363)	Implement CSP check for Trusted Types (#36363)
      api; trusted types
    - SEEN https://github.com/servo/servo/pull/36511	(@TimvdLippe, #36511)	Gate `window.trustedTypes` behind flag (#36511)
      api; trusted types
    - DONE https://github.com/servo/servo/pull/36498	(@Gae24, #36498)	async clipboard: implement `writeText` (#36498)
      api; clipboard
    - DONE https://github.com/servo/servo/pull/36521	(@Loirooriol, #36521)	script: Implement CSSStyleSheet constructor (#36521)
      api
    - DONE https://github.com/servo/servo/pull/36535	(@kkoyung, #36535)	Make DOMException serializable (#36535)
      api; structured clone DOMException
    - DONE https://github.com/servo/servo/pull/36181	(@gterzian, #36181)	Transfer ReadableStream (#36181)
      api; streams
    - DONE https://github.com/servo/servo/pull/36523	(@sebsebmc, #36523)	Support static and instance members having the same name in IDLs (#36523)
      api net; for `Response.json` static method
    - DONE https://github.com/servo/servo/pull/36541	(@rayguo17, #36541)	media element: support seekable attribute (#36541)
      api; HTMLMediaElement seekable property
    - https://github.com/servo/servo/pull/36560	(@sidntrivedi012, @jdm, #36560)	content/dom: set navigator.onLine attribute to `true` (#36560)
      api; fixes pinterest
    - DONE https://github.com/servo/servo/pull/36588	(@gterzian, #36588)	Streams: make writable streams transferrable (#36588)
      api; streams
    - SEEN https://github.com/servo/servo/pull/36596	(@TimvdLippe, @jdm, #36596)	Implement trusted types url setter (#36596)
      api; trusted types
    - DONE https://github.com/servo/servo/pull/36586	(@webbeef, #36586)	Implement CSSStyleSheet::replaceSync (#36586)
      api
    - DONE https://github.com/servo/servo/pull/36589	(@sebsebmc, #36589)	Implement static Response.json (#36589)
      api net; `Response.json` static method
    - DONE https://github.com/servo/servo/pull/36470	(@Taym95, #36470)	Start adding support for transforms in readable and writable streams (#36470)
      api; streams
- architecture
    - https://github.com/servo/servo/pull/36341	(@mrobinson, #36341)	constellation: Rename messages sent to the `Constellation` (#36341)
      architecture
    - https://github.com/servo/servo/pull/36364	(@mrobinson, #36364)	Move `ScriptToConstellationMsg` to `constellation_traits` (#36364)
      architecture
    - https://github.com/servo/servo/pull/36372	(@mrobinson, #36372)	`compositing`: Combine `webrender_traits` and `compositing_traits` (#36372)
      architecture
    - https://github.com/servo/servo/pull/36284	(@simonwuelker, #36284)	Unify the way html5ever and xml5ever block on script elements (#36284)
      architecture; towards non-utf-8 encoding support
    - https://github.com/servo/servo/pull/36582	(@mrobinson, #36582)	compositing: Remove `windowing.rs` and making `compositing` private (#36582)
      architecture; no more public api in compositing
    - https://github.com/servo/servo/pull/36613	(@mrobinson, #36613)	layout: Combine `layout_2020` and `layout_thread_2020` into a crate called `layout` (#36613)
      architecture legacy
    - https://github.com/servo/servo/pull/36574	(@mrobinson, #36574)	compositing: Rename `WebView` to `WebViewRenderer` (#36574)
      architecture
- build
    - https://github.com/servo/servo/pull/36070	(@jschwe, #36070)	mach: Fix cross-compiling from windows to non windows (#36070)
      build
    - https://github.com/servo/servo/pull/36564	(@jschwe, #36564)	uv: Use native-tls (#36564)
      build
- compat
    - https://github.com/servo/servo/pull/36338	(@sakupi01, #36338)	Fix: Add support for stylesheet MIME type quirk in quirks mode (#36338)
      compat
- compositor
    - https://github.com/servo/servo/pull/36662	(@mrobinson, #36662)	compositor: Tick animations for an entire WebView at once (#36662)
      compositor; refresh driver
- crash
    - https://github.com/servo/servo/pull/36229	(@kongbai1996, #36229)	Fixed the crash issue when the openharmony web component is adapted. (#36229)
      crash ohos
    - https://github.com/servo/servo/pull/36256	(@jdm, #36256)	Fix null realm assertion when activating a service worker (#36256)
      crash
    - https://github.com/servo/servo/pull/36461	(@dklassic, #36461)	fix: Crashing due to input element hack (#36461)
      crash
    - https://github.com/servo/servo/pull/36518	(@Loirooriol, #36518)	layout: Floor the max-content size by the min-content size (#36518)
      layout crash
    - https://github.com/servo/servo/pull/36531	(@jschwe, #36531)	touch: Fix panic with -Zconvert-mouse-to-touch (#36531)
      crash
    - https://github.com/servo/servo/pull/36491	(@jdm, #36491)	Fix crash when enumerating properties of global object (#36491)
      crash
    - https://github.com/servo/servo/pull/36566	(@Taym95, #36566)	fix writablestream assertion crash when getting chunk size following spec change (#36566)
      crash
    - https://github.com/servo/servo/pull/36494	(@jdm, #36494)	Fix crash when setting custom property on Location (#36494)
      crash
    - https://github.com/servo/servo/pull/36571	(@Loirooriol, #36571)	layout: Always floor the max-content size by the min-content size (#36571)
      layout crash
    - https://github.com/servo/servo/pull/36569	(@tharkum, #36569)	imagedata: Fix overflow panic for too large ImageData (#36569)
      crash
    - https://github.com/servo/servo/pull/36705	(@simonwuelker, #36705)	Use snapshot size instead of canvas size when converting canvas to blob (#36705)
      crash
- css
    - DONE https://github.com/servo/servo/pull/36246	(@Loirooriol, #36246)	Enable css-nesting WPT tests (#36246)
      css; nesting
    - DONE `https://github.com/servo/servo/pull/36254	(@Loirooriol, #36254)	Turn `CSSStyleRule` into a `CSSGroupingRule` subclass (#36254)
      css; nesting
    - DONE `https://github.com/servo/servo/pull/36248	(@Loirooriol, #36248)	Implement CSSNestedDeclarations (#36248)
      css; nesting
    - DONE `https://github.com/servo/servo/pull/36249	(@Loirooriol, #36249)	Enable CSS parent selector (`&amp;`) (#36249)
      css; nesting
    - https://github.com/servo/servo/pull/36272	(@mrobinson, @Loirooriol, #36272)	script: Create `CSSStyleOwner::Null` for `getComputedStyle` (#36272)
      css; marker pseudo
    - https://github.com/servo/servo/pull/36317	(@mrobinson, #36317)	layout: Add initial support for the `::marker` pseudo-element (#36317)
      css; internal support; no ‘content’ yet
    - https://github.com/servo/servo/pull/35978	(@yezhizhen, #35978)	Fix transition toggle &amp; cancellation &amp; delay (#35978)
      css; transitions
    - https://github.com/servo/servo/pull/36374	(@ToBinio, @mrobinson, @jdm, #36374)	layout: Scale images in `image_set` by their specified resolution (#36374)
      css; image-set()
    - https://github.com/servo/servo/pull/36430	(@Loirooriol, #36430)	layout: Let getComputedStyle resolve auto min size as 0px when needed (#36430)
      css; cssom fix
    - https://github.com/servo/servo/pull/36568	(@mrobinson, @Loirooriol, #36568)	layout: Throw away nested marker elements instead of storing them in a `BoxSlot` (#36568)
      css; marker pseudo
    - https://github.com/servo/servo/pull/36595	(@Loirooriol, #36595)	layout: Implement `justify-self` for block-level boxes (#36595)
      css layout
- custom-protocol
    - https://github.com/servo/servo/pull/36656	(@Legend-Master, @mrobinson, #36656)	Initial support for marking custom protocol secure (#36656)
      custom-protocol
- dev
    - https://github.com/servo/servo/pull/36384	(@sagudev, #36384)	script: copy include! files from script_bindings to script&#39;s OUT_DIR (#36384)
      dev; fixes rust-analyzer in script
- DONE devtools
    - DONE https://github.com/servo/servo/pull/36253	(@uthmaniv, #36253)	Add SimulateColorScheme command and script thread handling (#36253)
      devtools
    - DONE https://github.com/servo/servo/pull/36168	(@uthmaniv, #36168)	Track the active tab and browsing context for devtools (#36168)
      devtools; for color scheme simulation
    - DONE https://github.com/servo/servo/pull/35971	(@delan, #35971)	devtools: Fix id collisions by using incrementing counters (#35971)
      devtools
    - DONE https://github.com/servo/servo/pull/36297	(@uthmaniv, #36297)	Process colorSchemeSimulation in TargetConfigurationActor (#36297)
      devtools
    - DONE https://github.com/servo/servo/pull/36164	(@delan, @atbrakhi, #36164)	Devtools: initial Debugger &gt; Sources panel (#36164)
      devtools
    - DONE https://github.com/servo/servo/pull/36631	(@atbrakhi, #36631)	DevTools: `worker_id` shoud be `id` &amp; thread for workers should be `thread` (#36631)
      devtools
    - DONE https://github.com/servo/servo/pull/36632	(@atbrakhi, #36632)	DevTools: Add `resource_available` as a common shared util  (#36632)
      devtools
    - DONE https://github.com/servo/servo/pull/36667	(@atbrakhi, #36667)	DevTools: Move `Source` related code to dedicated `source.rs` file (#36667)
      devtools; Sources tab
- DONE editing
    - DONE https://github.com/servo/servo/pull/35830	(@dklassic, #35830)	feat: Implement display for text selection and caret (#35830)
      editing
    - DONE https://github.com/servo/servo/pull/36478	(@webbeef, #36478)	textinput: position the caret at the end when selecting input (#36478)
      editing
- embedding
    - https://github.com/servo/servo/pull/36276	(@mrobinson, #36276)	libservo: Remove a couple `EmbedderMethods` (#36276)
      embedding
    - https://github.com/servo/servo/pull/36223	(@mrobinson, #36223)	libservo: Start moving `WindowMethods` to `WebViewDelegate` (#36223)
      embedding
    - https://github.com/servo/servo/pull/36312	(@mrobinson, #36312)	constellation: Stop assuming that the viewport is shared by all WebViews (#36312)
      embedding; per-webview dpi and zoom
    - https://github.com/servo/servo/pull/36400	(@mrobinson, #36400)	libservo: Move animation tracking from `WindowMethods` to delegates (#36400)
      embedding
    - https://github.com/servo/servo/pull/36420	(@mrobinson, #36420)	libservo: Move `EventLooperWaker` from `webxr_traits` to `embedder_traits` (#36420)
      embedding
    - https://github.com/servo/servo/pull/36443	(@mrobinson, #36443)	compositor: Unify the cross process and in-process API (#36443)
      embedding; working towards more robust embedding that can destroy and recreate servo instances
    - https://github.com/servo/servo/pull/36484	(@mrobinson, #36484)	compositing: Send `CompositorDisplayListInfo` as bytes to compositor (#36484)
      embedding; related to unified compositor
    - https://github.com/servo/servo/pull/36483	(@mrobinson, #36483)	libservo: Create a `WebViewBuilder` class to construct `WebView`s (#36483)
      embedding
    - https://github.com/servo/servo/pull/36440	(@mrobinson, #36440)	libservo: Add a very simple `libservo` API test (#36440)
      embedding
    - https://github.com/servo/servo/pull/36419	(@mrobinson, @shubhamg13, #36419)	libservo: Make zooming and HiDPI scaling work per-`WebView` (#36419)
      embedding; per-webview dpi and zoom
    - -https://github.com/servo/servo/pull/36485	(@mrobinson, #36485)	libservo: Remove the unused `multiview` feature (#36485)
      embedding; multiview
    - https://github.com/servo/servo/pull/36543	(@mrobinson, #36543)	compositor: Unify the cross process and in-process API (#36543)
      embedding; related to unified compositor
    - https://github.com/servo/servo/pull/36533	(@mrobinson, #36533)	Revert &quot;compositor: Unify the cross process and in-process API (#36443)&quot; (#36533)
      embedding; related to unified compositor
    - https://github.com/servo/servo/pull/36549	(@mrobinson, #36549)	libservo: Expose a `ServoBuilder` (#36549)
      embedding
    - https://github.com/servo/servo/pull/36532	(@mrobinson, #36532)	libservo: Allow running more than one Servo test in a run (#36532)
      embedding; testing
    - https://github.com/servo/servo/pull/36413	(@yezhizhen, #36413)	Move click event trigger from embedding layer to `ScriptThread` (#36413)
      embedding; reworking input for click events
- DONE forms
    - DONE https://github.com/servo/servo/pull/36236	(@MDCODE247, #36236)	script: Use `RegExpFlag_UnicodeSets` when validating regular expressions in `HTMLInputElement` (#36236)
      forms; input validation
    - DONE https://github.com/servo/servo/pull/36252	(@elomscansio, #36252)	Fix radio group validity update when removing or selecting an input (#36252)
      forms
    - DONE https://github.com/servo/servo/pull/36458	(@sebsebmc, #36458)	fix: File to FormData not correctly handling name and lastModified (#36458)
      forms; file inputs
    - DONE https://github.com/servo/servo/pull/36431	(@elomscansio, #36431)	htmlinputelement: Update radio group validity logic for disconnected trees (#36431)
      forms
- gc
    - https://github.com/servo/servo/pull/36375	(@yerke, #36375)	Add CanGc as arguments in methods in devtools.rs, CharacterData, CSSStyleRule, CSSStyleSheet (#36375)
      gc
    - https://github.com/servo/servo/pull/36371	(@yerke, #36371)	Add CanGc as arguments in methods in Attr and Node (#36371)
      gc
    - https://github.com/servo/servo/pull/36395	(@yerke, #36395)	add CanGc as argument to methods in DissimilarOriginWindow, DocumentFragment, DocumentType, DOMRect, DOMRectReadOnly, DOMStringMap (#36395)
      gc
    - https://github.com/servo/servo/pull/36392	(@yerke, #36392)	refactor: add CanGc as argument to methods in Document (#36392)
      gc
    - https://github.com/servo/servo/pull/36464	(@yerke, #36464)	add CanGc as argument to methods in Element (#36464)
      gc
    - https://github.com/servo/servo/pull/36504	(@yerke, #36504)	add CanGc as argument to methods in HTMLInputElement, HTMLLinkElement (#36504)
      gc
    - https://github.com/servo/servo/pull/36495	(@yerke, #36495)	add CanGc as argument to methods in HTMLCollection, HTMLDataListElement, HTMLDialogElement, HTMLElement, HTMLFieldSetElement, HTMLFormControlsCollection, HTMLFormElement, HTMLIFrameElement (#36495)
      gc
    - https://github.com/servo/servo/pull/36492	(@yerke, #36492)	add CanGc as argument to methods in ElementInternals, GlobalScope, HTMLAnchorElement, HTMLAreaElement, HTMLCanvasElement (#36492)
      gc
- html
    - https://github.com/servo/servo/pull/35684	(@simonwuelker, #35684)	Support single-value `&lt;select&gt;` elements (#35684)
      html
    - https://github.com/servo/servo/pull/36446	(@Loirooriol, #36446)	Implement `disabled` attribute for `&lt;link rel=&quot;stylesheet&quot;&gt;` (#36446)
      html
- incremental
    - https://github.com/servo/servo/pull/36404	(@mrobinson, @Loirooriol, #36404)	layout: Enable using cached fragments when there is a BoxTree update point (#36404)
      incremental
    - https://github.com/servo/servo/pull/36448	(@mrobinson, @Loirooriol, #36448)	layout: Add documentation for `CacheableLayoutResultAndInputs` (#36448)
      incremental
    - https://github.com/servo/servo/pull/36447	(@mrobinson, @Loirooriol, #36447)	layout: Store table parts in DOM layout data (#36447)
      incremental
    - https://github.com/servo/servo/pull/36513	(@mrobinson, @Loirooriol, #36513)	layout: Add a `LayoutBoxBase` to inline boxes (#36513)
      incremental
    - https://github.com/servo/servo/pull/36583	(@mrobinson, @Loirooriol, #36583)	layout: Store `Fragment` results in `LayoutBoxBase` and start using them for queries (#36583)
      incremental
- input
    - https://github.com/servo/servo/pull/36619	(@yezhizhen, #36619)	Rework `ScriptThread::handle_input_event` for behaviour and performance (#36619)
      input; fixes erroneous click event on right click
- layout
    - https://github.com/servo/servo/pull/36278	(@Loirooriol, #36278)	layout: Allow collapsing bottom margins with any indefinite block size (#36278)
      layout
    - https://github.com/servo/servo/pull/36298	(@Barry-dE, #36298)	Fix:  `display: inline-grid` considered an atomic inline (#36298)
      layout; fix atomic inlines
    - https://github.com/servo/servo/pull/36316	(@Loirooriol, #36316)	Enable layout_grid_enabled pref for all tests (#36316)
      layout
    - https://github.com/servo/servo/pull/36174	(@reesmichael1, #36174)	fix: root element not establishing stacking context (#35390) (#36174)
      layout; fix stacking contexts
    - https://github.com/servo/servo/pull/36311	(@Loirooriol, #36311)	layout: Improve style conversion for Taffy (#36311)
      layout; grid
    - https://github.com/servo/servo/pull/36288	(@Loirooriol, #36288)	layout: Restrict stretch alignment to flex items with computed auto size (#36288)
      layout; flex
    - https://github.com/servo/servo/pull/36469	(@Loirooriol, #36469)	layout: Enforce min-content min main size of flex-level tables (#36469)
      layout; tables in flex
    - https://github.com/servo/servo/pull/36518	(@Loirooriol, #36518)	layout: Floor the max-content size by the min-content size (#36518)
      layout crash
    - https://github.com/servo/servo/pull/36571	(@Loirooriol, #36571)	layout: Always floor the max-content size by the min-content size (#36571)
      layout crash
    - https://github.com/servo/servo/pull/36595	(@Loirooriol, #36595)	layout: Implement `justify-self` for block-level boxes (#36595)
      css layout
- legacy
    - https://github.com/servo/servo/pull/36281	(@TimvdLippe, #36281)	Remove meta-legacy-layout wpt tests (#36281)
      legacy
    - https://github.com/servo/servo/pull/36613	(@mrobinson, #36613)	layout: Combine `layout_2020` and `layout_thread_2020` into a crate called `layout` (#36613)
      architecture legacy
    - https://github.com/servo/servo/pull/36698	(@mrobinson, #36698)	layout: Remove rules for legacy pseudo-elements in user agent stylesheet (#36698)
      legacy
- multiprocess
    - https://github.com/servo/servo/pull/36329	(@webbeef, #36329)	Prevent zombie processes in multi-process mode. (#36329)
      multiprocess
    - https://github.com/servo/servo/pull/35863	(@webbeef, #35863)	Make the memory reporting multi-process aware (#35863)
      multiprocess
- net
    - https://github.com/servo/servo/pull/36227	(@simonwuelker, #36227)	Refuse to provide partial response from earlier ranged request to API that did not make a range request (#36227)
      net
    - https://github.com/servo/servo/pull/36390	(@sebsebmc, #36390)	fix: meta referrer updating to follow spec (#36390)
      net
    - https://github.com/servo/servo/pull/36455	(@sebsebmc, #36455)	Manually concatenate ACRH headers to not include a space (#36455)
      net; cors fix
    - https://github.com/servo/servo/pull/36393	(@sebsebmc, #36393)	Handle HTTP Refresh header (#36393)
      api net
    - https://github.com/servo/servo/pull/36523	(@sebsebmc, #36523)	Support static and instance members having the same name in IDLs (#36523)
      api net; for `Response.json` static method
    - https://github.com/servo/servo/pull/36605	(@elomscansio, @jdm, #36605)	htmlvideoelement: Include security settings in poster image request (#36605)
      net
    - https://github.com/servo/servo/pull/36606	(@elomscansio, #36606)	Fix missing settings in script module requests (#36606)
      net
    - https://github.com/servo/servo/pull/36621	(@elomscansio, #36621)	layout_image: Include missing request settings in layout-initiated image loads (#36621)
      net
    - https://github.com/servo/servo/pull/36589	(@sebsebmc, #36589)	Implement static Response.json (#36589)
      api net; `Response.json` static method
- ohos
    - https://github.com/servo/servo/pull/36229	(@kongbai1996, #36229)	Fixed the crash issue when the openharmony web component is adapted. (#36229)
      crash ohos
    - https://github.com/servo/servo/pull/36459	(@coding-joedow, #36459)	Implement WebviewDelegate.screen_geometry for OHOS (#36459)
      ohos
    - https://github.com/servo/servo/pull/36444	(@PartiallyUntyped, @jschwe, #36444)	[OHOS] Allow setting the log-filter via cli arguments (#36444)
      ohos
- parse
    - https://github.com/servo/servo/pull/36622	(@elomscansio, #36622)	script_thread: HTML parser doesn&#39;t set relevant option (#36622)
      parse
- perf
    - https://github.com/servo/servo/pull/36474	(@mrobinson, @Loirooriol, #36474)	layout: Box `block_margins_collapsed_with_children` member of `BoxFragment` (#36474)
      perf; memory usage
    - https://github.com/servo/servo/pull/36557	(@jdm, #36557)	compositing: Add memory reporter for WebRender. (#36557)
      perf; memory usage
    - https://github.com/servo/servo/pull/36556	(@jdm, #36556)	net: Report memory usage for image cache. (#36556)
      perf; memory usage
    - https://github.com/servo/servo/pull/36558	(@jdm, #36558)	net: Measure HSTS memory usage. (#36558)
      perf; memory usage
    - https://github.com/servo/servo/pull/36579	(@jdm, #36579)	Refactor common infrastructure for creating memory reports. (#36579)
      perf; memory usage
    - https://github.com/servo/servo/pull/36581	(@jdm, #36581)	Report memory usage for image frames. (#36581)
      perf; memory usage
    - https://github.com/servo/servo/pull/36553	(@jdm, #36553)	layout: Report memory usage for fragment and box trees. (#36553)
      perf; memory usage
    - https://github.com/servo/servo/pull/36600	(@Barry-dE, @jdm, #36600)	Prevent multiple notifications for image dimensions (#36600)
      perf
    - https://github.com/servo/servo/pull/36617	(@jdm, #36617)	Use swap_remove when unrooting DOM objects. (#36617)
      perf
    - https://github.com/servo/servo/pull/36612	(@jdm, #36612)	script: Only register one image callback per CSS image in use. (#36612)
      perf
    - https://github.com/servo/servo/pull/36604	(@jdm, #36604)	Eagerly define interfaces on non-Window globals (#36604)
      perf; memory usage
    - https://github.com/servo/servo/pull/36573	(@PartiallyUntyped, #36573)	[tracing] Add convenience macro for function tracing (#36573)
      perf; tracing support
    - https://github.com/servo/servo/pull/36629	(@mrobinson, @Loirooriol, #36629)	layout: Add a new `FragmentTree` pass to calculate containing block rectangles (#36629)
      perf; layout queries
    - https://github.com/servo/servo/pull/36119	(@sagudev, #36119)	Introduce snapshot concept of canvas (#36119)
      perf
    - https://github.com/servo/servo/pull/36664	(@jdm, #36664)	script: Measure stored layout data memory usage. (#36664)
      perf; memory usage
    - https://github.com/servo/servo/pull/36681	(@mrobinson, @Loirooriol, #36681)	 layout: Use box tree `Fragment`s for offset parent queries (#36681)
      perf; layout queries
    - https://github.com/servo/servo/pull/36663	(@mrobinson, @Loirooriol, #36663)	layout: Implement node geometry queries against `BoxTree`&#39;s `Fragment` (#36663)
      perf; layout queries
    - https://github.com/servo/servo/pull/36692	(@PartiallyUntyped, #36692)	Propagate image resolution errors in layout context (#36692)
      perf
- DONE script
    - DONE https://github.com/servo/servo/pull/36332	(@mrobinson, #36332)	script: Remove dependency on `webgpu` (#36332)
      script; rebuild webgpu without rebuilding script
    - DONE https://github.com/servo/servo/pull/36320	(@mrobinson, #36320)	webgpu: Add a `webgpu_traits` crate (#36320)
      script; webgpu dependency
    - DONE https://github.com/servo/servo/pull/36323	(@jdm, #36323)	Move generated bindings to script_bindings (#36323)
      script; crate split done! script rebuilds take 50% less time
- security
    - https://github.com/servo/servo/pull/36510	(@TimvdLippe, #36510)	Check CSP for inline event handlers (#36510)
      security
    - https://github.com/servo/servo/pull/36603	(@TimvdLippe, #36603)	Set correct policy-container for worker construction (#36603)
      security; csp
    - https://github.com/servo/servo/pull/36623	(@TimvdLippe, #36623)	Support CSP report-only header (#36623)
      security; csp
- servoshell
    - https://github.com/servo/servo/pull/36677	(@simonwuelker, #36677)	servoshell: Make list of options in &lt;select&gt; prompt scrollable (#36677)
      servoshell
- shadowdom
    - https://github.com/servo/servo/pull/36230	(@jdm, #36230)	script: Fix resize observer depth calculation for Shadow DOM. (#36230)
      shadowdom
    - https://github.com/servo/servo/pull/36620	(@sakupi01, #36620)	Fix: Slot Assignment mode according to the spec (#36620)
      shadowdom
- test
    - https://github.com/servo/servo/pull/36221	(@jdm, #36221)	Enable service worker WPT tests. (#36221)
      test
    - https://github.com/servo/servo/pull/36330	(@jdm, #36330)	constellation: Only return focused browsing contexts that exist. (#36330)
      test; servodriver bustage
    - https://github.com/servo/servo/pull/36301	(@sebsebmc, @sagudev, #36301)	Implement TestUtils (#36301)
      test
    - https://github.com/servo/servo/pull/36334	(@mrego, #36334)	wpt: Unskip webaudio tests as most are passing (#36334)
      test; unskip tests
    - https://github.com/servo/servo/pull/36333	(@mrego, #36333)	wpt: Unskip old-tests/ folder as most tests are passing (#36333)
      test; unskip tests
    - https://github.com/servo/servo/pull/36314	(@mrego, #36314)	wpt: Unskip css/css-text/i18n as many tests are passing there (#36314)
      test; unskip tests
    - https://github.com/servo/servo/pull/36327	(@jdm, #36327)	Ignore cert errors when running wdspec tests. (#36327)
      test; servodriver bustage
    - https://github.com/servo/servo/pull/36306	(@yezhizhen, #36306)	Webdriver delete cookie (#36306)
      test; servodriver bustage
    - https://github.com/servo/servo/pull/36340	(@mrego, #36340)	wpt: Unskip acid folder as most tests are passing (#36340)
      test; unskip tests
    - https://github.com/servo/servo/pull/36377	(@mukilan, #36377)	ci: use Ubuntu 22.04 for nightly jobs (#36377)
      test
    - https://github.com/servo/servo/pull/36402	(@jdm, #36402)	Run subset of CSP tests by default. (#36402)
      test
    - https://github.com/servo/servo/pull/36436	(@jdm, #36436)	Run all CSP tests in CI by default. (#36436)
      test
    - https://github.com/servo/servo/pull/36552	(@PotatoCP, #36552)	Implement GetComputedRole in wd (#36552)
      test; servodriver bustage
    - https://github.com/servo/servo/pull/27041	(@jdm, #27041)	Report exceptions for async script executions to webdriver (#27041)
      test; servodriver bustage
- testing
    - https://github.com/servo/servo/pull/36348	(@Loirooriol, #36348)	Enable layout_container_queries_enabled on all WPT tests (#36348)
      testing; experimental features
    - https://github.com/servo/servo/pull/36475	(@Loirooriol, #36475)	Enable dom_svg_enabled on all tests (#36475)
      testing; experimental features
    - https://github.com/servo/servo/pull/36335	(@Loirooriol, #36335)	Run all tests with --enable-experimental-web-platform-features (#36335)
      testing; experimental features
    - https://github.com/servo/servo/pull/36519	(@Loirooriol, #36519)	Enable all experimental web platform features on all testsuites (#36519)
      testing; experimental features
- upgrade
    - https://github.com/servo/servo/pull/36486	(@sagudev, #36486)	chore: Update wgpu to v25 (#36486)
      upgrade
--&gt;
&lt;p&gt;Servo now supports:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CSS nesting&lt;/strong&gt;, the &lt;strong&gt;&amp;amp;&lt;/strong&gt; selector (@Loirooriol, #36246, #36254, #36248, #36249)&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;Response.json()&lt;/strong&gt; static method (@sebsebmc, #36589, #36523)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ClipboardItem&lt;/strong&gt; and &lt;strong&gt;navigator.clipboard.writeText()&lt;/strong&gt; (@Gae24, #36336, #36498)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;addRule()&lt;/strong&gt;, &lt;strong&gt;removeRules()&lt;/strong&gt;, &lt;strong&gt;replaceSync()&lt;/strong&gt;, and the &lt;strong&gt;rules&lt;/strong&gt; property on &lt;strong&gt;CSSStyleSheet&lt;/strong&gt; (@Loirooriol, @webbeef, #36313, #36586)&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;CSSStyleSheet()&lt;/strong&gt; constructor (@Loirooriol, #36521)&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;Refresh&lt;/strong&gt; header, in HTTP responses and &amp;lt;meta&amp;gt; (@sebsebmc, #36393)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;getLineDash&lt;/strong&gt;, &lt;strong&gt;setLineDash&lt;/strong&gt;, and &lt;strong&gt;lineDashOffset&lt;/strong&gt; on &lt;strong&gt;CanvasRenderingContext2D&lt;/strong&gt; (@stevennovaryo, #36257)&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;seekable&lt;/strong&gt; property on &lt;strong&gt;HTMLMediaElement&lt;/strong&gt; (@rayguo17, #36541)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ReadableStream&lt;/strong&gt;, &lt;strong&gt;WritableStream&lt;/strong&gt;, and &lt;strong&gt;DOMException&lt;/strong&gt; can now be sent over &lt;strong&gt;postMessage()&lt;/strong&gt; and &lt;strong&gt;structuredClone()&lt;/strong&gt; (@gterzian, @kkoyung, #36181, #36588, #36535), and we’ve started working on support for &lt;strong&gt;stream transforms&lt;/strong&gt; (@Taym95, #36470).&lt;/p&gt;
&lt;p&gt;We’ve started implementing the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Trusted_Types_API&quot;&gt;&lt;strong&gt;trusted types API&lt;/strong&gt;&lt;/a&gt; (@TimvdLippe, @jdm, #36354, #36355, #36422, #36454, #36409, #36363, #36511, #36596).&lt;/p&gt;
&lt;p&gt;Servo can now render the &lt;strong&gt;caret&lt;/strong&gt; and &lt;strong&gt;text selection&lt;/strong&gt; in input fields (@dklassic, @webbeef, #35830, #36478), and we’ve landed a few fixes to &lt;strong&gt;radio buttons&lt;/strong&gt; (@elomscansio, #36252, #36431), &lt;strong&gt;file inputs&lt;/strong&gt; (@sebsebmc, #36458), and &lt;strong&gt;input validation&lt;/strong&gt; (@MDCODE247, #36236).&lt;/p&gt;
&lt;p&gt;Our devtools now support &lt;strong&gt;color scheme simulation&lt;/strong&gt; (@uthmaniv, #36253, #36168, #36297), and the beginnings of a &lt;strong&gt;Sources panel&lt;/strong&gt; (@delan, @atbrakhi, #36164, #35971, #36631, #36632, #36667).&lt;/p&gt;
&lt;h2 id=&quot;under-the-hood&quot; tabindex=&quot;-1&quot;&gt;Under the hood &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2025/05/09/this-month-in-servo/#under-the-hood&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We’ve finally finished &lt;strong&gt;splitting up our massive &lt;code&gt;script&lt;/code&gt; crate&lt;/strong&gt; (@jdm, #36323), which should &lt;strong&gt;cut incremental build times&lt;/strong&gt; for that crate &lt;strong&gt;by 60%&lt;/strong&gt;.
This is something we’ve wanted to do for &lt;strong&gt;over eleven years&lt;/strong&gt; (@kmcallister, #1799)!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;webgpu&lt;/code&gt; rebuilds are now faster&lt;/strong&gt; as well, with changes to that crate no longer requiring a &lt;code&gt;script&lt;/code&gt; rebuild (@mrobinson, #36332, #36320).&lt;/p&gt;
&lt;h2 id=&quot;donations&quot; tabindex=&quot;-1&quot;&gt;Donations &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2025/05/09/this-month-in-servo/#donations&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks again for your generous support!
We are now receiving &lt;strong&gt;4664 USD/month&lt;/strong&gt; (+6.8% over February) in recurring donations.
This helps cover the cost of our &lt;a href=&quot;https://ci0.servo.org/&quot;&gt;self-hosted&lt;/a&gt; &lt;a href=&quot;https://ci1.servo.org/&quot;&gt;CI&lt;/a&gt; &lt;a href=&quot;https://ci2.servo.org/&quot;&gt;runners&lt;/a&gt; and &lt;a href=&quot;https://www.outreachy.org/&quot;&gt;Outreachy&lt;/a&gt; internships.&lt;/p&gt;
&lt;p&gt;Servo is also on &lt;a href=&quot;https://thanks.dev/&quot;&gt;thanks.dev&lt;/a&gt;, and already &lt;strong&gt;24 GitHub users&lt;/strong&gt; (+3 over February) that depend on Servo are sponsoring us there.
If you use Servo libraries like &lt;a href=&quot;https://crates.io/crates/url/reverse_dependencies&quot;&gt;url&lt;/a&gt;, &lt;a href=&quot;https://crates.io/crates/html5ever/reverse_dependencies&quot;&gt;html5ever&lt;/a&gt;, &lt;a href=&quot;https://crates.io/crates/selectors/reverse_dependencies&quot;&gt;selectors&lt;/a&gt;, or &lt;a href=&quot;https://crates.io/crates/cssparser/reverse_dependencies&quot;&gt;cssparser&lt;/a&gt;, signing up for &lt;a href=&quot;https://thanks.dev/&quot;&gt;thanks.dev&lt;/a&gt; could be a good way for you (or your employer) to give back to the community.&lt;/p&gt;
&lt;figure class=&quot;_fig&quot; style=&quot;width: 100%; margin: 1em 0;&quot;&gt;&lt;div class=&quot;_flex&quot; style=&quot;height: calc(1lh + 3em); flex-flow: column nowrap; text-align: left;&quot;&gt;
    &lt;div style=&quot;position: relative; text-align: right;&quot;&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% * 4664 / 10000); padding-left: 0.5em;&quot;&gt;&lt;strong&gt;4664&lt;/strong&gt; USD/month&lt;/div&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% * 4664 / 10000); height: calc(1lh + 1.5em); border-left: 1px solid;&quot;&gt;&lt;/div&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% - 0.5em); height: calc(1lh + 1.5em); border-left: 1px solid;&quot;&gt;&lt;/div&gt;
        &lt;div style=&quot;padding-right: 1em;&quot;&gt;&lt;strong&gt;10000&lt;/strong&gt;&lt;!-- USD/month --&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;progress value=&quot;4664&quot; max=&quot;10000&quot; style=&quot;transform: scale(3); transform-origin: top left; width: calc(100% / 3);&quot;&gt;&lt;/progress&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;As always, use of these funds will be decided transparently in the Technical Steering Committee.
For more details, head to our &lt;a href=&quot;https://servo.org/tmis/sponsorship/&quot;&gt;Sponsorship page&lt;/a&gt;.&lt;/p&gt;
&lt;style&gt;
    ._correction {
        max-width: 33em;
        margin: 1em auto;
        border-bottom: 1px solid;
        padding-bottom: 1em;
    }
    ._note {
        margin: 1em 1em;
        border-left: 1px solid;
        padding-left: 1em;
        opacity: 0.75;
    }
&lt;/style&gt;
</content>
  </entry>
  <entry>
    <title>This month in Servo: ????</title>
    <link href="https://servo.org/tmis/blog/2025/04/24/this-month-in-servo/"/>
    <updated>2025-04-24T00:00:00Z</updated>
    <id>https://servo.org/tmis/blog/2025/04/24/this-month-in-servo/</id>
    <content xml:lang="en" type="html">&lt;p&gt;Big news! Complex sites such as GMail and Google Chat are now usable in Servo[^1]. This milestone is only possible through the continued hard work of many Servo contributors across the engine, and we’re thankful for all of the efforts to reach this point.&lt;/p&gt;
&lt;p&gt;[^1]: Must run Servo with &lt;code&gt;--pref dom_abort_controller_enabled&lt;/code&gt;. Accounts with 2FA enabled may not be able to log in yet.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://servo.org/tmis/img/blog/servo-gchat.png&quot;&gt;&lt;img alt=&quot;Google Chat rendering in Servo&quot; src=&quot;https://servo.org/tmis/img/blog/servo-gchat.png&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;figure&gt;&lt;a href=&quot;https://servo.org/tmis/img/blog/servo-gmail.png&quot;&gt;&lt;img alt=&quot;GMail rendering in Servo&quot; src=&quot;https://servo.org/tmis/img/blog/servo-gmail.png&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;p&gt;We’ve &lt;strong&gt;enabled Shadow DOM by default&lt;/strong&gt; after significantly improving support, allowing Servo to render sites like wpt.fyi correctly (@simonwuelker, @longvatron111, @elomscansio, #35923, #35899, #35930, #36104, #34964, #36024, #36106, #36173, #36010, #35769).&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://servo.org/tmis/img/blog/servo-wptfyi.png&quot;&gt;&lt;img alt=&quot;wpt.fyi rendering in Servo&quot; src=&quot;https://servo.org/tmis/img/blog/servo-wptfyi.png&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;p&gt;We also merged the preliminary steps to support &lt;strong&gt;animated images&lt;/strong&gt; in web content (@rayguo17, #36058, #36141).&lt;/p&gt;
&lt;p&gt;Having disabled by default Servo’s original, experimental layout implementation back in November 2024, we have taken the step of &lt;strong&gt;deleting all of the disabled code&lt;/strong&gt; (@Loirooriol, #35943). The new layout engine is improving significantly month over month! We now better support &lt;strong&gt;transform-style: preserve-3d&lt;/strong&gt; (@HastD, #35808), and the &lt;strong&gt;will-change&lt;/strong&gt; property (@yezhizhen, #35787).&lt;/p&gt;
&lt;p&gt;Our flexbox implementation supports &lt;strong&gt;min/max keyword sizes&lt;/strong&gt; for both cross and main axes (@Loirooriol, #35860, #35961), as well as &lt;strong&gt;keyword sizes&lt;/strong&gt; for non-replaced content (@Loirooriol, #35826) and &lt;strong&gt;min and max sizing properties&lt;/strong&gt; (@Loirooriol, #36015). This means Servo’s flexbox layout now has full support for sizing keywords!&lt;/p&gt;
&lt;p&gt;We laid the groundwork for supporting the &lt;strong&gt;::marker pseudo element&lt;/strong&gt; (#36202), and implemented the &lt;strong&gt;fit-content()&lt;/strong&gt; sizing function (@Loirooriol, #36056), as well as the &lt;strong&gt;image-set()&lt;/strong&gt; notation (@chocolate-pie, #36210). Additionally, the &lt;strong&gt;&lt;code&gt;scale&lt;/code&gt;, &lt;code&gt;rotate&lt;/code&gt;, and &lt;code&gt;translate&lt;/code&gt;&lt;/strong&gt; transform properties now work (@chocolate-pie, @Loirooriol, #35926). Finally, we &lt;strong&gt;improved the performance&lt;/strong&gt; of deeply nested pages that require laying out boxes multiple times (@Loirooriol, @mrobinson, #36082).&lt;/p&gt;
&lt;p&gt;We also fixed many layout bugs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;incorrect &lt;strong&gt;fallback font&lt;/strong&gt; caching (@mrobinson, #35705)&lt;/li&gt;
&lt;li&gt;improved &lt;strong&gt;overflow handling&lt;/strong&gt; in some special cases (@yezhizhen, #35670)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;addressed a crash&lt;/strong&gt; caused by flex boxes and mixing fixed position and absolutely positioned descendants (@mrobinson, #36123)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;table-layout: fixed&lt;/strong&gt; is no longer ignored when &lt;code&gt;inline-size&lt;/code&gt; is &lt;code&gt;auto&lt;/code&gt; (@Loirooriol, #35882)&lt;/li&gt;
&lt;li&gt;margins of block-level box stretches are always zero, regardless of collapsing status (@Loirooriol, #35904)&lt;/li&gt;
&lt;li&gt;fixed the intrinsic block size of replaced elements with auto width (@Loirooriol, #35275)&lt;/li&gt;
&lt;li&gt;added support for &lt;strong&gt;z-index on grid items&lt;/strong&gt; (@Loirooriol, #35947)&lt;/li&gt;
&lt;li&gt;indefinite stretch contributes to intrinsic sizes (@Loirooriol, #36030)&lt;/li&gt;
&lt;li&gt;static positions include ancestor padding (@Loirooriol, #36051)&lt;/li&gt;
&lt;li&gt;table rows with a span of &amp;gt;1 are sized appropriately (@PotatoCP, #36064)&lt;/li&gt;
&lt;li&gt;input element contents ignore any outer display value (@PotatoCP, #35908)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There was also lots of progress on non-layout web API features in the engine:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;we implemented &lt;strong&gt;ReadableByteStreamController and ReadableStream.pipeTo&lt;/strong&gt; (@Taym95, @gterzian, #35410, #35650)&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;nonce attribute&lt;/strong&gt; is used in Content Security Policy checks (@simonwuelker, #35876)&lt;/li&gt;
&lt;li&gt;we removed some cases where &lt;strong&gt;custom element callbacks fired incorrectly&lt;/strong&gt; (@xiaochengh, #35960, #35883)&lt;/li&gt;
&lt;li&gt;added &lt;strong&gt;partial support for InterSectionObserver&lt;/strong&gt; (@stevennovaryo, #35551)&lt;/li&gt;
&lt;li&gt;we &lt;strong&gt;implemented Range.getClientRects and Range.getBoundingClientRect&lt;/strong&gt; (@simonwuelker, #35993)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;touchmove events&lt;/strong&gt; are more reliable (@kongbai1996, #36218 #36200) and support the &lt;code&gt;cancelable&lt;/code&gt; property (@kongbai1996, #35713)&lt;/li&gt;
&lt;li&gt;we added support for &lt;strong&gt;HTMLOptgroupElement.label&lt;/strong&gt; (@simonwuelker, #35970)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DOMPoint and DOMPointReadOnly are serializable&lt;/strong&gt; with &lt;code&gt;postMessage&lt;/code&gt; (@jdm, @mrobinson, #35989)&lt;/li&gt;
&lt;li&gt;Notifications fetch &lt;strong&gt;associated image resources&lt;/strong&gt; (@pewsheen, #35878)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ResizeObserver&lt;/code&gt; callbacks are only invoked &lt;strong&gt;when elements change size&lt;/strong&gt; (@simonwuelker, #36226)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Request objects with FormData bodies&lt;/strong&gt; use the correct &lt;code&gt;Content-Type&lt;/code&gt; (@andreubotella, #36194)&lt;/li&gt;
&lt;li&gt;Text response bodies containing a BOM consume it (@andreubotella, #36192)&lt;/li&gt;
&lt;li&gt;We have begun &lt;strong&gt;implementing the URLPattern API&lt;/strong&gt; (@simonwuelker, #36144)&lt;/li&gt;
&lt;li&gt;Backspace &lt;strong&gt;no longer removes entire lines&lt;/strong&gt; in &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; (@elomscansio, @jdm, #36112)&lt;/li&gt;
&lt;li&gt;we implemented the &lt;strong&gt;HTMLParagraphElement.align&lt;/strong&gt; attribute (@stephenmuss, #36054)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;passive event listeners&lt;/strong&gt; can be created (@shanehandley, #35877)&lt;/li&gt;
&lt;li&gt;cancelled enqueued animation frame callbacks &lt;strong&gt;no longer run&lt;/strong&gt; (@xiaochengh, #35849)&lt;/li&gt;
&lt;li&gt;scripts are &lt;strong&gt;no longer executed&lt;/strong&gt; in documents that should disable scripting (@simonwuelker, #35871)&lt;/li&gt;
&lt;li&gt;file inputs &lt;strong&gt;show the selected file&lt;/strong&gt; (@dklassic, #35789)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;removing an event listener&lt;/strong&gt; that has not run prevents it from running (@tharkum, #36163)&lt;/li&gt;
&lt;li&gt;members of radio input groups &lt;strong&gt;apply validity constraints&lt;/strong&gt; more consistently (@jerensl, @elomscansio, @Barry-dE, #36197, #36090, #36103)&lt;/li&gt;
&lt;li&gt;indexing properties with &lt;strong&gt;values near 2^32&lt;/strong&gt; resolves correctly (@reesmichael1, #36136)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;history.replaceState()&lt;/strong&gt; can be called from file:// documents (@kkoyung, #35864)&lt;/li&gt;
&lt;li&gt;script elements &lt;strong&gt;adopted between documents&lt;/strong&gt; use the original document to determine when to execute (@xiaochengh, #35718)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our developer tools integration &lt;strong&gt;supports iframes&lt;/strong&gt; (@simonwuelker, #35874), shows &lt;strong&gt;computed display values&lt;/strong&gt; when inspecting elements (@stephenmuss, #35870), and supports &lt;strong&gt;multiple tabs&lt;/strong&gt; open in the servoshell browser (@atbrakhi, #35884). To use the developer tools, we now &lt;strong&gt;require Firefox 133 or newer&lt;/strong&gt; (@atbrakhi, #35792).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stylo&lt;/strong&gt; has been upgraded to 2025-03-15 (@nicoburns, @Loirooriol, #35782, #35925, #35990), and we upgraded to the &lt;strong&gt;2024 Rust edition&lt;/strong&gt; (@simonwuelker, #35755).
We also are nearly finished &lt;strong&gt;splitting up our massive &lt;code&gt;script&lt;/code&gt; crate&lt;/strong&gt; (@jdm, #35988, #35987, #36107, #36216, #36220, #36095), which will eventually make Servo faster to rebuild.&lt;/p&gt;
&lt;h2 id=&quot;servo-the-browser-(servoshell)&quot; tabindex=&quot;-1&quot;&gt;Servo-the-browser (servoshell) &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2025/04/24/this-month-in-servo/#servo-the-browser-(servoshell)&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;servoshell supports a new command-line argument: &lt;strong&gt;–enable-experimental-web-platform-features&lt;/strong&gt;. This argument enables incomplete engine features
that are not ready to be turned on by default. This can be useful when a page is not functioning correctly, since it may allow the page to make further progress.
The features enabled by this flag are expected to change over time as new web platform features are implemented in Servo.&lt;/p&gt;
&lt;p&gt;We fixed a crash when &lt;strong&gt;resizing the browsing area&lt;/strong&gt; too small (@sebsebmc, #35967).
Dialogs support &lt;strong&gt;keyboard interaction&lt;/strong&gt; to close and cancel them (@chickenleaf, #3567), and the URL bar accepts any &lt;strong&gt;domain-like input&lt;/strong&gt; (@kafji, #35756).
We also enabled &lt;strong&gt;sRGB colorspaces&lt;/strong&gt; on macOS for better colour fidelity (@IsaacMarovitz, #35683).
Using the &lt;code&gt;--userscripts&lt;/code&gt; argument without providing a path &lt;strong&gt;defaults to ./resources/user-agent-js/&lt;/strong&gt;.
Finally, we &lt;strong&gt;renamed the OpenHarmony app bundle&lt;/strong&gt; (@jschwe, #35790).&lt;/p&gt;
&lt;h2 id=&quot;servo-the-engine-(embedding)&quot; tabindex=&quot;-1&quot;&gt;Servo-the-engine (embedding) &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2025/04/24/this-month-in-servo/#servo-the-engine-(embedding)&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We added a memory usage view for Servo embedders: &lt;strong&gt;visit about:memory&lt;/strong&gt; for a breakdown of identified allocations (@webbeef, #35728).&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://servo.org/tmis/img/blog/servo-aboutmemory.png&quot;&gt;&lt;img alt=&quot;about:memory screenshot&quot; src=&quot;https://servo.org/tmis/img/blog/servo-aboutmemory.png&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;p&gt;Embedders can now &lt;strong&gt;inject userscript sources&lt;/strong&gt; into all webviews (@Legend-Master, #35388).
Links can be &lt;strong&gt;opened in a new tab&lt;/strong&gt; by pressing the ctrl/meta modifier (@webbeef, @mrobinson, #35017).
Delegates will receive &lt;strong&gt;send error notifications&lt;/strong&gt; for requests (@delan, #35668).&lt;/p&gt;
&lt;p&gt;We fixed a bug causing &lt;strong&gt;flickering cursors&lt;/strong&gt; (@DevGev, #35934), and now &lt;strong&gt;create the config directory&lt;/strong&gt; if it does not exist (@yezhizhen, #35761).
We also fixed a number of bugs in the webdriver server related to clicking on elements, opening and closing windows, and returning references to exotic objects (@jdm, #35737).
Setting a &lt;strong&gt;non-default value for &lt;code&gt;Preferences.shell_background_color_rgba&lt;/code&gt;&lt;/strong&gt; no longer cases a crash (@boluochoufeng, #35865).&lt;/p&gt;
&lt;p&gt;Finally, we made progress towards a per-webview renderer model (@mrobinson, @delan, #35701, #35716).&lt;/p&gt;
&lt;h2 id=&quot;perf-and-stability&quot; tabindex=&quot;-1&quot;&gt;Perf and stability &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2025/04/24/this-month-in-servo/#perf-and-stability&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;OffscreenRenderingContext&lt;/code&gt; is &lt;strong&gt;no longer double buffered&lt;/strong&gt;, which can improve rendering performance in embeddings that rely on it.
We also removed a source of &lt;strong&gt;canvas rendering latency&lt;/strong&gt; (@sagudev, #35719), and fixed performance cliffs related to the Shadow DOM (@simonwuelker, #35802, #35725).
We improved performance of block level layout by &lt;strong&gt;reducing allocations&lt;/strong&gt; (@jschwe, #35781), and reduced the &lt;strong&gt;latency of touch events&lt;/strong&gt; when they are non-cancelable (@kongbai1996, #35785).&lt;/p&gt;
&lt;p&gt;We also fixed crashes involving &lt;strong&gt;multiple touchmove events&lt;/strong&gt; (@kongbai1996, @jschwe, #35763), and &lt;strong&gt;focusing iframes&lt;/strong&gt; (@leftmostcat, #35742).
The project to decrease the risk of &lt;a href=&quot;https://github.com/servo/servo/issues/33140&quot;&gt;intermittent GC-related crashes&lt;/a&gt; continues to make progress (@jdm, @Arya-A-Nair, @Dericko681, #35753, #36014, #36043, #36156, #36116, #36180, #36111).
Additionally, we &lt;strong&gt;removed undefined behaviour&lt;/strong&gt; from the Rust bindings to the SpiderMonkey engine (@gmorenz, #35892, #36160, #36161, #36158).&lt;/p&gt;
&lt;style&gt;
    ._correction {
        max-width: 33em;
        margin: 1em auto;
        border-bottom: 1px solid;
        padding-bottom: 1em;
    }
    ._note {
        margin: 1em 1em;
        border-left: 1px solid;
        padding-left: 1em;
        opacity: 0.75;
    }
&lt;/style&gt;</content>
  </entry>
  <entry>
    <title>This month in Servo: new elements, IME support, delegate API, and more!</title>
    <link href="https://servo.org/tmis/blog/2025/03/10/this-month-in-servo/"/>
    <updated>2025-03-10T00:00:00Z</updated>
    <id>https://servo.org/tmis/blog/2025/03/10/this-month-in-servo/</id>
    <content xml:lang="en" type="html">&lt;p&gt;Servo now supports more HTML and CSS features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the &lt;strong&gt;&amp;lt;details&amp;gt;&lt;/strong&gt; element (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35261&quot;&gt;#35261&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;&amp;lt;meter&amp;gt;&lt;/strong&gt; element (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35524&quot;&gt;#35524&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;&amp;lt;progress&amp;gt;&lt;/strong&gt; element (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35531&quot;&gt;#35531&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;‘quotes’&lt;/strong&gt; property (&lt;a href=&quot;https://github.com/xiaochengh&quot;&gt;@xiaochengh&lt;/a&gt;, &lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34770&quot;&gt;#34770&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35420&quot;&gt;#35420&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;‘isolation’&lt;/strong&gt; property (&lt;a href=&quot;https://github.com/kkoyung&quot;&gt;@kkoyung&lt;/a&gt;, &lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35552&quot;&gt;#35552&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;‘overflow: clip’&lt;/strong&gt; (&lt;a href=&quot;https://github.com/longvatrong111&quot;&gt;@longvatrong111&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35103&quot;&gt;#35103&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;‘overflow’&lt;/strong&gt; property with two values (&lt;a href=&quot;https://github.com/yezhizhen&quot;&gt;@yezhizhen&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35414&quot;&gt;#35414&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;‘::slotted’&lt;/strong&gt; selector (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35352&quot;&gt;#35352&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;
&lt;p&gt;&lt;a href=&quot;https://servo.org/tmis/img/blog/february-2025.png&quot;&gt;&lt;img src=&quot;https://servo.org/tmis/img/blog/february-2025.png&quot; alt=&quot;servoshell showing new support for &amp;lt;details&amp;gt;, &amp;lt;meter&amp;gt;, and &amp;lt;progress&amp;gt; elements, plus layout support for &amp;lt;slot&amp;gt; elements&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/figure&gt;
&lt;p&gt;Plus several new web API features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;contextmenu&lt;/strong&gt; events (&lt;a href=&quot;https://github.com/pewsheen&quot;&gt;@pewsheen&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35364&quot;&gt;#35364&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WritableStream&lt;/strong&gt; (&lt;a href=&quot;https://github.com/gterzian&quot;&gt;@gterzian&lt;/a&gt;, &lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34844&quot;&gt;#34844&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ReadableStreamBYOBRequest&lt;/strong&gt; (&lt;a href=&quot;https://github.com/Taym95&quot;&gt;@Taym95&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35074&quot;&gt;#35074&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;initial support for &lt;strong&gt;FontFace&lt;/strong&gt; and its &lt;strong&gt;load()&lt;/strong&gt; method (&lt;a href=&quot;https://github.com/mukilan&quot;&gt;@mukilan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35262&quot;&gt;#35262&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;toBlob()&lt;/strong&gt; and &lt;strong&gt;toDataURL()&lt;/strong&gt; on &lt;strong&gt;WebGPU canvases&lt;/strong&gt; (&lt;a href=&quot;https://github.com/sagudev&quot;&gt;@sagudev&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35237&quot;&gt;#35237&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;bytes()&lt;/strong&gt; on &lt;strong&gt;Request&lt;/strong&gt;, &lt;strong&gt;Response&lt;/strong&gt;, and &lt;strong&gt;Blob&lt;/strong&gt; (&lt;a href=&quot;https://github.com/shanehandley&quot;&gt;@shanehandley&lt;/a&gt;, &lt;a href=&quot;https://github.com/yoseio&quot;&gt;@yoseio&lt;/a&gt;, &lt;a href=&quot;https://github.com/gterzian&quot;&gt;@gterzian&lt;/a&gt;, &lt;a href=&quot;https://github.com/Taym95&quot;&gt;@Taym95&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35250&quot;&gt;#35250&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35151&quot;&gt;#35151&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;href&lt;/strong&gt;, &lt;strong&gt;origin&lt;/strong&gt;, &lt;strong&gt;protocol&lt;/strong&gt;, &lt;strong&gt;username&lt;/strong&gt;, &lt;strong&gt;password&lt;/strong&gt;, &lt;strong&gt;host&lt;/strong&gt;, &lt;strong&gt;hostname&lt;/strong&gt;, &lt;strong&gt;port&lt;/strong&gt;, &lt;strong&gt;pathname&lt;/strong&gt;, &lt;strong&gt;search&lt;/strong&gt;, and &lt;strong&gt;hash&lt;/strong&gt; properties on &lt;strong&gt;HTMLAreaElement&lt;/strong&gt; (&lt;a href=&quot;https://github.com/shanehandley&quot;&gt;@shanehandley&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35482&quot;&gt;#35482&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;insertRule() with no argument&lt;/strong&gt; on &lt;strong&gt;CSSGroupingRule&lt;/strong&gt; (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35295&quot;&gt;#35295&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;slot&amp;gt; elements&lt;/strong&gt; are now fully supported including layout (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35220&quot;&gt;#35220&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35519&quot;&gt;#35519&lt;/a&gt;), and we’ve also landed support for the &lt;strong&gt;‘::slotted’&lt;/strong&gt; selector (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35352&quot;&gt;#35352&lt;/a&gt;).
&lt;strong&gt;Shadow roots&lt;/strong&gt; are now &lt;strong&gt;supported in devtools&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35294&quot;&gt;#35294&lt;/a&gt;), and we’ve fixed some bugs related to shadow DOM trees (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35276&quot;&gt;#35276&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35338&quot;&gt;#35338&lt;/a&gt;), event handling (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35380&quot;&gt;#35380&lt;/a&gt;), and custom elements (&lt;a href=&quot;https://github.com/maxtidev&quot;&gt;@maxtidev&lt;/a&gt;, &lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35382&quot;&gt;#35382&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;We’ve landed layout improvements around &lt;strong&gt;‘border-collapse’&lt;/strong&gt; (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35219&quot;&gt;#35219&lt;/a&gt;), &lt;strong&gt;‘align-content: normal’&lt;/strong&gt; (&lt;a href=&quot;https://github.com/rayguo17&quot;&gt;@rayguo17&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35178&quot;&gt;#35178&lt;/a&gt;), &lt;strong&gt;‘place-self’&lt;/strong&gt; with &lt;strong&gt;‘position: absolute’&lt;/strong&gt; (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35208&quot;&gt;#35208&lt;/a&gt;), the &lt;strong&gt;intrinsic sizing keywords&lt;/strong&gt; (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35413&quot;&gt;#35413&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35469&quot;&gt;#35469&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35471&quot;&gt;#35471&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35630&quot;&gt;#35630&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35642&quot;&gt;#35642&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35663&quot;&gt;#35663&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35652&quot;&gt;#35652&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35688&quot;&gt;#35688&lt;/a&gt;), and &lt;strong&gt;‘position: absolute’&lt;/strong&gt; now works correctly in a &lt;strong&gt;‘position: relative’ grid item&lt;/strong&gt; (&lt;a href=&quot;https://github.com/stevennovaryo&quot;&gt;@stevennovaryo&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35014&quot;&gt;#35014&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Input has also been improved, with &lt;strong&gt;better IME support&lt;/strong&gt; (&lt;a href=&quot;https://github.com/dklassic&quot;&gt;@dklassic&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35535&quot;&gt;#35535&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35623&quot;&gt;#35623&lt;/a&gt;) and several fixes to touch input (&lt;a href=&quot;https://github.com/kongbai1996&quot;&gt;@kongbai1996&lt;/a&gt;, &lt;a href=&quot;https://github.com/jschwe&quot;&gt;@jschwe&lt;/a&gt;, &lt;a href=&quot;https://github.com/shubhamg13&quot;&gt;@shubhamg13&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35450&quot;&gt;#35450&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35031&quot;&gt;#35031&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35550&quot;&gt;#35550&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35537&quot;&gt;#35537&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35692&quot;&gt;#35692&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&quot;servo-the-browser-(servoshell)&quot; tabindex=&quot;-1&quot;&gt;Servo-the-browser (servoshell) &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2025/03/10/this-month-in-servo/#servo-the-browser-(servoshell)&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Directory listings&lt;/strong&gt; are now enabled for local files (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35317&quot;&gt;#35317&lt;/a&gt;).&lt;/p&gt;
&lt;figure&gt;
&lt;p&gt;&lt;a href=&quot;https://servo.org/tmis/img/blog/2025-02-directory-listing.png&quot;&gt;&lt;img src=&quot;https://servo.org/tmis/img/blog/2025-02-directory-listing.png&quot; alt=&quot;servoshell showing a local directory listing&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/figure&gt;
&lt;p&gt;servoshell’s &lt;strong&gt;dialogs now use egui&lt;/strong&gt; (&lt;a href=&quot;https://github.com/chickenleaf&quot;&gt;@chickenleaf&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34823&quot;&gt;#34823&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35399&quot;&gt;#35399&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35464&quot;&gt;#35464&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35507&quot;&gt;#35507&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35564&quot;&gt;#35564&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35577&quot;&gt;#35577&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35657&quot;&gt;#35657&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35671&quot;&gt;#35671&lt;/a&gt;), rather than shelling out to a program like &lt;code&gt;zenity&lt;/code&gt; (&lt;a href=&quot;https://github.com/chickenleaf&quot;&gt;@chickenleaf&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35674&quot;&gt;#35674&lt;/a&gt;), making them more secure and no longer falling back to terminal input.&lt;/p&gt;
&lt;figure&gt;
&lt;p&gt;&lt;a href=&quot;https://servo.org/tmis/img/blog/2025-02-egui-dialogs.png&quot;&gt;&lt;img src=&quot;https://servo.org/tmis/img/blog/2025-02-egui-dialogs.png&quot; alt=&quot;egui-based dialogs for alert(), confirm(), prompt(), and HTTP authentication&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/figure&gt;
&lt;p&gt;We’ve also fixed a bug when closing a tab other than the current one (&lt;a href=&quot;https://github.com/pewsheen&quot;&gt;@pewsheen&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35569&quot;&gt;#35569&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&quot;servo-the-engine-(embedding)&quot; tabindex=&quot;-1&quot;&gt;Servo-the-engine (embedding) &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2025/03/10/this-month-in-servo/#servo-the-engine-(embedding)&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We’ve simplified our embedding API by &lt;strong&gt;merging all input event delivery&lt;/strong&gt; into &lt;a href=&quot;https://doc.servo.org/servo/struct.WebView.html#method.notify_input_event&quot;&gt;&lt;code&gt;WebView::notify_input_event&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/mukilan&quot;&gt;@mukilan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35430&quot;&gt;#35430&lt;/a&gt;), making &lt;strong&gt;bluetooth optional&lt;/strong&gt; (&lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/webbeef&quot;&gt;@webbeef&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35479&quot;&gt;#35479&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35590&quot;&gt;#35590&lt;/a&gt;), making the &lt;strong&gt;“background hang monitor” optional&lt;/strong&gt; (&lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35256&quot;&gt;#35256&lt;/a&gt;), and &lt;strong&gt;eliminating the need to depend on &lt;code&gt;webxr&lt;/code&gt;&lt;/strong&gt; (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35229&quot;&gt;#35229&lt;/a&gt;).
We’ve also moved some servoshell-only options out of &lt;a href=&quot;https://doc.servo.org/servo_config/opts/struct.Opts.html&quot;&gt;&lt;code&gt;Opts&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35377&quot;&gt;#35377&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35407&quot;&gt;#35407&lt;/a&gt;), since they have no effect on Servo’s behaviour.&lt;/p&gt;
&lt;p&gt;We’ve landed our initial &lt;strong&gt;delegate-based API&lt;/strong&gt; (&lt;a href=&quot;https://github.com/delan&quot;&gt;@delan&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/mukilan&quot;&gt;@mukilan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35196&quot;&gt;#35196&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35260&quot;&gt;#35260&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35297&quot;&gt;#35297&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35396&quot;&gt;#35396&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35400&quot;&gt;#35400&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35544&quot;&gt;#35544&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35579&quot;&gt;#35579&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35662&quot;&gt;#35662&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35672&quot;&gt;#35672&lt;/a&gt;), which replaces our old message-based API for integrating Servo with your app (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/delan&quot;&gt;@delan&lt;/a&gt;, &lt;a href=&quot;https://github.com/mukilan&quot;&gt;@mukilan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35284&quot;&gt;#35284&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35315&quot;&gt;#35315&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35366&quot;&gt;#35366&lt;/a&gt;).
By implementing &lt;a href=&quot;https://doc.servo.org/servo/trait.WebViewDelegate.html&quot;&gt;&lt;code&gt;WebViewDelegate&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://doc.servo.org/servo/trait.ServoDelegate.html&quot;&gt;&lt;code&gt;ServoDelegate&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://doc.servo.org/servo/struct.WebView.html#method.set_delegate&quot;&gt;installing&lt;/a&gt; &lt;a href=&quot;https://doc.servo.org/servo/struct.Servo.html#method.set_delegate&quot;&gt;them&lt;/a&gt;, you can have Servo call back into your app’s logic with ease.&lt;/p&gt;
&lt;p&gt;We’ve simplified the &lt;a href=&quot;https://doc.servo.org/servo/trait.RenderingContext.html&quot;&gt;&lt;code&gt;RenderingContext&lt;/code&gt;&lt;/a&gt; trait (&lt;a href=&quot;https://github.com/wusyong&quot;&gt;@wusyong&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35251&quot;&gt;#35251&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35553&quot;&gt;#35553&lt;/a&gt;) and &lt;strong&gt;added three built-in &lt;code&gt;RenderingContext&lt;/code&gt; impls&lt;/strong&gt; (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/mukilan&quot;&gt;@mukilan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35465&quot;&gt;#35465&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35501&quot;&gt;#35501&lt;/a&gt;), making it easier to set up a context Servo can render to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://doc.servo.org/servo/struct.WindowRenderingContext.html&quot;&gt;&lt;code&gt;WindowRenderingContext&lt;/code&gt;&lt;/a&gt; renders to a &lt;strong&gt;whole window&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://doc.servo.org/servo/struct.OffscreenRenderingContext.html&quot;&gt;&lt;code&gt;OffscreenRenderingContext&lt;/code&gt;&lt;/a&gt; renders to &lt;strong&gt;part of a window&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://doc.servo.org/servo/struct.SoftwareRenderingContext.html&quot;&gt;&lt;code&gt;SoftwareRenderingContext&lt;/code&gt;&lt;/a&gt; renders to an image, &lt;strong&gt;without hardware acceleration&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We’ve heavily reworked and documented our &lt;strong&gt;webview rendering model&lt;/strong&gt; (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/wusyong&quot;&gt;@wusyong&lt;/a&gt;, &lt;a href=&quot;https://github.com/mukilan&quot;&gt;@mukilan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35522&quot;&gt;#35522&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35621&quot;&gt;#35621&lt;/a&gt;), &lt;strong&gt;moved image output&lt;/strong&gt; and &lt;strong&gt;shutdown logic&lt;/strong&gt; out of the compositor (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/wusyong&quot;&gt;@wusyong&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35538&quot;&gt;#35538&lt;/a&gt;), and removed some complicated logic around synchronous repaints when a window is resized (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35283&quot;&gt;#35283&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35277&quot;&gt;#35277&lt;/a&gt;).
These changes should make it a lot clearer how to get Servo’s webviews onto your display.&lt;/p&gt;
&lt;p&gt;One part of this model that we’re starting to move away from is the support for multiple webviews in one rendering context (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/wusyong&quot;&gt;@wusyong&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35536&quot;&gt;#35536&lt;/a&gt;).
First landed in &lt;a href=&quot;https://github.com/servo/servo/pull/31417&quot;&gt;#31417&lt;/a&gt;, this was an expedient way to add support for multiple webviews, but it imposed some serious limitations on how webviews could be interleaved with other app content, and the performance and security was inadequate.&lt;/p&gt;
&lt;p&gt;We’ve &lt;strong&gt;updated our &lt;a href=&quot;https://github.com/servo/servo/blob/139774e6b55c297bc94f7fcb8c9bf5bb8c6a7474/components/servo/examples/winit_minimal.rs&quot;&gt;winit_minimal example&lt;/a&gt;&lt;/strong&gt; to take advantage of these changes (&lt;a href=&quot;https://github.com/webbeef&quot;&gt;@webbeef&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35350&quot;&gt;#35350&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35686&quot;&gt;#35686&lt;/a&gt;), simplify it further (&lt;a href=&quot;https://github.com/robertohuertasm&quot;&gt;@robertohuertasm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35253&quot;&gt;#35253&lt;/a&gt;), and fix window resizing (&lt;a href=&quot;https://github.com/webbeef&quot;&gt;@webbeef&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35691&quot;&gt;#35691&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&quot;perf-and-stability&quot; tabindex=&quot;-1&quot;&gt;Perf and stability &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2025/03/10/this-month-in-servo/#perf-and-stability&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The compositor now &lt;strong&gt;notifies the embedder of new frames immediately&lt;/strong&gt; (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35369&quot;&gt;#35369&lt;/a&gt;), not via the constellation thread.&lt;/p&gt;
&lt;p&gt;Servo’s typical &lt;strong&gt;memory usage has been reduced by over 1%&lt;/strong&gt; thanks to Node object optimisations (&lt;a href=&quot;https://github.com/webbeef&quot;&gt;@webbeef&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35592&quot;&gt;#35592&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35554&quot;&gt;#35554&lt;/a&gt;), and we’ve also improved our &lt;a href=&quot;https://book.servo.org/hacking/profiling.html#memory-profiling&quot;&gt;memory profiler&lt;/a&gt; (&lt;a href=&quot;https://github.com/webbeef&quot;&gt;@webbeef&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35618&quot;&gt;#35618&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35607&quot;&gt;#35607&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;We’ve fixed a bug causing very high CPU usage on sites like &lt;a href=&quot;http://wikipedia.org/&quot;&gt;wikipedia.org&lt;/a&gt; (&lt;a href=&quot;https://github.com/webbeef&quot;&gt;@webbeef&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35245&quot;&gt;#35245&lt;/a&gt;), as well as bugs affecting requestAnimationFrame (&lt;a href=&quot;https://github.com/mukilan&quot;&gt;@mukilan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35387&quot;&gt;#35387&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35435&quot;&gt;#35435&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;You can now configure our tracing-based profiler (&lt;code&gt;--features tracing&lt;/code&gt;) with &lt;code&gt;servo --tracing-filter&lt;/code&gt; instead of &lt;code&gt;SERVO_TRACING&lt;/code&gt; (&lt;a href=&quot;https://github.com/jschwe&quot;&gt;@jschwe&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35370&quot;&gt;#35370&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;We’ve continued &lt;strong&gt;reducing our use of &lt;code&gt;unsafe&lt;/code&gt; in script&lt;/strong&gt; (&lt;a href=&quot;https://github.com/nscaife&quot;&gt;@nscaife&lt;/a&gt;, &lt;a href=&quot;https://github.com/stephenmuss&quot;&gt;@stephenmuss&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35351&quot;&gt;#35351&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35360&quot;&gt;#35360&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35367&quot;&gt;#35367&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35411&quot;&gt;#35411&lt;/a&gt;), and &lt;strong&gt;moving parts of &lt;code&gt;script&lt;/code&gt; to &lt;code&gt;script_bindings&lt;/code&gt;&lt;/strong&gt; (&lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35279&quot;&gt;#35279&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35280&quot;&gt;#35280&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35292&quot;&gt;#35292&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35457&quot;&gt;#35457&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35459&quot;&gt;#35459&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35578&quot;&gt;#35578&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35620&quot;&gt;#35620&lt;/a&gt;).
Breaking up our massive &lt;code&gt;script&lt;/code&gt; crate is absolutely critical for reducing Servo’s build times.&lt;/p&gt;
&lt;p&gt;We’ve fixed crashes that happen when moving windows past the edge of your monitor (&lt;a href=&quot;https://github.com/webbeef&quot;&gt;@webbeef&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35235&quot;&gt;#35235&lt;/a&gt;), when unpaired UTF-16 surrogates are sent to the DOM (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35381&quot;&gt;#35381&lt;/a&gt;), when focusing elements inside shadow roots (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35606&quot;&gt;#35606&lt;/a&gt;), and when calling getAsString() on a DataTransferItem (&lt;a href=&quot;https://github.com/Gae24&quot;&gt;@Gae24&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35699&quot;&gt;#35699&lt;/a&gt;).
We’ve also continued working on static analysis that will help catch crashes due to &lt;a href=&quot;https://github.com/servo/servo/issues/33140&quot;&gt;GC borrow hazards&lt;/a&gt; (&lt;a href=&quot;https://github.com/augustebaum&quot;&gt;@augustebaum&lt;/a&gt;, &lt;a href=&quot;https://github.com/yerke&quot;&gt;@yerke&lt;/a&gt;, &lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/Gae24&quot;&gt;@Gae24&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35541&quot;&gt;#35541&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35593&quot;&gt;#35593&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35565&quot;&gt;#35565&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35610&quot;&gt;#35610&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35591&quot;&gt;#35591&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35609&quot;&gt;#35609&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35601&quot;&gt;#35601&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35596&quot;&gt;#35596&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35595&quot;&gt;#35595&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35594&quot;&gt;#35594&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35597&quot;&gt;#35597&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35622&quot;&gt;#35622&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35604&quot;&gt;#35604&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35616&quot;&gt;#35616&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35605&quot;&gt;#35605&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35640&quot;&gt;#35640&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35647&quot;&gt;#35647&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35646&quot;&gt;#35646&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&quot;donations&quot; tabindex=&quot;-1&quot;&gt;Donations &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2025/03/10/this-month-in-servo/#donations&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks again for your generous support!
We are now receiving &lt;strong&gt;4363 USD/month&lt;/strong&gt; (+13.7% over January) in recurring donations.
This helps cover the cost of our &lt;a href=&quot;https://ci0.servo.org/&quot;&gt;self-hosted&lt;/a&gt; &lt;a href=&quot;https://ci1.servo.org/&quot;&gt;CI&lt;/a&gt; &lt;a href=&quot;https://ci2.servo.org/&quot;&gt;runners&lt;/a&gt; and &lt;a href=&quot;https://www.outreachy.org/&quot;&gt;Outreachy&lt;/a&gt; internships.&lt;/p&gt;
&lt;p&gt;Servo is also on &lt;a href=&quot;https://thanks.dev/&quot;&gt;thanks.dev&lt;/a&gt;, and already &lt;strong&gt;21 GitHub users&lt;/strong&gt; (+5 over January) that depend on Servo are sponsoring us there.
If you use Servo libraries like &lt;a href=&quot;https://crates.io/crates/url/reverse_dependencies&quot;&gt;url&lt;/a&gt;, &lt;a href=&quot;https://crates.io/crates/html5ever/reverse_dependencies&quot;&gt;html5ever&lt;/a&gt;, &lt;a href=&quot;https://crates.io/crates/selectors/reverse_dependencies&quot;&gt;selectors&lt;/a&gt;, or &lt;a href=&quot;https://crates.io/crates/cssparser/reverse_dependencies&quot;&gt;cssparser&lt;/a&gt;, signing up for &lt;a href=&quot;https://thanks.dev/&quot;&gt;thanks.dev&lt;/a&gt; could be a good way for you (or your employer) to give back to the community.&lt;/p&gt;
&lt;figure class=&quot;_fig&quot; style=&quot;width: 100%; margin: 1em 0;&quot;&gt;&lt;div class=&quot;_flex&quot; style=&quot;height: calc(1lh + 3em); flex-flow: column nowrap; text-align: left;&quot;&gt;
    &lt;div style=&quot;position: relative; text-align: right;&quot;&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% * 4363 / 10000); padding-left: 0.5em;&quot;&gt;&lt;strong&gt;4363&lt;/strong&gt; USD/month&lt;/div&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% * 4363 / 10000); height: calc(1lh + 1.5em); border-left: 1px solid;&quot;&gt;&lt;/div&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% - 0.5em); height: calc(1lh + 1.5em); border-left: 1px solid;&quot;&gt;&lt;/div&gt;
        &lt;div style=&quot;padding-right: 1em;&quot;&gt;&lt;strong&gt;10000&lt;/strong&gt;&lt;!-- USD/month --&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;progress value=&quot;4363&quot; max=&quot;10000&quot; style=&quot;transform: scale(3); transform-origin: top left; width: calc(100% / 3);&quot;&gt;&lt;/progress&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;As always, use of these funds will be decided transparently in the Technical Steering Committee.
For more details, head to our &lt;a href=&quot;https://servo.org/tmis/sponsorship/&quot;&gt;Sponsorship page&lt;/a&gt;.&lt;/p&gt;
&lt;style&gt;
    ._correction {
        max-width: 33em;
        margin: 1em auto;
        border-bottom: 1px solid;
        padding-bottom: 1em;
    }
    ._note {
        margin: 1em 1em;
        border-left: 1px solid;
        padding-left: 1em;
        opacity: 0.75;
    }
&lt;/style&gt;
</content>
  </entry>
  <entry>
    <title>Servo Security Report: findings and solutions</title>
    <link href="https://servo.org/tmis/blog/2025/02/26/servo-security-report/"/>
    <updated>2025-02-26T00:00:00Z</updated>
    <id>https://servo.org/tmis/blog/2025/02/26/servo-security-report/</id>
    <content xml:lang="en" type="html">&lt;p&gt;The Servo project has received several grants from &lt;a href=&quot;https://nlnet.nl/&quot;&gt;&lt;strong&gt;NLnet Foundation&lt;/strong&gt;&lt;/a&gt;, and as part of these grants, NLnet offers different &lt;a href=&quot;https://nlnet.nl/NGI0/services/&quot;&gt;support services&lt;/a&gt;. These services include security audits from &lt;a href=&quot;https://radicallyopensecurity.com/&quot;&gt;&lt;strong&gt;Radically Open Security&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In one of our projects with NLnet, we were working on &lt;a href=&quot;https://nlnet.nl/project/Servo/&quot;&gt;adding support for &lt;strong&gt;CSS floats&lt;/strong&gt; and &lt;strong&gt;tables&lt;/strong&gt;&lt;/a&gt; in Servo. Once the project was completed, we reached out to Radically Open Security to run a security audit. The focus of the audit was in the code related to that project, so the main components investigated were the CSS code paths in the layout engine and Stylo. As part of this audit, four vulnerabilities were identified:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ID&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;&lt;a href=&quot;http://www.pentest-standard.org/index.php/Reporting&quot;&gt;Threat level&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CLN-009&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Third-Party Library Vulnerability&lt;/td&gt;
&lt;td&gt;Servo uses an outdated version of the time crate that is vulnerable to a known issue.&lt;/td&gt;
&lt;td&gt;Moderate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CLN-004&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Arithmetic underflow&lt;/td&gt;
&lt;td&gt;By calling methods on a TableBuilder object in a specific order, an integer underflow can be triggered, followed by an attempted out-of-bounds access, which is caught by Rust, resulting in a panic.&lt;/td&gt;
&lt;td&gt;Low&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CLN-002&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Arithmetic underflow&lt;/td&gt;
&lt;td&gt;An arithmetic underflow condition is currently impossible to trigger, but may become accessible as its surrounding logic evolves.&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CLN-007&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Unguarded casting&lt;/td&gt;
&lt;td&gt;Casting from an unsigned platform pointer-width integer into a fixed-width signed integer may result in erroneous layouts.&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;If you want to know more details you can read the &lt;a href=&quot;https://servo.org/tmis/files/ngie-servo-penetration-test-report-2024-1.0.pdf&quot;&gt;&lt;strong&gt;full report&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first issue (&lt;code&gt;CLN-009&lt;/code&gt;) was related to a known vulnerability in version 0.1 of the &lt;code&gt;time&lt;/code&gt; crate that Servo depended on (&lt;a href=&quot;https://rustsec.org/advisories/RUSTSEC-2020-0071&quot;&gt;&lt;code&gt;RUSTSEC-2020-0071&lt;/code&gt;&lt;/a&gt;). We had &lt;a href=&quot;https://github.com/servo/servo/pulls?q=is%3Apr+merged%3A%3E%3D2023-10-26+in%3Atitle++%28+%22time%400.1%22+OR+%22legacy+time%22+OR+%22time+crate%22+OR+%22stop+using+time%22+OR+%22std%3A%3Atime%22+%29+&quot;&gt;removed this in most of Servo&lt;/a&gt;, but there was one remaining dependency in WebRender. We have since addressed this vulnerability by removing it from the version of WebRender used in Servo (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35325&quot;&gt;#35325&lt;/a&gt;), and we will also try to upstream our changes so that Firefox is unaffected.&lt;/p&gt;
&lt;p&gt;We have also fixed the second (&lt;code&gt;CLN-004&lt;/code&gt;) and third (&lt;code&gt;CLN-002&lt;/code&gt;) issues by making the affected code more robust (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34247&quot;&gt;#34247&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35437&quot;&gt;#35437&lt;/a&gt;), in the event web content can trigger them.&lt;/p&gt;
&lt;p&gt;The fourth issue (&lt;code&gt;CLN-007&lt;/code&gt;) is not urgent, since the values are constrained elsewhere and it would otherwise only affect layout correctness and not security, but it’s worth fixing at some point too.&lt;/p&gt;
&lt;p&gt;Servo has long been highlighted for being &lt;strong&gt;a memory-safe and concurrency-safe web rendering engine&lt;/strong&gt;, thanks to the guarantees provided by the Rust programming language, including its ownership system, borrow checker, and built-in data structures that enable safe concurrent programming. These features help prevent memory and concurrency vulnerabilities, such as use-after-free bugs and data races.&lt;/p&gt;
&lt;p&gt;We find it promising that this security audit, although smaller and of limited scope, &lt;strong&gt;identified no severe vulnerabilities&lt;/strong&gt;, especially none of that nature, and that we were able to address any vulnerabilities identified. This was a positive experience for Servo and the web, and we’re keen to explore more security auditing for Servo in the future.&lt;/p&gt;
&lt;p&gt;Thanks to the folks at &lt;a href=&quot;https://radicallyopensecurity.com/&quot;&gt;Radically Open Security&lt;/a&gt; for their work on this audit, and &lt;a href=&quot;https://nlnet.nl/&quot;&gt;NLnet Foundation&lt;/a&gt; for continuously supporting the Servo project.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>This month in Servo: new webview API, relative colors, canvas buffs, and more!</title>
    <link href="https://servo.org/tmis/blog/2025/02/19/this-month-in-servo/"/>
    <updated>2025-02-19T00:00:00Z</updated>
    <id>https://servo.org/tmis/blog/2025/02/19/this-month-in-servo/</id>
    <content xml:lang="en" type="html">&lt;p&gt;Servo now supports several new web API features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:host selector&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34870&quot;&gt;#34870&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;lt;slot&amp;gt; elements&lt;/strong&gt; in the DOM (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35013&quot;&gt;#35013&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35177&quot;&gt;#35177&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35191&quot;&gt;#35191&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35221&quot;&gt;#35221&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35137&quot;&gt;#35137&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35222&quot;&gt;#35222&lt;/a&gt;), with layout support landing next month&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Relative CSS colors&lt;/strong&gt;, like &lt;strong&gt;color(from …)&lt;/strong&gt; and &lt;strong&gt;rgb(from …)&lt;/strong&gt; (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34897&quot;&gt;#34897&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ClipboardEvent&lt;/strong&gt; (&lt;a href=&quot;https://github.com/Gae24&quot;&gt;@Gae24&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33576&quot;&gt;#33576&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35146&quot;&gt;#35146&lt;/a&gt;), with &lt;code&gt;--pref dom_clipboardevent_enabled&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Detecting WGSL extensions via &lt;strong&gt;WGSLLanguageFeatures&lt;/strong&gt; (&lt;a href=&quot;https://github.com/sagudev&quot;&gt;@sagudev&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34928&quot;&gt;#34928&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pointer_composite_access&lt;/strong&gt; WGSL extension (&lt;a href=&quot;https://github.com/sagudev&quot;&gt;@sagudev&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35161&quot;&gt;#35161&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;blitFramebuffer()&lt;/strong&gt; on &lt;strong&gt;WebGL2RenderingContext&lt;/strong&gt; (&lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, Istvan, &lt;a href=&quot;https://github.com/servo/servo/pull/26389&quot;&gt;#26389&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;media&lt;/strong&gt; property on &lt;strong&gt;HTMLStyleElement&lt;/strong&gt; (&lt;a href=&quot;https://github.com/webbeef&quot;&gt;@webbeef&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35148&quot;&gt;#35148&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We’ve landed a bunch of &lt;strong&gt;HTMLCanvasElement&lt;/strong&gt; improvements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;toDataURL()&lt;/strong&gt; now supports &lt;strong&gt;image/jpeg&lt;/strong&gt; and &lt;strong&gt;image/webp&lt;/strong&gt; (&lt;a href=&quot;https://github.com/webbeef&quot;&gt;@webbeef&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34861&quot;&gt;#34861&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;toBlob()&lt;/strong&gt; is now supported (&lt;a href=&quot;https://github.com/webbeef&quot;&gt;@webbeef&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34938&quot;&gt;#34938&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;transferControlToOffscreen()&lt;/strong&gt; is now supported (&lt;a href=&quot;https://github.com/webbeef&quot;&gt;@webbeef&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34959&quot;&gt;#34959&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure style=&quot;display: flex; justify-content: center;&quot;&gt;
  &lt;a href=&quot;https://servo.org/tmis/img/blog/january-2025.png&quot;&gt;&lt;img src=&quot;https://servo.org/tmis/img/blog/january-2025.png&quot; alt=&quot;servoshell nightly showing relative oklch() colors, canvas toDataURL() with image/jpeg and image/webp, canvas toBlob(), the WGSLLanguageFeatures API, and the DOM tree of a custom element with a &lt;slot&gt;&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Streams&lt;/strong&gt; are a lot more useful now, with &lt;strong&gt;ReadableStreamBYOBReader&lt;/strong&gt; now supporting &lt;strong&gt;read()&lt;/strong&gt; (&lt;a href=&quot;https://github.com/Taym95&quot;&gt;@Taym95&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35040&quot;&gt;#35040&lt;/a&gt;), &lt;strong&gt;cancel()&lt;/strong&gt;, &lt;strong&gt;close()&lt;/strong&gt;, and &lt;strong&gt;releaseLock()&lt;/strong&gt; (&lt;a href=&quot;https://github.com/Taym95&quot;&gt;@Taym95&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34958&quot;&gt;#34958&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Servo now &lt;strong&gt;passes &lt;a href=&quot;https://wpt.servo.org/&quot;&gt;40.6%&lt;/a&gt;&lt;/strong&gt; (+7.5pp) of enabled &lt;strong&gt;Shadow DOM&lt;/strong&gt; tests, thanks to our landing support for the &lt;strong&gt;:host selector&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34870&quot;&gt;#34870&lt;/a&gt;) and the &lt;strong&gt;&amp;lt;slot&amp;gt; element&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35013&quot;&gt;#35013&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35177&quot;&gt;#35177&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35191&quot;&gt;#35191&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35221&quot;&gt;#35221&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35137&quot;&gt;#35137&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35222&quot;&gt;#35222&lt;/a&gt;), plus improvements to event handling (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34788&quot;&gt;#34788&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34884&quot;&gt;#34884&lt;/a&gt;), script (&lt;a href=&quot;https://github.com/willypuzzle&quot;&gt;@willypuzzle&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34787&quot;&gt;#34787&lt;/a&gt;), style (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35198&quot;&gt;#35198&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35132&quot;&gt;#35132&lt;/a&gt;), and the DOM tree (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/Taym95&quot;&gt;@Taym95&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34803&quot;&gt;#34803&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34834&quot;&gt;#34834&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34863&quot;&gt;#34863&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34909&quot;&gt;#34909&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35076&quot;&gt;#35076&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table layout&lt;/strong&gt; is significantly better now, particularly in ‘table-layout: fixed’ (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35170&quot;&gt;#35170&lt;/a&gt;), table sizing (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34889&quot;&gt;#34889&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34947&quot;&gt;#34947&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35167&quot;&gt;#35167&lt;/a&gt;), rowspan sizing (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35095&quot;&gt;#35095&lt;/a&gt;), interaction with floats (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35207&quot;&gt;#35207&lt;/a&gt;), and ‘border-collapse’ layout (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34932&quot;&gt;#34932&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34908&quot;&gt;#34908&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35097&quot;&gt;#35097&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35122&quot;&gt;#35122&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35165&quot;&gt;#35165&lt;/a&gt;) and painting (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34933&quot;&gt;#34933&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35003&quot;&gt;#35003&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35100&quot;&gt;#35100&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35075&quot;&gt;#35075&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35129&quot;&gt;#35129&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35163&quot;&gt;#35163&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;As a result, Servo now &lt;strong&gt;passes &lt;a href=&quot;https://wpt.servo.org/&quot;&gt;90.2%&lt;/a&gt;&lt;/strong&gt; (+11.5pp) of enabled &lt;strong&gt;CSS tables&lt;/strong&gt; tests, and of the tests that are in CSS 2, we now &lt;a href=&quot;https://wpt.fyi/results/css/CSS2/tables?sha=d46d9abdea&amp;amp;max-count=1&amp;amp;to=2025-02-01T00%3A00%3A00.000Z&amp;amp;product=servo&amp;amp;product=chrome&amp;amp;product=safari&amp;amp;product=firefox&quot;&gt;&lt;strong&gt;pass more than Blink and WebKit!&lt;/strong&gt;&lt;/a&gt;
We literally stood on the shoulders of giants here, because this would not have been possible without &lt;a href=&quot;https://github.com/servo/servo/blob/3122de08f3571a4026e825dd3ef6412cb37abfae/components/layout_2020/table/mod.rs#L8-L11&quot;&gt;Blink’s&lt;/a&gt; &lt;a href=&quot;https://github.com/servo/servo/blob/3122de08f3571a4026e825dd3ef6412cb37abfae/components/layout_2020/table/layout.rs#L650-L654&quot;&gt;robust&lt;/a&gt; &lt;a href=&quot;https://github.com/servo/servo/blob/3122de08f3571a4026e825dd3ef6412cb37abfae/components/layout_2020/table/layout.rs#L1246-L1248&quot;&gt;table&lt;/a&gt; &lt;a href=&quot;https://github.com/servo/servo/blob/3122de08f3571a4026e825dd3ef6412cb37abfae/components/layout_2020/table/layout.rs#L1332-L1333&quot;&gt;impl&lt;/a&gt;.
Despite their age, &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/9781&quot;&gt;tables&lt;/a&gt; &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/9916&quot;&gt;are&lt;/a&gt; &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/10132&quot;&gt;surprisingly&lt;/a&gt; &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/10133&quot;&gt;underspecified&lt;/a&gt;, &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/10881&quot;&gt;so&lt;/a&gt; &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/10885&quot;&gt;we&lt;/a&gt; &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/10937&quot;&gt;also&lt;/a&gt; &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/11171&quot;&gt;needed&lt;/a&gt; &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/11404&quot;&gt;to&lt;/a&gt; &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/11408&quot;&gt;report&lt;/a&gt; &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/11419&quot;&gt;several&lt;/a&gt; &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/11489&quot;&gt;spec&lt;/a&gt; &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/11504&quot;&gt;issues&lt;/a&gt; &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/11515&quot;&gt;along&lt;/a&gt; &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/11568&quot;&gt;the&lt;/a&gt; &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/11570&quot;&gt;way&lt;/a&gt; (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&quot;embedding&quot; tabindex=&quot;-1&quot;&gt;Embedding &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2025/02/19/this-month-in-servo/#embedding&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Servo aims to be an embeddable web engine, but so far it’s been a lot harder to embed Servo than it should be.&lt;/p&gt;
&lt;p&gt;For one, configuring and starting Servo is complicated.
We found that getting Servo running at all, even without wiring up input or handling resizes correctly, took &lt;strong&gt;over 200 lines&lt;/strong&gt; of Rust code (&lt;a href=&quot;https://github.com/delan&quot;&gt;@delan&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35118&quot;&gt;#35118&lt;/a&gt;).
Embedders (apps) could only control Servo by sending and receiving a variety of “messages” and “events”, and simple questions like “what’s the current URL?” were impossible to answer without keeping track of extra state in the app.&lt;/p&gt;
&lt;p&gt;Contrast this with &lt;a href=&quot;https://webkitgtk.org/&quot;&gt;WebKitGTK&lt;/a&gt;, where you can write a minimal kiosk app with a fully-functional webview in &lt;strong&gt;under 50 lines&lt;/strong&gt; of C.
To close that gap, we’ve started &lt;strong&gt;reworking our embedding API&lt;/strong&gt; towards something more idiomatic and ergonomic, starting with the concept embedders care about most: the &lt;em&gt;webview&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Our new webview API is controlled by calling methods on a &lt;strong&gt;&lt;a href=&quot;https://doc.servo.org/servo/struct.WebView.html&quot;&gt;WebView&lt;/a&gt; handle&lt;/strong&gt; (&lt;a href=&quot;https://github.com/delan&quot;&gt;@delan&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35119&quot;&gt;#35119&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35183&quot;&gt;#35183&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35192&quot;&gt;#35192&lt;/a&gt;), including navigation and user input.
Handles will eventually represent the lifecycle of the webview itself; if you have one, the webview is valid, and if you drop them, the webview is destroyed.&lt;/p&gt;
&lt;p&gt;Servo needs to call into the embedder too, and here we’ve started replacing the old EmbedderMsg API with a &lt;strong&gt;webview delegate&lt;/strong&gt; (&lt;a href=&quot;https://github.com/delan&quot;&gt;@delan&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35211&quot;&gt;#35211&lt;/a&gt;), much like the delegates in &lt;a href=&quot;https://developer.apple.com/documentation/webkit/wkuidelegate?language=objc&quot;&gt;Apple’s WebKit API&lt;/a&gt;.
In Rust, a delegate is a &lt;code&gt;trait&lt;/code&gt; that the embedder can install its own &lt;code&gt;impl&lt;/code&gt; for.
Stay tuned for more on this next month!&lt;/p&gt;
&lt;p&gt;Embedders can now &lt;strong&gt;intercept any request&lt;/strong&gt;, not just navigation (&lt;a href=&quot;https://github.com/zhuhaichao518&quot;&gt;@zhuhaichao518&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34961&quot;&gt;#34961&lt;/a&gt;), and you can now identify the webview that caused an &lt;strong&gt;HTTP credentials prompt&lt;/strong&gt; (&lt;a href=&quot;https://github.com/pewsheen&quot;&gt;@pewsheen&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34808&quot;&gt;#34808&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Other embedding improvements include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adding a trait to allow for alternative rendering contexts that are better suited to certain applications (&lt;a href=&quot;https://github.com/dklassic&quot;&gt;@dklassic&lt;/a&gt;, &lt;a href=&quot;https://github.com/wusyong&quot;&gt;@wusyong&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35052&quot;&gt;#35052&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34813&quot;&gt;#34813&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34780&quot;&gt;#34780&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Simplifying types used by consumers of libservo (&lt;a href=&quot;https://github.com/delan&quot;&gt;@delan&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35156&quot;&gt;#35156&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Making it easier to build Servo without crown (&lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35055&quot;&gt;#35055&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;other-changes&quot; tabindex=&quot;-1&quot;&gt;Other changes &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2025/02/19/this-month-in-servo/#other-changes&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We’ve reworked Servo’s &lt;strong&gt;preferences system&lt;/strong&gt;, making all prefs optional with reasonable defaults (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34966&quot;&gt;#34966&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34999&quot;&gt;#34999&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34994&quot;&gt;#34994&lt;/a&gt;).
As a result:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The names of all preferences have changed&lt;/strong&gt;; see the &lt;a href=&quot;https://doc.servo.org/servo_config/prefs/struct.Preferences.html&quot;&gt;Prefs docs&lt;/a&gt; for a list&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embedders no longer need a &lt;code&gt;prefs.json&lt;/code&gt;&lt;/strong&gt; resource to get Servo running&lt;/li&gt;
&lt;li&gt;Some debug options were converted to preferences (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34998&quot;&gt;#34998&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Devtools now &lt;strong&gt;highlights console.log() arguments&lt;/strong&gt; according to their types (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34810&quot;&gt;#34810&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Servo’s networking is more efficient now, with the ability to &lt;strong&gt;cancel fetches for navigation&lt;/strong&gt; that contain redirects (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34919&quot;&gt;#34919&lt;/a&gt;) and &lt;strong&gt;cancel fetches for &amp;lt;video&amp;gt; and &amp;lt;media&amp;gt;&lt;/strong&gt; when the document is unloaded (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34883&quot;&gt;#34883&lt;/a&gt;).
Those changes also &lt;strong&gt;eliminate per-request IPC channels&lt;/strong&gt; for navigation and cancellation respectively, and in the same vein, we’ve eliminated them for image loading too (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35041&quot;&gt;#35041&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;We’ve continued &lt;strong&gt;splitting up our massive script crate&lt;/strong&gt; (&lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34359&quot;&gt;#34359&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35157&quot;&gt;#35157&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35169&quot;&gt;#35169&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35172&quot;&gt;#35172&lt;/a&gt;), which will eventually make Servo much faster to build.&lt;/p&gt;
&lt;p&gt;A few crashes have been fixed, including when exiting Servo (&lt;a href=&quot;https://github.com/mukilan&quot;&gt;@mukilan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34917&quot;&gt;#34917&lt;/a&gt;), when using the &lt;a href=&quot;https://book.servo.org/hacking/profiling.html#memory-profiling&quot;&gt;internal memory profiler&lt;/a&gt; (&lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35058&quot;&gt;#35058&lt;/a&gt;), and when running ResizeObserver callbacks (&lt;a href=&quot;https://github.com/willypuzzle&quot;&gt;@willypuzzle&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35168&quot;&gt;#35168&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&quot;for-developers&quot; tabindex=&quot;-1&quot;&gt;For developers &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2025/02/19/this-month-in-servo/#for-developers&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We now run &lt;strong&gt;CI smoketests on OpenHarmony&lt;/strong&gt; using a real device (&lt;a href=&quot;https://github.com/jschwe&quot;&gt;@jschwe&lt;/a&gt;, &lt;a href=&quot;https://github.com/mukilan&quot;&gt;@mukilan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35006&quot;&gt;#35006&lt;/a&gt;), increasing confidence in your changes beyond compile-time errors.&lt;/p&gt;
&lt;p&gt;We’ve also tripled our &lt;strong&gt;self-hosted CI runner capacity&lt;/strong&gt; (&lt;a href=&quot;https://github.com/delan&quot;&gt;@delan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34983&quot;&gt;#34983&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/35002&quot;&gt;#35002&lt;/a&gt;), making concurrent Windows and macOS builds possible without falling back to the much slower GitHub-hosted runners.&lt;/p&gt;
&lt;p&gt;Servo can’t yet run WebDriver-based tests on &lt;a href=&quot;https://wpt.fyi/&quot;&gt;wpt.fyi&lt;/a&gt;, &lt;a href=&quot;https://wpt.servo.org/&quot;&gt;wpt.servo.org&lt;/a&gt;, or CI, because the &lt;code&gt;servo&lt;/code&gt; executor for the &lt;a href=&quot;https://web-platform-tests.org/&quot;&gt;Web Platform Tests&lt;/a&gt; does not support testdriver.js.
&lt;code&gt;servodriver&lt;/code&gt; does, though, so we’ve started fixing test regressions with that executor with the goal of eventually switching to it (&lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34957&quot;&gt;#34957&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34997&quot;&gt;#34997&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&quot;donations&quot; tabindex=&quot;-1&quot;&gt;Donations &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2025/02/19/this-month-in-servo/#donations&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks again for your generous support!
We are now receiving &lt;strong&gt;3835 USD/month&lt;/strong&gt; (−11.4% over December) in recurring donations.
With this money, we’ve been able to expand our capacity for &lt;a href=&quot;https://ci0.servo.org/&quot;&gt;self-hosted&lt;/a&gt; &lt;a href=&quot;https://ci1.servo.org/&quot;&gt;CI&lt;/a&gt; &lt;a href=&quot;https://ci2.servo.org/&quot;&gt;runners&lt;/a&gt; on Windows, Linux, and macOS builds, &lt;strong&gt;halving &lt;code&gt;mach try&lt;/code&gt; build times&lt;/strong&gt; from over an hour to under 30 minutes!&lt;/p&gt;
&lt;p&gt;Servo is also on &lt;a href=&quot;https://thanks.dev/&quot;&gt;thanks.dev&lt;/a&gt;, and already &lt;strong&gt;21 GitHub users&lt;/strong&gt; (+5 over December) that depend on Servo are sponsoring us there.
If you use Servo libraries like &lt;a href=&quot;https://crates.io/crates/url/reverse_dependencies&quot;&gt;url&lt;/a&gt;, &lt;a href=&quot;https://crates.io/crates/html5ever/reverse_dependencies&quot;&gt;html5ever&lt;/a&gt;, &lt;a href=&quot;https://crates.io/crates/selectors/reverse_dependencies&quot;&gt;selectors&lt;/a&gt;, or &lt;a href=&quot;https://crates.io/crates/cssparser/reverse_dependencies&quot;&gt;cssparser&lt;/a&gt;, signing up for &lt;a href=&quot;https://thanks.dev/&quot;&gt;thanks.dev&lt;/a&gt; could be a good way for you (or your employer) to give back to the community.&lt;/p&gt;
&lt;figure class=&quot;_fig&quot; style=&quot;width: 100%; margin: 1em 0;&quot;&gt;&lt;div class=&quot;_flex&quot; style=&quot;height: calc(1lh + 3em); flex-flow: column nowrap; text-align: left;&quot;&gt;
    &lt;div style=&quot;position: relative; text-align: right;&quot;&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% * 3835 / 10000); padding-left: 0.5em;&quot;&gt;&lt;strong&gt;3835&lt;/strong&gt; USD/month&lt;/div&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% * 3835 / 10000); height: calc(1lh + 1.5em); border-left: 1px solid;&quot;&gt;&lt;/div&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% - 0.5em); height: calc(1lh + 1.5em); border-left: 1px solid;&quot;&gt;&lt;/div&gt;
        &lt;div style=&quot;padding-right: 1em;&quot;&gt;&lt;strong&gt;10000&lt;/strong&gt;&lt;!-- USD/month --&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;progress value=&quot;3835&quot; max=&quot;10000&quot; style=&quot;transform: scale(3); transform-origin: top left; width: calc(100% / 3);&quot;&gt;&lt;/progress&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;As always, use of these funds will be decided transparently in the Technical Steering Committee.
For more details, head to our &lt;a href=&quot;https://servo.org/tmis/sponsorship/&quot;&gt;Sponsorship page&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;conference-talks&quot; tabindex=&quot;-1&quot;&gt;Conference talks &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2025/02/19/this-month-in-servo/#conference-talks&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=s0MIHKv45C0&quot;&gt;&lt;strong&gt;Why Build a New Browser Engine in Rust?&lt;/strong&gt;&lt;/a&gt; (&lt;a href=&quot;https://servo.org/slides/2025-01-21-barcelona-free-software/&quot;&gt;slides&lt;/a&gt;) — &lt;a href=&quot;https://abandonedwig.info/&quot;&gt;Martin Robinson&lt;/a&gt; spoke about Servo’s unique benefits as a Rust-based browser and web engine, and how browser diversity can create a new renaissance for the web platform&lt;/li&gt;
&lt;/ul&gt;
&lt;style&gt;
    .content {
        container-type: inline-size;
    }
    ._paired_figure {
        margin: 1em 0;
    }
    @container (min-width: 55em) {
        ._paired_figure {
            display: grid;
            grid-template-columns: auto 33em;
            column-gap: 2em;
            row-gap: 1em;
        }
        ._paired_figure &gt; ._text_before,
        ._paired_figure &gt; ._text_after {
            flex: 1 1 20em;
            grid-column: 1 / 2;
        }
        ._paired_figure &gt; figure:not(#specificity) {
            flex: 0 1 33em;
            grid-row: 1 / 3;
            grid-column: 2 / 3;
            margin: 0;
        }
    }

    ._correction {
        max-width: 33em;
        margin: 1em auto;
        border-bottom: 1px solid;
        padding-bottom: 1em;
    }
    ._note {
        margin: 1em 1em;
        border-left: 1px solid;
        padding-left: 1em;
        opacity: 0.75;
    }
&lt;/style&gt;
</content>
  </entry>
  <entry>
    <title>Servo in 2024: stats, features and donations</title>
    <link href="https://servo.org/tmis/blog/2025/01/31/servo-in-2024/"/>
    <updated>2025-01-31T00:00:00Z</updated>
    <id>https://servo.org/tmis/blog/2025/01/31/servo-in-2024/</id>
    <content xml:lang="en" type="html">&lt;!--
    TIP: `eleventyConfig.setServerOptions({domDiff: false})` for this post!
    Otherwise the charts will break when reloading your changes.
--&gt;
&lt;p&gt;Two years after the &lt;a href=&quot;https://servo.org/blog/2023/01/16/servo-2023/&quot;&gt;renewed activity&lt;/a&gt; on the project we can confirm that Servo is fully back.&lt;/p&gt;
&lt;p&gt;If we ignore the bots, in 2024 we’ve had &lt;strong&gt;129 unique contributors&lt;/strong&gt; (+143% over 54 last year), &lt;strong&gt;landing 1,771 pull requests&lt;/strong&gt; (+163% over 673), and that’s just in &lt;a href=&quot;https://github.com/servo/servo&quot;&gt;our main repo&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Including bots, the total number of PRs merged goes up to &lt;strong&gt;2,674&lt;/strong&gt; (+144% over 1094). From all this work, 26% of the PRs were made by Igalia, 40% by other contributors and the rest by the bots (34%). This shows how the Servo community has been growing and becoming more diverse with new actors participating actively in the project.&lt;/p&gt;
&lt;p&gt;&lt;canvas id=&quot;servoStats&quot; style=&quot;min-height: 400px;&quot;&gt;&lt;/canvas&gt;&lt;/p&gt;
&lt;script src=&quot;https://cdn.jsdelivr.net/npm/chart.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  const ctx = document.getElementById(&quot;servoStats&quot;);


  new Chart(ctx, {
    type: &quot;bar&quot;,
    data: {
      labels: [&quot;2018&quot;, &quot;2019&quot;, &quot;2020&quot;, &quot;2021&quot;, &quot;2022&quot;, &quot;2023&quot;, &quot;2024&quot;],
      datasets: [{
        label: &quot;Merged PRs&quot;,
        data: [1188, 986, 669, 118, 65, 776, 1771],
        borderWidth: 2
      }, {
        label: &quot;Unique contributors&quot;,
        data: [142, 141, 87, 37, 20, 54, 129],
        borderWidth: 2,
        type: &quot;line&quot;,
        yAxisID: &quot;y1&quot;
      }, {
        label: &quot;Average unique contributors per month&quot;,
        data: [27.33, 27.17, 14.75, 4.92, 2.83, 11.33, 26.33],
        borderWidth: 2,
        type: &quot;line&quot;,
        yAxisID: &quot;y1&quot;
      }]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      scales: {
        y: {
          beginAtZero: true
        },
        y1: {
          position: &quot;right&quot;,
          grid: {
            drawOnChartArea: false
          },
        }
      },
      plugins: {
        title: {
          display: true,
          text: &quot;Servo Stats 2018 - 2024&quot;,
          font: {
            size: &quot;20pt&quot;,
          }
        },
        subtitle: {
          display: true,
          text: &quot;PRs left axis - Contributors right axis&quot;,
        },
        legend: {
          position: &quot;bottom&quot;,
        }
      }
    }
  });
&lt;/script&gt;
&lt;figure class=&quot;_stats_table&quot;&gt;
&lt;table style=&quot;margin-inline: auto;&quot;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th&gt;&lt;/th&gt;
    &lt;th style=&quot;text-align:right&quot;&gt;2018&lt;/th&gt;
    &lt;th style=&quot;text-align:right&quot;&gt;2019&lt;/th&gt;
    &lt;th style=&quot;text-align:right&quot;&gt;2020&lt;/th&gt;
    &lt;th style=&quot;text-align:right&quot;&gt;2021&lt;/th&gt;
    &lt;th style=&quot;text-align:right&quot;&gt;2022&lt;/th&gt;
    &lt;th style=&quot;text-align:right&quot;&gt;2023&lt;/th&gt;
    &lt;th style=&quot;text-align:right&quot;&gt;2024&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Merged PRs&lt;/strong&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;1,188&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;986&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;669&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;118&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;65&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;776&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;1,771&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Unique contributors&lt;/strong&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;142&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;141&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;87&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;37&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;20&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;54&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;129&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Average unique contributors per month&lt;/strong&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;27.33&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;27.17&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;14.75&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;4.92&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;2.83&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;11.33&lt;/td&gt;
    &lt;td style=&quot;text-align:right&quot;&gt;26.33&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/figure&gt;
&lt;style&gt;
  ._stats_table {
    overflow-x: auto;
    margin-block: 1em;
  }
  ._stats_table tr &gt; *:nth-child(1) {
    /* Freeze the first cell of each row. */
    position: sticky;
    left: 0;
    /* Hide other cells that overlap when scrolling. */
    background:lch(91 8.22 196.44);
    z-index: 1;
  }
&lt;/style&gt;
&lt;p&gt;Now let’s take a look to the data and chart above, which show the evolution since 2018 in number of merged PRs, unique contributors per year and average contributors per month (excluding bots). We can see &lt;strong&gt;the project is back to numbers of 2018 and 2019 when it was been developed in full speed&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;It’s worth noting that Servo popularity keeps growing, with many folks realizing there has been new activity on the project last year, and we have more and more people interested in the project.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://star-history.com/#servo/servo&quot;&gt;&lt;img src=&quot;https://servo.org/tmis/img/blog/2025-01-servo-github-stars.png&quot; style=&quot;width: 60ch;&quot; alt=&quot;Servo GitHub start history chart showing Servo not stopping going up since 2013, up to more than 25,000 today&quot; /&gt;&lt;/a&gt;
  &lt;figcaption&gt;Servo GitHub stars haven&#39;t stopped growing, surpassing now 25K threshold.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;During 2024 Servo has been present in &lt;strong&gt;8 events with 9 talks&lt;/strong&gt;: &lt;a href=&quot;https://fosdem.org/2024/schedule/event/fosdem-2024-2321-embedding-servo-in-rust-projects/&quot;&gt;FOSDEM&lt;/a&gt;, &lt;a href=&quot;https://youtu.be/RdtlD_7JAs8&quot;&gt;Open Source Summit North America&lt;/a&gt;, &lt;a href=&quot;https://servo.org/slides/2024-04-16-seattle-rust-user-group/&quot;&gt;Seattle Rust user meetup&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=EA_1jxzR85M&quot;&gt;GOSIM Europe&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=SamA5Oz-G5w&quot;&gt;Global Software Technology Summit&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=NHa4LPpWRh8&amp;amp;t=1351s&quot;&gt;Linux Foundation Europe Member Summit&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=gpz088cxDcI&quot;&gt;GOSIM&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=1c9sHaEXQak&quot;&gt;China&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=fp5n7CSvALA&quot;&gt;Ubuntu Summit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If we focus on development there has been many things moving forward during the year. Servo main dependencies (SpiderMonkey, Stylo and WebRender) have been upgraded, the new layout engine has kept evolving adding support for floats, tables, flexbox, fonts, etc. By the end of 2024 &lt;a href=&quot;https://staging.wpt.fyi/results/?sha=58c1148991&amp;amp;label=master&amp;amp;max-count=1&amp;amp;product=servo&quot;&gt;&lt;strong&gt;Servo passes 1,515,229 WPT subtests (79%)&lt;/strong&gt;&lt;/a&gt;. Many other new features have been under active development: WebGPU, Shadow DOM, ReadableStream, WebXR, … Servo now supports two new platforms: Android and OpenHarmony. And we have got the first experiments of applications using Servo as a web engine (like &lt;a href=&quot;https://servo.org/blog/2024/01/19/embedding-update/&quot;&gt;Tauri&lt;/a&gt;, &lt;a href=&quot;https://github.com/DioxusLabs/blitz&quot;&gt;Blitz&lt;/a&gt;, &lt;a href=&quot;https://github.com/KDABLabs/cxx-qt-servo-webview&quot;&gt;QtWebView&lt;/a&gt;, &lt;a href=&quot;https://github.com/mcclure/cuervo/tree/unstable_traversal_experiment&quot;&gt;Cuervo&lt;/a&gt;, &lt;a href=&quot;https://github.com/versotile-org/verso/&quot;&gt;Verso&lt;/a&gt; and &lt;a href=&quot;https://github.com/moto-browser/moto&quot;&gt;Moto&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In 2024 we have &lt;strong&gt;raised 33,632.64 USD&lt;/strong&gt; with &lt;a href=&quot;https://servo.org/sponsorship/&quot;&gt;donations via Open Collective and GitHub Sponsors&lt;/a&gt; from &lt;strong&gt;500 different people and organizations&lt;/strong&gt;. Thank you all for supporting us!&lt;/p&gt;
&lt;p&gt;With this money we have now 3 servers that provides self-hosted runners for Linux, macOS, and Windows reducing our build times &lt;strong&gt;from over an hour to under 30 minutes&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Talking about the future, the Servo TSC has been discussing the &lt;a href=&quot;https://github.com/servo/servo/wiki/Roadmap&quot;&gt;&lt;strong&gt;roadmap for 2025&lt;/strong&gt;&lt;/a&gt; which has been updated on the Servo’s wiki. We have many plans to keep Servo thriving with new features and improvements. Let’s hope for a great 2025!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>This month in Servo: dark mode, keyword sizes, XPath, and more!</title>
    <link href="https://servo.org/tmis/blog/2025/01/10/this-month-in-servo/"/>
    <updated>2025-01-10T00:00:00Z</updated>
    <id>https://servo.org/tmis/blog/2025/01/10/this-month-in-servo/</id>
    <content xml:lang="en" type="html">&lt;p&gt;Servo now supports &lt;strong&gt;dark mode&lt;/strong&gt; (&lt;a href=&quot;https://github.com/arthmis&quot;&gt;@arthmis&lt;/a&gt;, &lt;a href=&quot;https://github.com/lazypassion&quot;&gt;@lazypassion&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34532&quot;&gt;#34532&lt;/a&gt;), respecting the platform dark mode in servoshell and &lt;strong&gt;‘prefers-color-scheme’&lt;/strong&gt; (&lt;a href=&quot;https://github.com/nicoburns&quot;&gt;@nicoburns&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34423&quot;&gt;#34423&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/stylo/pull/93&quot;&gt;stylo#93&lt;/a&gt;) on Windows and macOS.&lt;/p&gt;
&lt;figure&gt;
    &lt;div style=&quot;display: flex;&quot;&gt;
        &lt;a href=&quot;https://servo.org/tmis/img/blog/dark-mode-december-2024.png&quot;&gt;&lt;img src=&quot;https://servo.org/tmis/img/blog/dark-mode-december-2024.png&quot; alt=&quot;servoshell in dark mode, rendering the MDN article for ‘prefers-color-scheme’ in dark mode, when Windows is set to dark mode&quot; /&gt;&lt;/a&gt;
        &lt;a href=&quot;https://servo.org/tmis/img/blog/light-mode-december-2024.png&quot;&gt;&lt;img src=&quot;https://servo.org/tmis/img/blog/light-mode-december-2024.png&quot; alt=&quot;servoshell in light mode, rendering the MDN article for ‘prefers-color-scheme’ in light mode, when Windows is set to light mode&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;
    &lt;figcaption&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&quot;&gt;MDN article for ‘prefers-color-scheme’&lt;/a&gt; in dark mode (left) and light mode (right), with &lt;code&gt;--pref dom.resize_observer.enabled&lt;/code&gt;.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;CSS transitions&lt;/strong&gt; can now be triggered properly by script (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34486&quot;&gt;#34486&lt;/a&gt;), and we now support &lt;strong&gt;‘min-height’&lt;/strong&gt; and &lt;strong&gt;‘max-height’&lt;/strong&gt; on column flex containers (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34450&quot;&gt;#34450&lt;/a&gt;), &lt;strong&gt;‘min-content’&lt;/strong&gt;, &lt;strong&gt;‘max-content’&lt;/strong&gt;, &lt;strong&gt;‘fit-content’&lt;/strong&gt;, and &lt;strong&gt;‘stretch’&lt;/strong&gt; in block layout (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34641&quot;&gt;#34641&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34568&quot;&gt;#34568&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34695&quot;&gt;#34695&lt;/a&gt;), &lt;strong&gt;‘stretch’&lt;/strong&gt; on replaced positioned elements (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34430&quot;&gt;#34430&lt;/a&gt;), as well as &lt;strong&gt;‘align-self: self-start’&lt;/strong&gt;, &lt;strong&gt;‘self-end’&lt;/strong&gt;, &lt;strong&gt;‘left’&lt;/strong&gt;, and &lt;strong&gt;‘right’&lt;/strong&gt; on positioned elements (&lt;a href=&quot;https://github.com/taniishkaaa&quot;&gt;@taniishkaaa&lt;/a&gt;, &lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34365&quot;&gt;#34365&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Servo can now run &lt;a href=&quot;https://discord.com/&quot;&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/a&gt; well enough to &lt;a href=&quot;https://discord.com/login&quot;&gt;&lt;strong&gt;log in&lt;/strong&gt;&lt;/a&gt; and &lt;strong&gt;read messages&lt;/strong&gt;, though you can’t send messages yet.
To get this working, we landed some bare-bones AbortController support (&lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/syvb&quot;&gt;@syvb&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34519&quot;&gt;#34519&lt;/a&gt;) and a WebSocket fix (&lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34634&quot;&gt;#34634&lt;/a&gt;).
Try it yourself with &lt;code&gt;--pref dom.svg.enabled --pref dom.intersection_observer.enabled --pref dom.abort_controller.enabled&lt;/code&gt;!&lt;/p&gt;
&lt;figure&gt;
    &lt;div style=&quot;display: flex;&quot;&gt;
        &lt;a href=&quot;https://servo.org/tmis/img/blog/discord-login-1-december-2024.png&quot;&gt;&lt;img src=&quot;https://servo.org/tmis/img/blog/discord-login-1-december-2024.png&quot; alt=&quot;Discord login screen in Servo, showing form input and a QR code that never finishes loading&quot; /&gt;&lt;/a&gt;
        &lt;a href=&quot;https://servo.org/tmis/img/blog/discord-login-2-december-2024.png&quot;&gt;&lt;img src=&quot;https://servo.org/tmis/img/blog/discord-login-2-december-2024.png&quot; alt=&quot;Discord loading screen in Servo, after logging in&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;
    &lt;a href=&quot;https://servo.org/tmis/img/blog/discord-small-december-2024.png&quot;&gt;&lt;img src=&quot;https://servo.org/tmis/img/blog/discord-small-december-2024.png&quot; alt=&quot;Discord channel screen in Servo, showing a few of Diffie’s messages and attachments&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;p&gt;We now support &lt;strong&gt;console.trace()&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34629&quot;&gt;#34629&lt;/a&gt;), &lt;strong&gt;PointerEvent&lt;/strong&gt; (&lt;a href=&quot;https://github.com/wusyong&quot;&gt;@wusyong&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34437&quot;&gt;#34437&lt;/a&gt;), and the &lt;strong&gt;clonable&lt;/strong&gt; property on &lt;strong&gt;ShadowRoot&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34514&quot;&gt;#34514&lt;/a&gt;).
Shadow DOM support continues to improve (&lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34503&quot;&gt;#34503&lt;/a&gt;), including very basic &lt;strong&gt;Shadow DOM layout&lt;/strong&gt; (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34701&quot;&gt;#34701&lt;/a&gt;) when enabled via &lt;code&gt;--pref dom.shadowdom.enabled&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;script&lt;/code&gt; underwent (and continues to undergo) major rework towards being &lt;strong&gt;more reliable&lt;/strong&gt; and &lt;strong&gt;faster to build&lt;/strong&gt;.
We’ve landed better &lt;strong&gt;synchronisation for DOM tree mutations&lt;/strong&gt; (&lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34505&quot;&gt;#34505&lt;/a&gt;) and continued work on &lt;strong&gt;splitting up the &lt;code&gt;script&lt;/code&gt; crate&lt;/strong&gt; (&lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34366&quot;&gt;#34366&lt;/a&gt;).
We’ve moved our &lt;strong&gt;ReadableStream&lt;/strong&gt; support into Servo, eliminating the maintenance burden of a downstream SpiderMonkey patch (&lt;a href=&quot;https://github.com/gterzian&quot;&gt;@gterzian&lt;/a&gt;, &lt;a href=&quot;https://github.com/wusyong&quot;&gt;@wusyong&lt;/a&gt;, &lt;a href=&quot;https://github.com/Taym95&quot;&gt;@Taym95&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34064&quot;&gt;#34064&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34675&quot;&gt;#34675&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The web platform guarantees that same-origin frames and their parents can &lt;strong&gt;synchronously observe resizes&lt;/strong&gt; and their effects.
Many tests rely on this, and not doing this correctly made Servo’s test results much flakier than they could otherwise be.
We’ve made very good progress towards fixing this (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34643&quot;&gt;#34643&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34656&quot;&gt;#34656&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34702&quot;&gt;#34702&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34609&quot;&gt;#34609&lt;/a&gt;), with correct resizing in all cases except when a same-origin frame is in another script thread, which is rare.&lt;/p&gt;
&lt;p&gt;We now support enough of &lt;strong&gt;XPath&lt;/strong&gt; to get &lt;a href=&quot;https://htmx.org/&quot;&gt;htmx&lt;/a&gt; working (&lt;a href=&quot;https://github.com/vlindhol&quot;&gt;@vlindhol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34463&quot;&gt;#34463&lt;/a&gt;), when enabled via &lt;code&gt;--pref dom.xpath.enabled&lt;/code&gt;.&lt;/p&gt;
&lt;figure&gt;
    &lt;a href=&quot;https://servo.org/tmis/img/blog/htmx-december-2024.png&quot;&gt;&lt;img src=&quot;https://servo.org/tmis/img/blog/htmx-december-2024.png&quot; alt=&quot;htmx home page in Servo, with the hero banner thing now working (it relies on XPath)&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;p&gt;Servo’s performance continues to improve, with &lt;strong&gt;layout caching for flex columns&lt;/strong&gt; delivering up to 12x speedup (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34461&quot;&gt;#34461&lt;/a&gt;), many &lt;strong&gt;unnecessary reflows now eliminated&lt;/strong&gt; (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34558&quot;&gt;#34558&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34599&quot;&gt;#34599&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34576&quot;&gt;#34576&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34645&quot;&gt;#34645&lt;/a&gt;), &lt;strong&gt;reduced memory usage&lt;/strong&gt; (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34563&quot;&gt;#34563&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34666&quot;&gt;#34666&lt;/a&gt;), faster rendering for pages with animations (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34489&quot;&gt;#34489&lt;/a&gt;), and timers now operating without IPC (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34581&quot;&gt;#34581&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;servoshell nightlies are up to 20% smaller&lt;/strong&gt; (&lt;a href=&quot;https://github.com/atbrakhi&quot;&gt;@atbrakhi&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34340&quot;&gt;#34340&lt;/a&gt;), &lt;strong&gt;WebGPU is now optional&lt;/strong&gt; at build time (&lt;a href=&quot;https://github.com/atbrakhi&quot;&gt;@atbrakhi&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34444&quot;&gt;#34444&lt;/a&gt;), and &lt;code&gt;--features tracing&lt;/code&gt; no longer enables &lt;code&gt;--features layout-2013&lt;/code&gt; (&lt;a href=&quot;https://github.com/jschwe&quot;&gt;@jschwe&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34515&quot;&gt;#34515&lt;/a&gt;) for further binary size savings.
You can also &lt;strong&gt;limit the size of&lt;/strong&gt; several of Servo’s &lt;strong&gt;thread pools&lt;/strong&gt; with &lt;code&gt;--pref threadpools.fallback_worker_num&lt;/code&gt; and others (&lt;a href=&quot;https://github.com/jschwe&quot;&gt;@jschwe&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34478&quot;&gt;#34478&lt;/a&gt;), which is especially useful on machines with many CPU cores.&lt;/p&gt;
&lt;p&gt;We’ve started laying the groundwork for full &lt;strong&gt;incremental layout&lt;/strong&gt; in our new layout engine, starting with a general layout caching mechanism (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34507&quot;&gt;#34507&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34513&quot;&gt;#34513&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34530&quot;&gt;#34530&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34586&quot;&gt;#34586&lt;/a&gt;).
This was lost in the switch to our new layout engine, and without it, every time a page changes, we have to rerun layout from scratch.
As you can imagine, this is very, very expensive, and incremental layout is critical for performance on today’s highly dynamic web.&lt;/p&gt;
&lt;aside class=&quot;_note&quot;&gt;
&lt;p&gt;We’ve mentioned layout caching a few times, including in past monthly updates, but most of the caching we’ve landed so far has been to save time &lt;em&gt;within&lt;/em&gt; a single reflow.
Incremental layout requires layout caching that &lt;em&gt;persists&lt;/em&gt; across reflows, and algorithms to determine when to invalidate those cached results.&lt;/p&gt;
&lt;/aside&gt;
&lt;h2 id=&quot;donations&quot; tabindex=&quot;-1&quot;&gt;Donations &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2025/01/10/this-month-in-servo/#donations&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks again for your generous support!
We are now receiving &lt;strong&gt;4329 USD/month&lt;/strong&gt; (+0.8% over November) in recurring donations.
With this money, we’ve been able to cover our web hosting and &lt;a href=&quot;https://ci0.servo.org/&quot;&gt;self-hosted CI runners&lt;/a&gt; for Windows, Linux, and now macOS builds (&lt;a href=&quot;https://github.com/delan&quot;&gt;@delan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34868&quot;&gt;#34868&lt;/a&gt;), &lt;strong&gt;halving &lt;code&gt;mach try&lt;/code&gt; build times&lt;/strong&gt; from over an hour to under 30 minutes!
Next month, we’ll be &lt;a href=&quot;https://github.com/servo/project/issues/123&quot;&gt;expanding our CI capacity further&lt;/a&gt;, all made possible thanks to your help.&lt;/p&gt;
&lt;p&gt;Servo is also on &lt;a href=&quot;https://thanks.dev/&quot;&gt;thanks.dev&lt;/a&gt;, and already &lt;strong&gt;sixteen GitHub users&lt;/strong&gt; that depend on Servo are sponsoring us there.
If you use Servo libraries like &lt;a href=&quot;https://crates.io/crates/url/reverse_dependencies&quot;&gt;url&lt;/a&gt;, &lt;a href=&quot;https://crates.io/crates/html5ever/reverse_dependencies&quot;&gt;html5ever&lt;/a&gt;, &lt;a href=&quot;https://crates.io/crates/selectors/reverse_dependencies&quot;&gt;selectors&lt;/a&gt;, or &lt;a href=&quot;https://crates.io/crates/cssparser/reverse_dependencies&quot;&gt;cssparser&lt;/a&gt;, signing up for &lt;a href=&quot;https://thanks.dev/&quot;&gt;thanks.dev&lt;/a&gt; could be a good way for you (or your employer) to give back to the community.&lt;/p&gt;
&lt;figure class=&quot;_fig&quot; style=&quot;width: 100%; margin: 1em 0;&quot;&gt;&lt;div class=&quot;_flex&quot; style=&quot;height: calc(1lh + 3em); flex-flow: column nowrap; text-align: left;&quot;&gt;
    &lt;div style=&quot;position: relative; text-align: right;&quot;&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% * 4329 / 10000); padding-left: 0.5em;&quot;&gt;&lt;strong&gt;4329&lt;/strong&gt; USD/month&lt;/div&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% * 4329 / 10000); height: calc(1lh + 1.5em); border-left: 1px solid;&quot;&gt;&lt;/div&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% - 0.5em); height: calc(1lh + 1.5em); border-left: 1px solid;&quot;&gt;&lt;/div&gt;
        &lt;div style=&quot;padding-right: 1em;&quot;&gt;&lt;strong&gt;10000&lt;/strong&gt;&lt;!-- USD/month --&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;progress value=&quot;4329&quot; max=&quot;10000&quot; style=&quot;transform: scale(3); transform-origin: top left; width: calc(100% / 3);&quot;&gt;&lt;/progress&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;As always, use of these funds will be decided transparently in the Technical Steering Committee.
For more details, head to our &lt;a href=&quot;https://servo.org/tmis/sponsorship/&quot;&gt;Sponsorship page&lt;/a&gt;.&lt;/p&gt;
&lt;style&gt;
    /* guaranteed minimum width for first paragraph after a float */
    ._floatmin {
        display: block;
        width: 13em;
        overflow: hidden;
    }
    ._clear {
        clear: both;
    }
    ._clearl {
        clear: left;
    }
    ._clearr {
        clear: right;
    }
    ._none {
        display: none;
    }
    ._fig:not(#specificity) {
        width: 33em;
        max-width: 100%;
        margin: 1em auto;
    }
    ._fig &gt; ._flex,
    ._figl &gt; ._flex,
    ._figr &gt; ._flex {
        display: flex;
    }
    ._fig table {
        text-align: initial;
    }
    ._fig figcaption._notes {
        text-align: left;
        width: max-content;
        max-width: 100%;
    }
    ._figl:not(#specificity),
    ._figr:not(#specificity) {
        margin: 0 1em 1em;
    }
    ._figl {
        float: left;
        max-width: 100%;
    }
    ._figr {
        float: right;
        max-width: 100%;
    }
    ._figl &gt; figcaption,
    ._figr &gt; figcaption,
    ._figl &gt; iframe,
    ._figr &gt; iframe,
    ._figl &gt; video,
    ._figr &gt; video,
    ._figl &gt; a &gt; img,
    ._figr &gt; a &gt; img,
    ._figl &gt; ._flex,
    ._figr &gt; ._flex {
        width: 21em;
        max-width: 100%;
    }

    .content {
        container-type: inline-size;
    }
    ._paired_figure {
        margin: 1em 0;
    }
    @container (min-width: 55em) {
        ._paired_figure {
            display: grid;
            grid-template-columns: auto 33em;
            column-gap: 2em;
            row-gap: 1em;
        }
        ._paired_figure &gt; ._text_before,
        ._paired_figure &gt; ._text_after {
            flex: 1 1 20em;
            grid-column: 1 / 2;
        }
        ._paired_figure &gt; figure:not(#specificity) {
            flex: 0 1 33em;
            grid-row: 1 / 3;
            grid-column: 2 / 3;
            margin: 0;
        }

        ._text_after {
            grid-column: 1 / 3;
        }
    }

    ._runin {
        margin-bottom: 1em;
    }
    ._runin &gt; p,
    ._runin &gt; h2 {
        display: inline;
    }
    ._correction {
        max-width: 33em;
        margin: 1em auto;
        border-bottom: 1px solid;
        padding-bottom: 1em;
    }
    ._note {
        margin: 1em 1em;
        border-left: 1px solid;
        padding-left: 1em;
        opacity: 0.75;
    }
&lt;/style&gt;
</content>
  </entry>
  <entry>
    <title>This month in Servo: :is(), :where(), grid layout, parallel flexbox, and more!</title>
    <link href="https://servo.org/tmis/blog/2024/12/09/this-month-in-servo/"/>
    <updated>2024-12-09T00:00:00Z</updated>
    <id>https://servo.org/tmis/blog/2024/12/09/this-month-in-servo/</id>
    <content xml:lang="en" type="html">&lt;figure&gt;&lt;a href=&quot;https://servo.org/tmis/img/blog/november-2024.png&quot;&gt;&lt;img src=&quot;https://servo.org/tmis/img/blog/november-2024.png&quot; alt=&quot;Servo nightly showing new support for CSS grid layout, when enabled via `layout.grid.enabled`&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;p&gt;Servo now supports &lt;strong&gt;:is() and :where() selectors&lt;/strong&gt; (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34066&quot;&gt;#34066&lt;/a&gt;), &lt;strong&gt;parallel layout for flexbox&lt;/strong&gt; (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34132&quot;&gt;#34132&lt;/a&gt;), and experimentally, &lt;strong&gt;CSS grid layout&lt;/strong&gt; (&lt;a href=&quot;https://github.com/nicoburns&quot;&gt;@nicoburns&lt;/a&gt;, &lt;a href=&quot;https://github.com/taniishkaa&quot;&gt;@taniishkaa&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/32619&quot;&gt;#32619&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34352&quot;&gt;#34352&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34421&quot;&gt;#34421&lt;/a&gt;)!
To try our new grid layout support, &lt;a href=&quot;https://book.servo.org/running-servoshell.html&quot;&gt;run Servo&lt;/a&gt; with  &lt;code&gt;--pref layout.grid.enabled&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We’ve added support for two key Shadow DOM interfaces, the &lt;strong&gt;shadowRoot property&lt;/strong&gt; on Element (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34306&quot;&gt;#34306&lt;/a&gt;) and the &lt;strong&gt;innerHTML property on ShadowRoot&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34335&quot;&gt;#34335&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;We’ve also landed &lt;strong&gt;‘justify-self’&lt;/strong&gt; on positioned elements (&lt;a href=&quot;https://github.com/chickenleaf&quot;&gt;@chickenleaf&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34235&quot;&gt;#34235&lt;/a&gt;), form submission with &lt;strong&gt;&amp;lt;input type=image&amp;gt;&lt;/strong&gt; (&lt;a href=&quot;https://github.com/shanehandley&quot;&gt;@shanehandley&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34203&quot;&gt;#34203&lt;/a&gt;), &lt;strong&gt;DataTransfer&lt;/strong&gt; (&lt;a href=&quot;https://github.com/Gae24&quot;&gt;@Gae24&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34205&quot;&gt;#34205&lt;/a&gt;), the &lt;strong&gt;close()&lt;/strong&gt; method on ImageBitmap (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34124&quot;&gt;#34124&lt;/a&gt;), plus several new &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto&quot;&gt;SubtleCrypto&lt;/a&gt; API&lt;/strong&gt; features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;crypto.subtle.&lt;strong&gt;deriveKey()&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34185&quot;&gt;#34185&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;wrapKey()&lt;/strong&gt; and &lt;strong&gt;unwrapKey()&lt;/strong&gt; (&lt;a href=&quot;https://github.com/msub2&quot;&gt;@msub2&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34262&quot;&gt;#34262&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;“HMAC”&lt;/strong&gt; algorithm in &lt;strong&gt;generateKey()&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34278&quot;&gt;#34278&lt;/a&gt;), &lt;strong&gt;sign()&lt;/strong&gt;, &lt;strong&gt;verify()&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34223&quot;&gt;#34223&lt;/a&gt;), and &lt;strong&gt;deriveKey(&lt;code&gt;&amp;quot;get key length&amp;quot;&lt;/code&gt;)&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34230&quot;&gt;#34230&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;“AES-GCM”&lt;/strong&gt; algorithm in &lt;strong&gt;encrypt()&lt;/strong&gt;, &lt;strong&gt;decrypt()&lt;/strong&gt;, &lt;strong&gt;generateKey()&lt;/strong&gt;, and &lt;strong&gt;importKey()&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34269&quot;&gt;#34269&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;“AES-KW”&lt;/strong&gt; algorithm in &lt;strong&gt;generateKey()&lt;/strong&gt;, &lt;strong&gt;importKey()&lt;/strong&gt;, &lt;strong&gt;wrapKey()&lt;/strong&gt;, and &lt;strong&gt;unwrapKey()&lt;/strong&gt; (&lt;a href=&quot;https://github.com/msub2&quot;&gt;@msub2&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34262&quot;&gt;#34262&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;“PBKDF2”&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34164&quot;&gt;#34164&lt;/a&gt;) and &lt;strong&gt;“HKDF”&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34200&quot;&gt;#34200&lt;/a&gt;) algorithms in &lt;strong&gt;deriveBits()&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On OpenHarmony, we’ve landed &lt;strong&gt;keyboard input&lt;/strong&gt; and the IME (&lt;a href=&quot;https://github.com/jschwe&quot;&gt;@jschwe&lt;/a&gt;, &lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/mukilan&quot;&gt;@mukilan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34188&quot;&gt;#34188&lt;/a&gt;), &lt;strong&gt;touch fling gestures&lt;/strong&gt; (&lt;a href=&quot;https://github.com/jschwe&quot;&gt;@jschwe&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33219&quot;&gt;#33219&lt;/a&gt;), and additional &lt;strong&gt;CJK fallback fonts&lt;/strong&gt; (&lt;a href=&quot;https://github.com/jschwe&quot;&gt;@jschwe&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34410&quot;&gt;#34410&lt;/a&gt;).
You can now build for OpenHarmony on a Windows machine (&lt;a href=&quot;https://github.com/jschwe&quot;&gt;@jschwe&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34113&quot;&gt;#34113&lt;/a&gt;), and build errors have been improved (&lt;a href=&quot;https://github.com/jschwe&quot;&gt;@jschwe&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34267&quot;&gt;#34267&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&quot;more-engine-changes&quot; tabindex=&quot;-1&quot;&gt;More engine changes &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2024/12/09/this-month-in-servo/#more-engine-changes&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can now &lt;strong&gt;scroll the viewport&lt;/strong&gt; and scrollable elements &lt;strong&gt;with your pointer anywhere in the area&lt;/strong&gt;, not just when hovering over actual content (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/mukilan&quot;&gt;@mukilan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34347&quot;&gt;#34347&lt;/a&gt;).
&lt;code&gt;--unminify-js&lt;/code&gt;, a very useful feature for &lt;a href=&quot;https://book.servo.org/hacking/web-compat-bugs.html#diagnosing-js-errors&quot;&gt;diagnosing Servo bugs in real websites&lt;/a&gt;, now supports module scripts (&lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34206&quot;&gt;#34206&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;We’ve fixed the behaviour of &lt;strong&gt;offsetLeft&lt;/strong&gt; and &lt;strong&gt;offsetTop&lt;/strong&gt; relative to &amp;lt;body&amp;gt; with ‘position: static’ (&lt;a href=&quot;https://github.com/nicoburns&quot;&gt;@nicoburns&lt;/a&gt;, &lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/32761&quot;&gt;#32761&lt;/a&gt;), which also required spec changes (&lt;a href=&quot;https://github.com/nicoburns&quot;&gt;@nicoburns&lt;/a&gt;, &lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/w3c/csswg-drafts/pull/10549&quot;&gt;w3c/csswg-drafts#10549&lt;/a&gt;).
We’ve also fixed several layout bugs around:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;‘object-fit’&lt;/strong&gt; when ‘aspect-ratio’ is set (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34413&quot;&gt;#34413&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;clientWidth&lt;/strong&gt; and friends on floats and replaced inlines (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34083&quot;&gt;#34083&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;‘align-items’&lt;/strong&gt; and &lt;strong&gt;‘align-self: stretch’&lt;/strong&gt; (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34162&quot;&gt;#34162&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;main axis free space&lt;/strong&gt; in flexbox (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34150&quot;&gt;#34150&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;min-&lt;/strong&gt; and &lt;strong&gt;max-content block sizes&lt;/strong&gt; of replaced elements (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34284&quot;&gt;#34284&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;sizing of non-replaced positioned elements with &lt;strong&gt;‘place-self’&lt;/strong&gt; (&lt;a href=&quot;https://github.com/taniishkaa&quot;&gt;@taniishkaa&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34264&quot;&gt;#34264&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;strong&gt;getClientRects()&lt;/strong&gt; method on Element now correctly returns a DOMRectList (&lt;a href=&quot;https://github.com/chickenleaf&quot;&gt;@chickenleaf&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34025&quot;&gt;#34025&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stylo&lt;/strong&gt; has been updated to 2024-11-01 (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34322&quot;&gt;#34322&lt;/a&gt;), and we’ve landed some changes to prepare our fork of Stylo for publishing releases on &lt;a href=&quot;http://crates.io/&quot;&gt;crates.io&lt;/a&gt; (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/nicoburns&quot;&gt;@nicoburns&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34332&quot;&gt;#34332&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34353&quot;&gt;#34353&lt;/a&gt;).
We’ve also made more progress towards &lt;strong&gt;splitting up our massive &lt;code&gt;script&lt;/code&gt; crate&lt;/strong&gt; (&lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/sagudev&quot;&gt;@sagudev&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34357&quot;&gt;#34357&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34356&quot;&gt;#34356&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34163&quot;&gt;#34163&lt;/a&gt;), which will eventually allow Servo to be built (and rebuilt) much faster.&lt;/p&gt;
&lt;h2 id=&quot;performance-improvements&quot; tabindex=&quot;-1&quot;&gt;Performance improvements &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2024/12/09/this-month-in-servo/#performance-improvements&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In addition to parallel layout for flexbox (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34132&quot;&gt;#34132&lt;/a&gt;), we’ve landed several other performance improvements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;faster layout for &lt;strong&gt;‘column’ flex containers&lt;/strong&gt; (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34346&quot;&gt;#34346&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;faster caching of intrinsic sizes (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34384&quot;&gt;#34384&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;caching of font template matches (&lt;a href=&quot;https://github.com/mukilan&quot;&gt;@mukilan&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34325&quot;&gt;#34325&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;fixed warnings and memory leak when WebRender is running late (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/mukilan&quot;&gt;@mukilan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34305&quot;&gt;#34305&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We’ve also landed some changes to reduce Servo’s binary size:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;legacy layout is no longer built by default (&lt;a href=&quot;https://github.com/jschwe&quot;&gt;@jschwe&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34290&quot;&gt;#34290&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Servo no longer depends on &lt;code&gt;sparkle&lt;/code&gt;, only &lt;code&gt;glow&lt;/code&gt; and &lt;code&gt;gleam&lt;/code&gt; (&lt;a href=&quot;https://github.com/sagudev&quot;&gt;@sagudev&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33918&quot;&gt;#33918&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34292&quot;&gt;#34292&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Servo can now be built without WebXR support (&lt;a href=&quot;https://github.com/wusyong&quot;&gt;@wusyong&lt;/a&gt;, &lt;a href=&quot;https://github.com/augustkline&quot;&gt;@augustkline&lt;/a&gt;, &lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/sagudev&quot;&gt;@sagudev&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34241&quot;&gt;#34241&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34348&quot;&gt;#34348&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;servoshell can now be built without WebXR on OpenHarmony and Android (&lt;a href=&quot;https://github.com/jschwe&quot;&gt;@jschwe&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34242&quot;&gt;#34242&lt;/a&gt;), with more platforms to come&lt;/li&gt;
&lt;li&gt;plus some progress towards a build-time feature flag for WebGPU (&lt;a href=&quot;https://github.com/atbrakhi&quot;&gt;@atbrakhi&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34415&quot;&gt;#34415&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Servo’s &lt;strong&gt;&lt;a href=&quot;https://docs.rs/tracing/0.1.40/tracing/&quot;&gt;tracing&lt;/a&gt;-based profiling support&lt;/strong&gt; (&lt;code&gt;--features tracing-perfetto&lt;/code&gt; or &lt;code&gt;tracing-hitrace&lt;/code&gt;) now supports &lt;strong&gt;filtering events&lt;/strong&gt; via an environment variable (&lt;a href=&quot;https://github.com/delan&quot;&gt;@delan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34236&quot;&gt;#34236&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34256&quot;&gt;#34256&lt;/a&gt;), and no longer includes events from non-Servo crates by default (&lt;a href=&quot;https://github.com/delan&quot;&gt;@delan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34209&quot;&gt;#34209&lt;/a&gt;).
Note that when the filter matches some span or event, it will also match all of its descendants for now, but this is a limitation we intend to fix.&lt;/p&gt;
&lt;p&gt;Most of the events supported by the old interval profiler have been &lt;strong&gt;ported to tracing&lt;/strong&gt; (&lt;a href=&quot;https://github.com/delan&quot;&gt;@delan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34238&quot;&gt;#34238&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34337&quot;&gt;#34337&lt;/a&gt;).
&lt;strong&gt;ScriptParseHTML&lt;/strong&gt; and &lt;strong&gt;ScriptParseXML&lt;/strong&gt; events no longer count the time spent doing layout and script while parsing, reducing them to more realistic times (&lt;a href=&quot;https://github.com/delan&quot;&gt;@delan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34273&quot;&gt;#34273&lt;/a&gt;), while &lt;strong&gt;ScriptEvaluate&lt;/strong&gt; events now count the time spent running scripts in timers, DOM event listeners, and many other situations (&lt;a href=&quot;https://github.com/delan&quot;&gt;@delan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34286&quot;&gt;#34286&lt;/a&gt;), increasing them to more realistic times.&lt;/p&gt;
&lt;p&gt;We’ve added new tracing events for &lt;strong&gt;display list building&lt;/strong&gt; (&lt;a href=&quot;https://github.com/atbrakhi&quot;&gt;@atbrakhi&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34392&quot;&gt;#34392&lt;/a&gt;), &lt;strong&gt;flex layout&lt;/strong&gt;, &lt;strong&gt;inline layout&lt;/strong&gt;, and &lt;strong&gt;font loading&lt;/strong&gt; (&lt;a href=&quot;https://github.com/delan&quot;&gt;@delan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34392&quot;&gt;#34392&lt;/a&gt;).
This will help us diagnose performance issues around things like caching and relayout for ‘stretch’ in flex layout, shaping text runs, and font template creation.&lt;/p&gt;
&lt;h2 id=&quot;for-developers&quot; tabindex=&quot;-1&quot;&gt;For developers &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2024/12/09/this-month-in-servo/#for-developers&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Hacking on Servo is now easier, with our &lt;strong&gt;new &lt;code&gt;--profile medium&lt;/code&gt; build mode&lt;/strong&gt; in Cargo (&lt;a href=&quot;https://github.com/jschwe&quot;&gt;@jschwe&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34035&quot;&gt;#34035&lt;/a&gt;).
&lt;code&gt;medium&lt;/code&gt; is more optimised than &lt;code&gt;debug&lt;/code&gt;, but unlike &lt;code&gt;release&lt;/code&gt;, it supports debuggers, line numbers in backtraces, and incremental builds.&lt;/p&gt;
&lt;p&gt;Servo &lt;strong&gt;now uses &lt;a href=&quot;https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners&quot;&gt;CODEOWNERS&lt;/a&gt;&lt;/strong&gt; to list reviewers that are experts in &lt;a href=&quot;https://github.com/servo/servo/blob/3515b83a95cb65da30c1e3988f7a47f79fd7b9bd/.github/CODEOWNERS&quot;&gt;parts of our main repo&lt;/a&gt;.
This should make it much easier to find reviewers that know how to review your code, and helps us maximise the quality of our code reviews by allowing reviewers to specialise.&lt;/p&gt;
&lt;h2 id=&quot;donations&quot; tabindex=&quot;-1&quot;&gt;Donations &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2024/12/09/this-month-in-servo/#donations&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks again for your generous support!
We are now receiving &lt;strong&gt;4291 USD/month&lt;/strong&gt; (+2.1% over October) in recurring donations.
&lt;strong&gt;We are no longer accepting donations on LFX&lt;/strong&gt; — if you were donating there, please move your recurring donations to &lt;a href=&quot;https://github.com/sponsors/servo&quot;&gt;GitHub&lt;/a&gt; or &lt;a href=&quot;https://opencollective.com/servo&quot;&gt;Open Collective&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Servo is also on &lt;a href=&quot;https://thanks.dev/&quot;&gt;thanks.dev&lt;/a&gt;, and already &lt;strong&gt;fifteen GitHub users&lt;/strong&gt; that depend on Servo are sponsoring us there.
If you use Servo libraries like &lt;a href=&quot;https://crates.io/crates/url/reverse_dependencies&quot;&gt;url&lt;/a&gt;, &lt;a href=&quot;https://crates.io/crates/html5ever/reverse_dependencies&quot;&gt;html5ever&lt;/a&gt;, &lt;a href=&quot;https://crates.io/crates/selectors/reverse_dependencies&quot;&gt;selectors&lt;/a&gt;, or &lt;a href=&quot;https://crates.io/crates/cssparser/reverse_dependencies&quot;&gt;cssparser&lt;/a&gt;, signing up for &lt;a href=&quot;https://thanks.dev/&quot;&gt;thanks.dev&lt;/a&gt; could be a good way for you (or your employer) to give back to the community.&lt;/p&gt;
&lt;figure class=&quot;_fig&quot; style=&quot;width: 100%; margin: 1em 0;&quot;&gt;&lt;div class=&quot;_flex&quot; style=&quot;height: calc(1lh + 3em); flex-flow: column nowrap; text-align: left;&quot;&gt;
    &lt;div style=&quot;position: relative; text-align: right;&quot;&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% * 4291 / 10000); padding-left: 0.5em;&quot;&gt;&lt;strong&gt;4291&lt;/strong&gt; USD/month&lt;/div&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% * 4291 / 10000); height: calc(1lh + 1.5em); border-left: 1px solid;&quot;&gt;&lt;/div&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% - 0.5em); height: calc(1lh + 1.5em); border-left: 1px solid;&quot;&gt;&lt;/div&gt;
        &lt;div style=&quot;padding-right: 1em;&quot;&gt;&lt;strong&gt;10000&lt;/strong&gt;&lt;!-- USD/month --&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;progress value=&quot;4291&quot; max=&quot;10000&quot; style=&quot;transform: scale(3); transform-origin: top left; width: calc(100% / 3);&quot;&gt;&lt;/progress&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;With this money, we’ve been able to cover our web hosting and self-hosted CI runners for Windows and Linux builds.
When the time comes, we’ll also be able to afford macOS runners and perf bots, as well as additional Outreachy interns next year!
As always, use of these funds will be decided transparently in the Technical Steering Committee.
For more details, head to our &lt;a href=&quot;https://servo.org/tmis/sponsorship/&quot;&gt;Sponsorship page&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;conferences-and-blogs&quot; tabindex=&quot;-1&quot;&gt;Conferences and blogs &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2024/12/09/this-month-in-servo/#conferences-and-blogs&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.igalia.com/mrego/servo-revival-2023-2024/&quot;&gt;&lt;strong&gt;Servo Revival: 2023-2024&lt;/strong&gt;&lt;/a&gt; — Manuel Rego wrote about Igalia’s role in getting Servo back to life, and now thriving, over the past two years&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=gpz088cxDcI&quot;&gt;&lt;strong&gt;Porting Servo to OpenHarmony&lt;/strong&gt;&lt;/a&gt; — Jonathan Schwender spoke at &lt;a href=&quot;https://lfeumembersummit24.sched.com/event/1hUAF&quot;&gt;GOSIM China 2024&lt;/a&gt; about the work we’ve done towards supporting OpenHarmony in Servo&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=1c9sHaEXQak&quot;&gt;&lt;strong&gt;Taming concurrency with (in)-formal methods in Servo&lt;/strong&gt;&lt;/a&gt; — Gregory Terzian spoke at &lt;a href=&quot;https://lfeumembersummit24.sched.com/event/1hUAF&quot;&gt;GOSIM China 2024&lt;/a&gt; about using &lt;a href=&quot;https://en.wikipedia.org/wiki/TLA%2B&quot;&gt;TLA+&lt;/a&gt; to help us correctly implement concurrent algorithms like the HTML event loop in Servo&lt;/li&gt;
&lt;/ul&gt;
&lt;style&gt;
    /* guaranteed minimum width for first paragraph after a float */
    ._floatmin {
        display: block;
        width: 13em;
        overflow: hidden;
    }
    ._none {
        display: none;
    }
    ._fig:not(#specificity) {
        width: 33em;
        max-width: 100%;
        margin: 1em auto;
    }
    ._fig &gt; ._flex {
        display: flex;
    }
    ._fig table {
        text-align: initial;
    }
    ._fig figcaption._notes {
        text-align: left;
        width: max-content;
        max-width: 100%;
    }
    ._figl:not(#specificity),
    ._figr:not(#specificity) {
        margin: 0 1em 1em;
    }
    ._figl {
        float: left;
        max-width: 100%;
    }
    ._figr {
        float: right;
        max-width: 100%;
    }
    ._figl &gt; figcaption,
    ._figr &gt; figcaption,
    ._figl &gt; iframe,
    ._figr &gt; iframe,
    ._figl &gt; video,
    ._figr &gt; video,
    ._figl &gt; a &gt; img,
    ._figr &gt; a &gt; img {
        width: 21em;
        max-width: 100%;
    }
    ._runin {
        margin-bottom: 1em;
    }
    ._runin &gt; p,
    ._runin &gt; h2 {
        display: inline;
    }
    ._correction {
        max-width: 33em;
        margin: 1em auto;
        border-bottom: 1px solid;
        padding-bottom: 1em;
    }
    ._note {
        margin: 1em 1em;
        border-left: 1px solid;
        padding-left: 1em;
        opacity: 0.75;
    }
&lt;/style&gt;
</content>
  </entry>
  <entry>
    <title>Behind the code: an interview with msub2</title>
    <link href="https://servo.org/tmis/blog/2024/11/12/behind-the-code-msub2/"/>
    <updated>2024-11-12T00:00:00Z</updated>
    <id>https://servo.org/tmis/blog/2024/11/12/behind-the-code-msub2/</id>
    <content xml:lang="en" type="html">&lt;p&gt;Behind the Code is a new series of interviews with the contributors who help propel Servo forward. Ever wondered why people
choose to work on web browsers, or how they get started? We invite you to look beyond the project’s pull requests and issue
reports, and get to know the humans who make it happen.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;msub2&quot; tabindex=&quot;-1&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/70986246?v=4&quot; width=&quot;60&quot; /&gt; &lt;a href=&quot;https://github.com/msub2&quot;&gt;msub2&lt;/a&gt; &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2024/11/12/behind-the-code-msub2/#msub2&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Some representative contributions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/servo/webxr/pull/243&quot;&gt;OpenXR: Separate graphics handling from main OpenXR code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/servo/webxr/pull/229&quot;&gt;Surface supported interaction profiles from OpenXR runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/servo/webxr/pull/224&quot;&gt;Support OpenXR runtimes that do not support fovMutable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/servo/servo/pull/33628&quot;&gt;crypto: Begin SubtleCrypto implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/servo/servo/pull/33508&quot;&gt;bindings: Allow Guard to take multiple conditions, check for SecureContext in ConstructorEnabled&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/servo/servo/pull/31200&quot;&gt;Implement non-XR Gamepad discovery and input&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;tell-us-about-yourself!&quot; tabindex=&quot;-1&quot;&gt;Tell us about yourself! &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2024/11/12/behind-the-code-msub2/#tell-us-about-yourself!&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;My name is Daniel, though I more commonly go by my online handle “msub2”. I’m something of a generalist, but my primary interests
are developing for the web, XR, and games. I created and run the &lt;a href=&quot;https://discord.gg/webxr&quot;&gt;WebXR Discord&lt;/a&gt;, which has members from both the Immersive Web Working
Group and the Meta Browser team, among others. In my free time (when I’m not working, doing Servo things, or tending to my other
programming projects) I’m typically watching videos from YouTube/Dropout/Nebula/etc and playing video games.&lt;/p&gt;
&lt;h3 id=&quot;why-did-you-start-contributing-to-servo%3F&quot; tabindex=&quot;-1&quot;&gt;Why did you start contributing to Servo? &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2024/11/12/behind-the-code-msub2/#why-did-you-start-contributing-to-servo%3F&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A confluence of interests, to put it simply. I was just starting to really get into Rust, having built a CHIP-8 emulator and an
NES emulator to get my hands dirty, but I also had prior experience contributing to other browser projects like Chromium and Gecko.
I was also eyeing Servo’s WebXR implementation (which I had submitted a couple small fixes for last year) as I could see there was
still plenty of work that could be done there. To get started though, I looked for an adjacent area that I could work on to get
familiar with the main Servo codebase, which led to my first contribution being support for non-XR gamepads!&lt;/p&gt;
&lt;h3 id=&quot;what-was-challenging-about-your-first-contribution%3F&quot; tabindex=&quot;-1&quot;&gt;What was challenging about your first contribution? &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2024/11/12/behind-the-code-msub2/#what-was-challenging-about-your-first-contribution%3F&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I’d say the most challenging part of my first contribution was twofold: the first was just getting oriented with how data flows
in and out of Servo via the embedding API and the second was understanding how DOM structs, methods, and codegen all worked together
in the script crate. Servo is a big project, but luckily I got lots of good help and feedback as I was working through it, which
definitely made things easier. Looking at existing examples in the codebase of the things I was trying to do got me the rest of the
way there I’d say.&lt;/p&gt;
&lt;h3 id=&quot;what-do-you-like-about-contributing-to-the-project%3F-what-do-you-get-out-of-it%3F&quot; tabindex=&quot;-1&quot;&gt;What do you like about contributing to the project? What do you get out of it? &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2024/11/12/behind-the-code-msub2/#what-do-you-like-about-contributing-to-the-project%3F-what-do-you-get-out-of-it%3F&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The thing I like most about Servo (and perhaps the web platform as an extension) is the amount of interesting problems that there
are to solve when it comes to implementing/supporting all of its different features. While most of my contributions so far have been
focused around Gamepad and WebXR, recently I’ve been working to help implement SubtleCrypto alongside another community member, which
has been really interesting! In addition to the satisfaction I get just from being able to solve interesting problems, I also rather
enjoy the feeling of contributing to a large, communal, open-source project.&lt;/p&gt;
&lt;h3 id=&quot;any-final-thoughts-you%E2%80%99d-like-to-share%3F&quot; tabindex=&quot;-1&quot;&gt;Any final thoughts you’d like to share? &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2024/11/12/behind-the-code-msub2/#any-final-thoughts-you%E2%80%99d-like-to-share%3F&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I’d encourage anyone who’s intrigued by the idea of contributing to Servo to give it a shot! The recent waves of attention for projects
like Verso and Ladybird have shown that there is an appetite for new browsers and browser engines, and with Servo’s history it just
feels right that it should finally be able to rise to a more prominent status in the ecosystem.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>This month in Servo: faster fonts, fetches, and flexbox!</title>
    <link href="https://servo.org/tmis/blog/2024/11/08/this-month-in-servo/"/>
    <updated>2024-11-08T00:00:00Z</updated>
    <id>https://servo.org/tmis/blog/2024/11/08/this-month-in-servo/</id>
    <content xml:lang="en" type="html">&lt;p&gt;Servo now supports &lt;strong&gt;‘mix-blend-mode: plus-lighter’&lt;/strong&gt; (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34057&quot;&gt;#34057&lt;/a&gt;) and &lt;strong&gt;‘transition-behavior: allow-discrete’&lt;/strong&gt; (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33991&quot;&gt;#33991&lt;/a&gt;), including in the ‘transition’ shorthand (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34005&quot;&gt;#34005&lt;/a&gt;), along with the &lt;a href=&quot;https://w3c.github.io/webappsec-fetch-metadata/&quot;&gt;fetch metadata request headers&lt;/a&gt; &lt;strong&gt;‘Sec-Fetch-Site’&lt;/strong&gt;, &lt;strong&gt;‘Sec-Fetch-Mode’&lt;/strong&gt;, &lt;strong&gt;‘Sec-Fetch-User’&lt;/strong&gt;, and &lt;strong&gt;‘Sec-Fetch-Dest’&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33830&quot;&gt;#33830&lt;/a&gt;).&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://servo.org/tmis/img/blog/october-2024-narrow.png&quot;&gt;&lt;img src=&quot;https://servo.org/tmis/img/blog/october-2024-narrow.png&quot; alt=&quot;Servo nightly showing new support for non-ASCII characters in &lt;img srcset&gt;, ‘transition-behavior: allow-discrete’, ‘mix-blend-mode: plus-lighter’, and ‘width: stretch’&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;p&gt;We now have partial support for the CSS size keywords &lt;strong&gt;‘min-content’&lt;/strong&gt;, &lt;strong&gt;‘max-content’&lt;/strong&gt;, &lt;strong&gt;‘fit-content’&lt;/strong&gt;, and &lt;strong&gt;‘stretch’&lt;/strong&gt; (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33558&quot;&gt;#33558&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33659&quot;&gt;#33659&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33854&quot;&gt;#33854&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33951&quot;&gt;#33951&lt;/a&gt;), including in floats (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33666&quot;&gt;#33666&lt;/a&gt;), atomic inlines (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33737&quot;&gt;#33737&lt;/a&gt;), and elements with ‘position: absolute’ or ‘fixed’ (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33950&quot;&gt;#33950&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;We’re implementing the &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto&quot;&gt;SubtleCrypto&lt;/a&gt; API&lt;/strong&gt;, starting with full support for &lt;strong&gt;crypto.subtle.digest()&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34034&quot;&gt;#34034&lt;/a&gt;), partial support for &lt;strong&gt;generateKey()&lt;/strong&gt; with AES-CBC and AES-CTR (&lt;a href=&quot;https://github.com/msub2&quot;&gt;@msub2&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33628&quot;&gt;#33628&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33963&quot;&gt;#33963&lt;/a&gt;), and partial support for &lt;strong&gt;encrypt()&lt;/strong&gt;, and &lt;strong&gt;decrypt()&lt;/strong&gt; with AES-CBC (&lt;a href=&quot;https://github.com/msub2&quot;&gt;@msub2&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33795&quot;&gt;#33795&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&quot;more-engine-changes&quot; tabindex=&quot;-1&quot;&gt;More engine changes &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2024/11/08/this-month-in-servo/#more-engine-changes&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Servo’s architecture is improving, with a new cross-process compositor API that &lt;strong&gt;reduces memory copy overhead for video&lt;/strong&gt; (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/crbrz&quot;&gt;@crbrz&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33619&quot;&gt;#33619&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33660&quot;&gt;#33660&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33817&quot;&gt;#33817&lt;/a&gt;).
We’ve also started phasing out our old OpenGL bindings (&lt;a href=&quot;https://github.com/servo/gleam&quot;&gt;gleam&lt;/a&gt; and &lt;a href=&quot;https://github.com/servo/sparkle&quot;&gt;sparkle&lt;/a&gt;) in favour of &lt;a href=&quot;https://crates.io/crates/glow&quot;&gt;glow&lt;/a&gt;, which should reduce Servo’s complexity and binary size (&lt;a href=&quot;https://github.com/sagudev&quot;&gt;@sagudev&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/surfman/pull/318&quot;&gt;surfman#318&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/webxr/pull/248&quot;&gt;webxr#248&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33538&quot;&gt;#33538&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33910&quot;&gt;#33910&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33911&quot;&gt;#33911&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;We’ve updated to &lt;strong&gt;Stylo 2024-10-04&lt;/strong&gt; (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33767&quot;&gt;#33767&lt;/a&gt;) and &lt;a href=&quot;https://github.com/gfx-rs/wgpu/releases/tag/v23.0.0&quot;&gt;&lt;strong&gt;wgpu 23&lt;/strong&gt;&lt;/a&gt; (&lt;a href=&quot;https://github.com/sagudev&quot;&gt;@sagudev&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34073&quot;&gt;#34073&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33819&quot;&gt;#33819&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33635&quot;&gt;#33635&lt;/a&gt;).
The new version of wgpu includes several patches from &lt;a href=&quot;https://github.com/sagudev&quot;&gt;@sagudev&lt;/a&gt;, adding &lt;strong&gt;support for &lt;code&gt;const_assert&lt;/code&gt;&lt;/strong&gt;, as well as &lt;strong&gt;accessing &lt;code&gt;const&lt;/code&gt; arrays with runtime index values&lt;/strong&gt;.
We’ve also reworked WebGPU canvas presentation to ensure that we never use old buffers by mistake (&lt;a href=&quot;https://github.com/sagudev&quot;&gt;@sagudev&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33613&quot;&gt;#33613&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;We’ve also landed a bunch of improvements to our DOM geometry APIs, with DOMMatrix now &lt;strong&gt;supporting toString()&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33792&quot;&gt;#33792&lt;/a&gt;) and &lt;strong&gt;updating &lt;code&gt;is2D&lt;/code&gt; on mutation&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33796&quot;&gt;#33796&lt;/a&gt;), support for &lt;strong&gt;DOMRect.fromRect()&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33798&quot;&gt;#33798&lt;/a&gt;), and getBounds() on DOMQuad now &lt;strong&gt;handling NaN correctly&lt;/strong&gt; (&lt;a href=&quot;https://github.com/simonwuelker&quot;&gt;@simonwuelker&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33794&quot;&gt;#33794&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;We now correctly handle &lt;strong&gt;non-ASCII characters in &amp;lt;img srcset&amp;gt;&lt;/strong&gt; (&lt;a href=&quot;https://github.com/evuez&quot;&gt;@evuez&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33873&quot;&gt;#33873&lt;/a&gt;), correctly handle &lt;strong&gt;data: URLs&lt;/strong&gt; in more situations (&lt;a href=&quot;https://github.com/webbeef&quot;&gt;@webbeef&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33500&quot;&gt;#33500&lt;/a&gt;), and no longer throw an uncaught exception when pages try to use IntersectionObserver (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33989&quot;&gt;#33989&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Outreachy contributors are doing great work in Servo again, helping us land many of this month’s improvements to GC static analysis (&lt;a href=&quot;https://github.com/taniishkaa&quot;&gt;@taniishkaa&lt;/a&gt;, &lt;a href=&quot;https://github.com/webbeef&quot;&gt;@webbeef&lt;/a&gt;, &lt;a href=&quot;https://github.com/chickenleaf&quot;&gt;@chickenleaf&lt;/a&gt;, &lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/jahielkomu&quot;&gt;@jahielkomu&lt;/a&gt;, &lt;a href=&quot;https://github.com/wulanseruniati&quot;&gt;@wulanseruniati&lt;/a&gt;, &lt;a href=&quot;https://github.com/lauwwulan&quot;&gt;@lauwwulan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33692&quot;&gt;#33692&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33706&quot;&gt;#33706&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33800&quot;&gt;#33800&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33774&quot;&gt;#33774&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33816&quot;&gt;#33816&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33808&quot;&gt;#33808&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33827&quot;&gt;#33827&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33822&quot;&gt;#33822&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33820&quot;&gt;#33820&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33828&quot;&gt;#33828&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33852&quot;&gt;#33852&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33843&quot;&gt;#33843&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33836&quot;&gt;#33836&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33865&quot;&gt;#33865&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33862&quot;&gt;#33862&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33891&quot;&gt;#33891&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33888&quot;&gt;#33888&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33880&quot;&gt;#33880&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33902&quot;&gt;#33902&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33892&quot;&gt;#33892&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33893&quot;&gt;#33893&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33895&quot;&gt;#33895&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33931&quot;&gt;#33931&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33924&quot;&gt;#33924&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33917&quot;&gt;#33917&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33921&quot;&gt;#33921&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33958&quot;&gt;#33958&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33920&quot;&gt;#33920&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33973&quot;&gt;#33973&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33960&quot;&gt;#33960&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33928&quot;&gt;#33928&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33985&quot;&gt;#33985&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33984&quot;&gt;#33984&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33978&quot;&gt;#33978&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33975&quot;&gt;#33975&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34003&quot;&gt;#34003&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34002&quot;&gt;#34002&lt;/a&gt;) and code health (&lt;a href=&quot;https://github.com/chickenleaf&quot;&gt;@chickenleaf&lt;/a&gt;, &lt;a href=&quot;https://github.com/DileepReddyP&quot;&gt;@DileepReddyP&lt;/a&gt;, &lt;a href=&quot;https://github.com/taniishkaa&quot;&gt;@taniishkaa&lt;/a&gt;, &lt;a href=&quot;https://github.com/mercybassey&quot;&gt;@mercybassey&lt;/a&gt;, &lt;a href=&quot;https://github.com/jahielkomu&quot;&gt;@jahielkomu&lt;/a&gt;, &lt;a href=&quot;https://github.com/cashall-0&quot;&gt;@cashall-0&lt;/a&gt;, &lt;a href=&quot;https://github.com/tony-nyagah&quot;&gt;@tony-nyagah&lt;/a&gt;, &lt;a href=&quot;https://github.com/lwz23&quot;&gt;@lwz23&lt;/a&gt;, &lt;a href=&quot;https://github.com/Noble14477&quot;&gt;@Noble14477&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33959&quot;&gt;#33959&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33713&quot;&gt;#33713&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33804&quot;&gt;#33804&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33618&quot;&gt;#33618&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33625&quot;&gt;#33625&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33631&quot;&gt;#33631&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33632&quot;&gt;#33632&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33633&quot;&gt;#33633&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33643&quot;&gt;#33643&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33643&quot;&gt;#33643&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33646&quot;&gt;#33646&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33648&quot;&gt;#33648&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33653&quot;&gt;#33653&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33664&quot;&gt;#33664&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33685&quot;&gt;#33685&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33686&quot;&gt;#33686&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33689&quot;&gt;#33689&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33686&quot;&gt;#33686&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33690&quot;&gt;#33690&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33705&quot;&gt;#33705&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33707&quot;&gt;#33707&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33724&quot;&gt;#33724&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33727&quot;&gt;#33727&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33728&quot;&gt;#33728&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33729&quot;&gt;#33729&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33730&quot;&gt;#33730&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33740&quot;&gt;#33740&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33744&quot;&gt;#33744&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33757&quot;&gt;#33757&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33771&quot;&gt;#33771&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33757&quot;&gt;#33757&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33782&quot;&gt;#33782&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33790&quot;&gt;#33790&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33809&quot;&gt;#33809&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33818&quot;&gt;#33818&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33821&quot;&gt;#33821&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33835&quot;&gt;#33835&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33840&quot;&gt;#33840&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33853&quot;&gt;#33853&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33849&quot;&gt;#33849&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33860&quot;&gt;#33860&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33878&quot;&gt;#33878&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33881&quot;&gt;#33881&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33894&quot;&gt;#33894&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33935&quot;&gt;#33935&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33936&quot;&gt;#33936&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33943&quot;&gt;#33943&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&quot;performance-improvements&quot; tabindex=&quot;-1&quot;&gt;Performance improvements &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2024/11/08/this-month-in-servo/#performance-improvements&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Our font system is faster now, with &lt;strong&gt;reduced latency&lt;/strong&gt; when loading system fonts (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33638&quot;&gt;#33638&lt;/a&gt;), layout &lt;strong&gt;no longer blocking on sending font data&lt;/strong&gt; to WebRender (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33600&quot;&gt;#33600&lt;/a&gt;), and &lt;strong&gt;memory mapped system fonts&lt;/strong&gt; on macOS and FreeType platforms like Linux (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/mukilan&quot;&gt;@mukilan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33747&quot;&gt;#33747&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Servo now has a &lt;strong&gt;dedicated fetch thread&lt;/strong&gt; (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33863&quot;&gt;#33863&lt;/a&gt;).
This greatly reduces the number of IPC channels we create for individual requests, and should fix crashes related to file descriptor exhaustion on some platforms.
&lt;strong&gt;Brotli-compressed responses&lt;/strong&gt; are also handled more efficiently, such that we run the parser with up to 8 KiB of decompressed data at a time, rather than only 10 bytes of compressed data at a time (&lt;a href=&quot;https://github.com/crbrz&quot;&gt;@crbrz&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33611&quot;&gt;#33611&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Flexbox layout now uses caching&lt;/strong&gt; to avoid doing unnecessary work (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33964&quot;&gt;#33964&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33967&quot;&gt;#33967&lt;/a&gt;), and now has experimental &lt;strong&gt;&lt;a href=&quot;https://docs.rs/tracing/0.1.40/tracing/&quot;&gt;tracing&lt;/a&gt;-based profiling support&lt;/strong&gt; (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33647&quot;&gt;#33647&lt;/a&gt;), which in turn no longer spams RUST_LOG=info when not enabled (&lt;a href=&quot;https://github.com/delan&quot;&gt;@delan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33845&quot;&gt;#33845&lt;/a&gt;).
We’ve also landed optimisations in table layout (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33575&quot;&gt;#33575&lt;/a&gt;) and in our layout engine as a whole (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33806&quot;&gt;#33806&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Work continues on making our massive &lt;code&gt;script&lt;/code&gt; crate build faster, with &lt;strong&gt;improved incremental builds&lt;/strong&gt; (&lt;a href=&quot;https://github.com/sagudev&quot;&gt;@sagudev&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33502&quot;&gt;#33502&lt;/a&gt;) and further patches towards &lt;strong&gt;splitting &lt;code&gt;script&lt;/code&gt; into smaller crates&lt;/strong&gt; (&lt;a href=&quot;https://github.com/sagudev&quot;&gt;@sagudev&lt;/a&gt;, &lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33627&quot;&gt;#33627&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33665&quot;&gt;#33665&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;We’ve also fixed several crashes, including when initiating a WebXR session on macOS (&lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33962&quot;&gt;#33962&lt;/a&gt;), when laying out replaced elements (&lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34006&quot;&gt;#34006&lt;/a&gt;), when running JavaScript modules (&lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33938&quot;&gt;#33938&lt;/a&gt;), and in many situations when garbage collection occurs (&lt;a href=&quot;https://github.com/chickenleaf&quot;&gt;@chickenleaf&lt;/a&gt;, &lt;a href=&quot;https://github.com/taniishkaa&quot;&gt;@taniishkaa&lt;/a&gt;, &lt;a href=&quot;https://github.com/Loirooriol&quot;&gt;@Loirooriol&lt;/a&gt;, &lt;a href=&quot;https://github.com/jdm&quot;&gt;@jdm&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33857&quot;&gt;#33857&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33875&quot;&gt;#33875&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33904&quot;&gt;#33904&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33929&quot;&gt;#33929&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33942&quot;&gt;#33942&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33976&quot;&gt;#33976&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34019&quot;&gt;#34019&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34020&quot;&gt;#34020&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33965&quot;&gt;#33965&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33937&quot;&gt;#33937&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&quot;servoshell%2C-embedding%2C-and-devtools&quot; tabindex=&quot;-1&quot;&gt;servoshell, embedding, and devtools &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2024/11/08/this-month-in-servo/#servoshell%2C-embedding%2C-and-devtools&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://book.servo.org/hacking/using-devtools.html&quot;&gt;Devtools&lt;/a&gt; support&lt;/strong&gt; (&lt;code&gt;--devtools 6080&lt;/code&gt;) is now compatible with Firefox 131+ (&lt;a href=&quot;https://github.com/eerii&quot;&gt;@eerii&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33661&quot;&gt;#33661&lt;/a&gt;), and no longer lists iframes as if they were inspectable tabs (&lt;a href=&quot;https://github.com/eerii&quot;&gt;@eerii&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34032&quot;&gt;#34032&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://book.servo.org/running-servoshell.html&quot;&gt;Servo-the-browser&lt;/a&gt; now &lt;strong&gt;avoids unnecessary redraws&lt;/strong&gt; (&lt;a href=&quot;https://github.com/webbeef&quot;&gt;@webbeef&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34008&quot;&gt;#34008&lt;/a&gt;), massively reducing its CPU usage, and no longer scrolls too slowly on HiDPI systems (&lt;a href=&quot;https://github.com/nicoburns&quot;&gt;@nicoburns&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34063&quot;&gt;#34063&lt;/a&gt;).
We now &lt;strong&gt;update the location bar when redirects happen&lt;/strong&gt; (&lt;a href=&quot;https://github.com/rwakulszowa&quot;&gt;@rwakulszowa&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34004&quot;&gt;#34004&lt;/a&gt;), and these updates are sent to all embedders of Servo, not just servoshell.&lt;/p&gt;
&lt;p&gt;We’ve added a &lt;strong&gt;new &lt;code&gt;--unminify-css&lt;/code&gt; option&lt;/strong&gt; (&lt;a href=&quot;https://github.com/Taym95&quot;&gt;@Taym95&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33919&quot;&gt;#33919&lt;/a&gt;), allowing you to dump the CSS used by a page &lt;a href=&quot;https://book.servo.org/hacking/web-compat-bugs.html#diagnosing-js-errors&quot;&gt;like you can for JavaScript&lt;/a&gt;.
This will pave the way for allowing you to modify that CSS for debugging site compat issues, which is not yet implemented.&lt;/p&gt;
&lt;p&gt;We’ve also added a &lt;strong&gt;new &lt;code&gt;--screen-size&lt;/code&gt; option&lt;/strong&gt; that can help with testing mobile websites (&lt;a href=&quot;https://github.com/mrobinson&quot;&gt;@mrobinson&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/34038&quot;&gt;#34038&lt;/a&gt;), renaming the old &lt;code&gt;--resolution&lt;/code&gt; option to &lt;code&gt;--window-size&lt;/code&gt;, and we’ve &lt;strong&gt;removed &lt;code&gt;--no-minibrowser&lt;/code&gt; mode&lt;/strong&gt; (&lt;a href=&quot;https://github.com/Taym95&quot;&gt;@Taym95&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33677&quot;&gt;#33677&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;We now publish &lt;strong&gt;nightly builds for OpenHarmony&lt;/strong&gt; on &lt;a href=&quot;http://servo.org/&quot;&gt;servo.org&lt;/a&gt; (&lt;a href=&quot;https://github.com/mukilan&quot;&gt;@mukilan&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33801&quot;&gt;#33801&lt;/a&gt;).
When running servoshell on OpenHarmony, we now display toasts when pages load or panic (&lt;a href=&quot;https://github.com/jschwe&quot;&gt;@jschwe&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33621&quot;&gt;#33621&lt;/a&gt;), and you can now pass certain Servo options via &lt;code&gt;hdc shell aa start&lt;/code&gt; or a test app (&lt;a href=&quot;https://github.com/jschwe&quot;&gt;@jschwe&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/servo/pull/33588&quot;&gt;#33588&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&quot;donations&quot; tabindex=&quot;-1&quot;&gt;Donations &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2024/11/08/this-month-in-servo/#donations&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks again for your generous support!
We are now receiving &lt;strong&gt;4201 USD/month&lt;/strong&gt; (+1.3% over September) in recurring donations.
&lt;strong&gt;We are no longer accepting donations on LFX&lt;/strong&gt; — if you were donating there, please move your recurring donations to &lt;a href=&quot;https://github.com/sponsors/servo&quot;&gt;GitHub&lt;/a&gt; or &lt;a href=&quot;https://opencollective.com/servo&quot;&gt;Open Collective&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Servo is also on &lt;a href=&quot;https://thanks.dev/&quot;&gt;thanks.dev&lt;/a&gt;, and already &lt;strong&gt;ten GitHub users&lt;/strong&gt; that depend on Servo are sponsoring us there.
If you use Servo libraries like &lt;a href=&quot;https://crates.io/crates/url/reverse_dependencies&quot;&gt;url&lt;/a&gt;, &lt;a href=&quot;https://crates.io/crates/html5ever/reverse_dependencies&quot;&gt;html5ever&lt;/a&gt;, &lt;a href=&quot;https://crates.io/crates/selectors/reverse_dependencies&quot;&gt;selectors&lt;/a&gt;, or &lt;a href=&quot;https://crates.io/crates/cssparser/reverse_dependencies&quot;&gt;cssparser&lt;/a&gt;, signing up for &lt;a href=&quot;https://thanks.dev/&quot;&gt;thanks.dev&lt;/a&gt; could be a good way for you (or your employer) to give back to the community.&lt;/p&gt;
&lt;figure class=&quot;_fig&quot; style=&quot;width: 100%; margin: 1em 0;&quot;&gt;&lt;div class=&quot;_flex&quot; style=&quot;height: calc(1lh + 3em); flex-flow: column nowrap; text-align: left;&quot;&gt;
    &lt;div style=&quot;position: relative; text-align: right;&quot;&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% * 4201 / 10000); padding-left: 0.5em;&quot;&gt;&lt;strong&gt;4201&lt;/strong&gt; USD/month&lt;/div&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% * 4201 / 10000); height: calc(1lh + 1.5em); border-left: 1px solid;&quot;&gt;&lt;/div&gt;
        &lt;div style=&quot;position: absolute; margin-left: calc(100% - 0.5em); height: calc(1lh + 1.5em); border-left: 1px solid;&quot;&gt;&lt;/div&gt;
        &lt;div style=&quot;padding-right: 1em;&quot;&gt;&lt;strong&gt;10000&lt;/strong&gt;&lt;!-- USD/month --&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;progress value=&quot;4201&quot; max=&quot;10000&quot; style=&quot;transform: scale(3); transform-origin: top left; width: calc(100% / 3);&quot;&gt;&lt;/progress&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;With this money, we’ve been able to pay for a &lt;strong&gt;second Outreachy intern&lt;/strong&gt; in this upcoming round, plus our web hosting and self-hosted CI runners for Windows and Linux builds.
When the time comes, we’ll also be able to afford macOS runners and perf bots!
As always, use of these funds will be decided transparently in the Technical Steering Committee.
For more details, head to our &lt;a href=&quot;https://servo.org/tmis/sponsorship/&quot;&gt;Sponsorship page&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;conference-talks&quot; tabindex=&quot;-1&quot;&gt;Conference talks &lt;a class=&quot;header-anchor&quot; href=&quot;https://servo.org/tmis/blog/2024/11/08/this-month-in-servo/#conference-talks&quot;&gt;
        &lt;span class=&quot;icon hashlink&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;
      &lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=NHa4LPpWRh8&amp;amp;t=1365s&quot;&gt;&lt;strong&gt;Servo project update&lt;/strong&gt;&lt;/a&gt; — Manuel Rego spoke at the &lt;a href=&quot;https://lfeumembersummit24.sched.com/event/1hUAF&quot;&gt;LF Europe Member Summit&lt;/a&gt; about the status and long-term vision of the Servo project&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/live/LPCg0NcQICQ?t=1089s&quot;&gt;&lt;strong&gt;Servo: Building a Browser Rendering Engine in Rust&lt;/strong&gt;&lt;/a&gt; (&lt;a href=&quot;https://servo.org/slides/2024-10-25-ubuntu-summit/&quot;&gt;slides&lt;/a&gt;) — Rakhi Sharma spoke at the &lt;a href=&quot;https://events.canonical.com/event/51/contributions/516/&quot;&gt;Ubuntu Summit&lt;/a&gt; about Servo’s recent work in embedding, layout, and benchmarking&lt;/li&gt;
&lt;/ul&gt;
&lt;style&gt;
    /* guaranteed minimum width for first paragraph after a float */
    ._floatmin {
        display: block;
        width: 13em;
        overflow: hidden;
    }
    ._none {
        display: none;
    }
    ._fig:not(#specificity) {
        width: 33em;
        max-width: 100%;
        margin: 1em auto;
    }
    ._fig &gt; ._flex {
        display: flex;
    }
    ._fig table {
        text-align: initial;
    }
    ._fig figcaption._notes {
        text-align: left;
        width: max-content;
        max-width: 100%;
    }
    ._figl:not(#specificity),
    ._figr:not(#specificity) {
        margin: 0 1em 1em;
    }
    ._figl {
        float: left;
        max-width: 100%;
    }
    ._figr {
        float: right;
        max-width: 100%;
    }
    ._figl &gt; figcaption,
    ._figr &gt; figcaption,
    ._figl &gt; iframe,
    ._figr &gt; iframe,
    ._figl &gt; video,
    ._figr &gt; video,
    ._figl &gt; a &gt; img,
    ._figr &gt; a &gt; img {
        width: 21em;
        max-width: 100%;
    }
    ._runin {
        margin-bottom: 1em;
    }
    ._runin &gt; p,
    ._runin &gt; h2 {
        display: inline;
    }
    ._correction {
        max-width: 33em;
        margin: 1em auto;
        border-bottom: 1px solid;
        padding-bottom: 1em;
    }
    ._note {
        margin: 1em 1em;
        border-left: 1px solid;
        padding-left: 1em;
        opacity: 0.75;
    }
&lt;/style&gt;
</content>
  </entry>
</feed>