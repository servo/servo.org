>>> 2025-08-01T06:10:37Z
-https://github.com/servo/servo/pull/38161	(@jerensl, #38161)	script_binding: Add type check on servo script bindings (#38161)
    # Introduce type checking with Pyrefly in `components/script_bindings`
    # This commit adds Pyrefly-based type checking to the `components/script_bindings` directory.  The primary goal is to
    # catch type inconsistencies early and reduce the likelihood of unexpected runtime errors.
    # This change affects the `webidl` component, as these script bindings are responsible for connecting WebIDL
    # specifications to the Rust codebase.
    # Testing: `./mach test-wpt webidl` Fixes: *Link to an issue this pull requests fixes or remove this line if there is no
    # issue*
-https://github.com/servo/servo/pull/38396	(@dependabot[bot], @dependabot[bot], #38396)	build(deps): bump libredox from 0.1.8 to 0.1.9 (#38396)
    # Bumps libredox from 0.1.8 to 0.1.9.
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=libredox&package-manager=cargo
    # &previous-version=0.1.8&new-version=0.1.9)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-de
    # pendabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38394	(@dependabot[bot], @dependabot[bot], #38394)	build(deps): bump wayland-protocols from 0.32.8 to 0.32.9 (#38394)
    # Bumps [wayland-protocols](https://github.com/smithay/wayland-rs) from 0.32.8 to 0.32.9.
    # Commits
    # See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=wayland-protocols&package-mana
    # ger=cargo&previous-version=0.32.8&new-version=0.32.9)](https://docs.github.com/en/github/managing-security-vulnerabiliti
    # es/about-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38392	(@dependabot[bot], @dependabot[bot], #38392)	build(deps): bump wayland-cursor from 0.31.10 to 0.31.11 (#38392)
    # Bumps [wayland-cursor](https://github.com/smithay/wayland-rs) from 0.31.10 to 0.31.11.
    # Commits
    # See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=wayland-cursor&package-manager
    # =cargo&previous-version=0.31.10&new-version=0.31.11)](https://docs.github.com/en/github/managing-security-vulnerabilitie
    # s/about-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38393	(@dependabot[bot], @dependabot[bot], #38393)	build(deps): bump redox_users from 0.5.0 to 0.5.2 (#38393)
    # Bumps redox_users from 0.5.0 to 0.5.2.
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=redox_users&package-manager=ca
    # rgo&previous-version=0.5.0&new-version=0.5.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about
    # -dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/38391	(@mrobinson, @Loirooriol, #38391)	layout: Account for sticky nodes in ScrollTree transforms and cache transforms (#38391)
    layout
    # When calculating the node to world transform for use in bounding box queries, cache the values of the transform.  In
    # addition, when scroll offsets change, ensure that the cached values are invalided properly.  This change necessitated
    # the storage of children for each node in the tree, so that we can walk both up and down the tree.  The purpose of this
    # part of the change is to increase performance when doing multiple queries and prepare the tree for hit testing.
    # In addition, this change also tries to take into account sticky offsets, using the algorithm from WebRender to calculate
    # sticky offsets.  This is also going to be important for hit testing.
    # Testing: Newly passing tests:
    #  - /css/css-position/position-sticky-dynamic-ancestor-001.html -
    #  /css/css-tables/tentative/position-sticky-container.html
-https://github.com/servo/servo/pull/38388	(@jerensl, #38388)	mach: Add comment to ignore type on geteuid as it only available on unix (#38388)
    # Currently pyrefly have an issues with top level assertion on platform gating, so we decide to ignore it for now.
    # https://github.com/facebook/pyrefly/issues/795
-https://github.com/servo/servo/pull/38381	(@yezhizhen, @michael.wu1107@gmail.com, #38381)	servoshell: Revert #38307 to fix resize bug (#38381)
    # Also added some comments to make things clear.  For details, see
    # https://github.com/servo/servo/issues/38369#issuecomment-3138378527
    # Testing: Tested on X11 Ubuntu, Wayland Ubuntu, macOS, Windows.  Fixes: #38369
    # Co-authored-by: minghuaw
-https://github.com/servo/servo/pull/38358	(@jerensl, #38358)	ci: Automatically cancel bootstrap step after 1 hour in wpt linux/mach (#38358)
    # Introduces a timeout for each WPT run chunk job, set to 1 hour, after which it will be automatically canceled.
    # Testing: Fixes: #38348
+https://github.com/servo/servo/pull/38331	(@delan, @atbrakhi, #38331)	script: Create a debugger script for the SpiderMonkey Debugger API (#38331)
    devtools
    # to use the [SpiderMonkey Debugger API](https://firefox-source-docs.mozilla.org/js/Debugger/), we need to call it from an
    # internal debugger script that we will supply.  this script must run in the same runtime as the debuggee(s), but in a
    # separate [compartment](https://udn.realityripple.com/docs/Mozilla/Projects/SpiderMonkey/Compartments) ([more
    # details](https://hacks.mozilla.org/2020/03/future-proofing-firefoxs-javascript-debugger-implementation/)).
    # this patch defines a new DebuggerGlobalScope type and a new debugger script resource.  when creating each script thread,
    # we create a debugger global, load the debugger script from resources/debugger.js, and run that script in the global to
    # initialise the Debugger API.
    # subsequent patches will use the debugger script as an RPC mechanism for the Debugger API.
    # Testing: no testable effects yet, but will be used in #37667 Fixes: part of #36027
>>> 2025-08-02T06:08:02Z
-https://github.com/servo/servo/pull/38423	(@euclid.ye@huawei.com, #38423)	script: Lazy init and reuse const `BOOLEAN_ATTRIBUTES` (#38423)
    # Follow up of #38401.  - The constant String array was recreated for every invocation.  Chromium store this as a global
    # const.
    # https://source.chromium.org/chromium/chromium/src/+/main:chrome/test/chromedriver/element_commands.cc;l=48-94?q=chrome%2
    # Ftest%2Fchromedriver%2Felement_commands.cc
    # We now use static `LazyLock` to lazy init and avoid recreation.  - Clean up some comments
    # Testing: Just refactor.
+https://github.com/servo/servo/pull/38216	(@uthmaniv, #38216)	Calculate and send  the missing transferred_size and content_size to dev tools (#38216)
    devtools
    # The current behaviour in dev tools network monitor is missing data for the `Transferred` size and `Content` size.  We
    # currently have a fn `response_content` that constructs the `ResponseContentMsg` struct where the two missing data fields
    # are defined and set to zero values.  These current changes calculates the data in the `response_content` fn and sends a
    # `NetworkEvent::HttpResponse` to the client when the final body is done.  Currently, we have data appearing in the
    # `Transferred` column of the network panel fixes: https://github.com/servo/servo/issues/38126
-https://github.com/servo/servo/pull/38412	(@uthmaniv, #38412)	net: Make devtools test resistant to event reordering (#38412)
    # This PR makes the `test_redirected_request_to_devtools` collect all the network events from the channel into a vector,
    # and then asserting that the expected requests/responses are present in the vector, this aims to remove the ordering
    # issues that cause intermittent failures.
    # Testing: ran `./mach test-unit -p net` with the changes in this PR applied to https://github.com/servo/servo/pull/38216
    # getting all tests passing Fixes: (https://github.com/servo/servo/issues/38411)
+https://github.com/servo/servo/pull/38418	(@averyrudelphe@gmail.com, @mrobinson, #38418)	layout: Fix negative outline offset (#38418)
    layout
    # Properly caps the minimum offset on each side as recommended by the standards:
    # https://drafts.csswg.org/css-ui-3/#outline-offset
    # Testing: Covered by WPT tests.  (3 new passing!) Fixes: #19508
-https://github.com/servo/servo/pull/38417	(@dependabot[bot], @dependabot[bot], #38417)	build(deps): bump serde_json from 1.0.141 to 1.0.142 (#38417)
    # Bumps [serde_json](https://github.com/serde-rs/json) from 1.0.141 to 1.0.142.
    # Release notes Sourced from serde_json's releases.
    # v1.0.142
    # impl Default for &amp;Value (#1265, thanks @​aatifsyed)
    # Commits
    # 1731167 Release 1.0.142 e51c814 Touch up PR 1265 84abbdb Merge pull request #1265 from aatifsyed/master 9206cc0 feat:
    # impl Default for &amp;Value See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=serde_json&package-manager=car
    # go&previous-version=1.0.141&new-version=1.0.142)](https://docs.github.com/en/github/managing-security-vulnerabilities/ab
    # out-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38416	(@dependabot[bot], @dependabot[bot], #38416)	build(deps): bump wayland-protocols-wlr from 0.3.8 to 0.3.9 (#38416)
    # Bumps [wayland-protocols-wlr](https://github.com/smithay/wayland-rs) from 0.3.8 to 0.3.9.
    # Commits
    # See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=wayland-protocols-wlr&package-
    # manager=cargo&previous-version=0.3.8&new-version=0.3.9)](https://docs.github.com/en/github/managing-security-vulnerabili
    # ties/about-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38415	(@dependabot[bot], @dependabot[bot], #38415)	build(deps): bump wayland-protocols-plasma from 0.3.8 to 0.3.9 (#38415)
    # Bumps [wayland-protocols-plasma](https://github.com/smithay/wayland-rs) from 0.3.8 to 0.3.9.
    # Commits
    # See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=wayland-protocols-plasma&packa
    # ge-manager=cargo&previous-version=0.3.8&new-version=0.3.9)](https://docs.github.com/en/github/managing-security-vulnerab
    # ilities/about-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38414	(@dependabot[bot], @dependabot[bot], #38414)	build(deps): bump cc from 1.2.30 to 1.2.31 (#38414)
    # Bumps [cc](https://github.com/rust-lang/cc-rs) from 1.2.30 to 1.2.31.
    # Changelog Sourced from cc's changelog.
    # 1.2.31 - 2025-08-01 Other
    # Add doc for using sccache/ccache etc (#1502) ability to statically link against C++ stdlib (#1497) Add instructions on
    # using sccache (#1503) Add support for recognizing some architectures supported by GCC, but not LLVM.  (#1500)
    # Changelog All notable changes to this project will be documented in this file.  The format is based on Keep a Changelog,
    # and this project adheres to Semantic Versioning.  [Unreleased]
    # Commits
    # bb6cd84 chore: release v1.2.31 (#1504) 02c0952 Add doc for using sccache/ccache etc (#1502) 20c06cf Proposal: ability to
    # statically link against C++ stdlib (#1497) e435ac9 doc: Add instructions on using sccache (#1503) fcc7fc4 Add support
    # for recognizing some architectures supported by GCC, but not LLVM...  See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=cc&package-manager=cargo&previ
    # ous-version=1.2.30&new-version=1.2.31)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-depend
    # abot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/38406	(@sagudev, #38406)	canvas: prune vello scene on each render and make rendering cacheable (#38406)
    performance
    # As noted in #38345, vello scenes only grow.  While we can reset them when clearing viewport (#38356) that is not enough.
    # We need to reset scene on each render (~each frame) and providing old frame as backdrop to new scene.  Be do this lazily
    # so multiple rendering without any changes should be cheaper, we still do GPUBuffer mapping, because that would require
    # more complex work.
    # Testing: Code functionality is covered by existing WPT tests, but we do not have any performance test.
+https://github.com/servo/servo/pull/38385	(@gterzian, #38385)	script: in stream piping, ensure the heap is set only after it has been moved (#38385)
    stability
    # Setting a value on a `Heap` requires the heap to not be moved after the call to `set`, the current code sets the value
    # first, then moves it into the `shutdown_error` refcell.  It should be the other way around.
    # Testing: the core logic is covered by WPT tests, which should remain unchanged.
    # Fixes: [38299](https://github.com/servo/servo/issues/38299)
-https://github.com/servo/servo/pull/38399	(@euclid.ye@huawei.com, #38399)	compositor: Add more doc for size of different `RenderingContext` implementation (#38399)
    # For more details, see https://github.com/servo/servo/issues/38369#issuecomment-3138378527.
    # Fixes: https://github.com/servo/servo/issues/38369#issuecomment-3138458772 Testing: Just adding docs.
+https://github.com/servo/servo/pull/38401	(@kkoyung, #38401)	webdriver: consider boolean attribute when get element attribute (#38401)
    webdriver
    # The function handle_get_attribute should act differently when the attribute is a boolean attribute.
    # The full list of attributes can be found in [1].  All attributes marked as "Boolean attribute" in the "Value" column are
    # boolean attributes.  Note that "hidden" is effectively treated as a boolean attribute, according to WPT test
    # "test_global_boolean_attributes" in webdriver/tests/classic/get_element_attribute/get.py
    # [1] https://html.spec.whatwg.org/multipage/#attributes-3
    # Testing: Updated WPT test expectation Fixes: #38353
-https://github.com/servo/servo/pull/38375	(@Kenzie.Raditya.Tirtarahardja@huawei.com, #38375)	cargo: Upgrade `keyboard-types` to `0.8.0` and `xcomponent-sys` to `0.3.4` (#38375)
    # With some adjustment for `NamedKey`.  The two crates need to be bumped together to avoid duplicate of `keyboard-types`
    # action.
+https://github.com/servo/servo/pull/38321	(@stevennovaryo, #38321)	script: Fire `scroll` event whenever JS scrolled  (#38321)
    dom
    # Implement JS scroll event firing compliant to https://drafts.csswg.org/cssom-view/#scrolling-events.  Basically
    # whenever, the an element or the viewport is scrolled, we will fire a scroll event.  The changes push a scroll event
    # whenever an API causes a scroll position to change.
    # Testing: New WPT tests for basic APIs.  Part of: https://github.com/servo/servo/issues/31665
+https://github.com/servo/servo/pull/38383	(@yezhizhen, #38383)	webdriver: Fix "element in view" by correctly computing resolved `PointerEvents` style (#38383)
    webdriver
    # Testing: `element_click/interactability.py`.  For some other tests in headed window, even tho the target is in view it
    # falsely claim not in view previously.
+https://github.com/servo/servo/pull/38397	(@longvatrong111, #38397)	webdriver: improve session commands (#38397)
    webdriver
    # Add timeout and strictFileInteractability capabilities to response of new session command.  Allow delete session command
    # to run without a session.
    # Testing: Clear some unexpected results of session tests in webdriver CI and
    # `tests/wpt/meta/webdriver/tests/classic/delete_session/delete.py.ini`
-https://github.com/servo/servo/pull/38398	(@Kenzie.Raditya.Tirtarahardja@huawei.com, #38398)	Suppress warning in `webview` unit test (#38398)
    # `webview.focus` return `Result`, hence it gives warning if the result is not handled.
-https://github.com/servo/servo/pull/38325	(@stevennovaryo, #38325)	layout: Add BoxFragment rare data (#38325)
    # Introduce `BoxFragmentRareData`, rare data for `BoxFragment`, which would store the specific data that is relevant to
    # several fragments.  This would reduce the `BoxFragment` size to 256 from 264 and add 8 bytes for fragment that have rare
    # data (due to the additional pointer to the rare data).
    # Testing: Existing WPT coverage
+https://github.com/servo/servo/pull/38356	(@sagudev, #38356)	canvas: Clear vello scene if possible (#38356)
    performance
    # Vello scene only ever grows, so we need to clear it as soon as it's possible (in clear rect).  This PR also adds
    # ignore_clips to vello_backend (already exists in vello_cpu_backend).
    # Testing: Behavior is verified by existing tests, as this is mainly a change for performance.  There are currently no
    # performance tests.  This makes bunnymark actually playable (from 3 FPS to 20 FPS on vello_cpu).
>>> 2025-08-03T06:11:37Z
-https://github.com/servo/servo/pull/38434	(@servo-wpt-sync, #38434)	Sync WPT with upstream (03-08-2025) (#38434)
    # Automated downstream sync of changes from upstream as of 03-08-2025 [no-wpt-sync]
+https://github.com/servo/servo/pull/38429	(@Loirooriol, #38429)	Upgrade Stylo to 2025-08-01 (#38429)
    upgrade
    # This continues #37822
    # Changelog:
    #  - Upstream:
    #  https://github.com/servo/stylo/compare/fe9eadf47bc771d5f7e4ab5908370400dea47568...ec21cec41ca58bd8c994a18d53d88bab78229
    # b0c
    #  - Servo fixups:
    #  https://github.com/servo/stylo/compare/29052e550f20ecc6bf0b7aa8aeb955c0bf681e2f...7f8df16fddb15b6ac9097f8ab25caffff1a70
    # 95e
    # Stylo tracking issue: https://github.com/servo/stylo/issues/220
-https://github.com/servo/servo/pull/38428	(@mrobinson, #38428)	layout: Limit visibility of some types and removed unused enum variants / data (#38428)
    # Testing: This change mainly removes dead code, so no tests necessary.
-https://github.com/servo/servo/pull/38430	(@atouchet, #38430)	deps: Update rand to `0.9.2` (#38430)
    # Update rand.
    # Testing: No tests for dependency update.
+https://github.com/servo/servo/pull/38301	(@TimvdLippe, #38301)	Implement initial version of `navigator.sendBeacon` (#38301)
    dom ; pref-gated
    # Gated behind the feature flag `dom_navigator_sendbeacon_enabled` as the `keep-alive` fetch parameter is crucial for
    # real-life use cases such as analytics requests.
    # Part of #4577 Part of #38302
-https://github.com/servo/servo/pull/38420	(@mrobinson, #38420)	wpt: Ensure that faulty JSON testharness output does not crash the Python test harness (#38420)
    # When a testharness test also prints debugging output, sometimes the output can be mixed with the JSON output printed via
    # an alert.  This causes a JSON decoding error in the output.  Instead of crashing the harness and printing many lines of
    # Python stack trace output, print a nice error.  This makes the test output easier to read.
    # Testing: This is a change to the test harness itself, so no tests necessary.
-https://github.com/servo/servo/pull/38427	(@euclid.ye@huawei.com, #38427)	Replace all sort with unstable sort (#38427)
    # ["When applicable, unstable sorting is preferred because it is generally faster than stable sorting and it doesn’t
    # allocate auxiliary memory."](https://doc.rust-lang.org/std/vec/struct.Vec.html#method.sort)
    # Binary also reduced by 1KB in Release.
    # Testing: No behaviour change as semantically all current usage does not have any pair with `std::cmp::Ordering::Equal`.
-https://github.com/servo/servo/pull/38426	(@atouchet, #38426)	Cargo.toml cleanup (#38426)
    # Cargo.toml cleanup.
    # Testing: No tests for Cargo.toml edit.
>>> 2025-08-04T06:12:11Z
+https://github.com/servo/servo/pull/38433	(@leo030303, #38433)	Implement HTMLDocument API (#38433)
    dom
    # This updates the pull request from here https://github.com/servo/servo/pull/32553 that looks to be dormant.  The main
    # change is that I've switched out `reflector` with `document` based off this suggestion
    # https://github.com/servo/servo/pull/32553#issuecomment-2179568743, and the `GetLocation` and `SupportedPropertyNames`
    # methods pass through the values from `Document`.
    # The implementation details are otherwise the same as the original PR
    # Testing: I don't see any WPT tests for this feature, I could make a custom test if desired Fixes:
    # https://github.com/servo/servo/issues/32536
+https://github.com/servo/servo/pull/38328	(@euclid.ye@huawei.com, #38328)	servoshell: Sync window toolbar height with minibrowser (#38328)
    servoshell
    # Toolbar size can be changed if resized, such as entering fullscreen.  Hit-test had wrong offsets after fullscreen/resize
    # as `WindowEvent::CursorMoved` set wrong coordinates for `webview_relative_mouse_point` due to outdated toolbar height.
    # Testing: #38297 now works properly.  Fixes: #38297
+https://github.com/servo/servo/pull/38440	(@sagudev, #38440)	canvas: Do not use vello layers for opacity or default composition (#38440)
    performance
    # In this PR we moved global alpha handling using temporary layers to mutation of paint in vello_cpu (we were already
    # doing this in vello classic).  This + not using temporary layer for SrcOver (default and most common composition
    # operation) allows us to remove most temporary layers from `with_composition`.
    # This slightly improves performance of vello backend, but drastically improves performance of vello_cpu.  We are now able
    # to render bunnymark (100 bunnies) with 60 FPS.
    # In the future we could cache current layer and change it when compositing operation changes, although that would
    # complicate clips, so improvement is questionable.
    # Testing: Existing WPT tests for functionality, but we do not have any performance tests.
+https://github.com/servo/servo/pull/38437	(@sagudev, #38437)	canvas: Use OptimizeSpeed in vello_cpu (#38437)
    performance
    # According to my tests `OptimizeSpeed` slight improves performance and it does NOT affect WPT results in negative way.
    # Testing: Tested by existing WPT tests.
>>> 2025-08-05T06:15:05Z
-https://github.com/servo/servo/pull/38425	(@gterzian, #38425)	net: clean shutdown of the async runtime (#38425)
    # The previous use of a static variable for the runtime prevented it from shutting down cleanly, because shutdown requires
    # dropping or taking ownership of it.  This PR switches the static variable to a handle only, and introduces a new trait
    # to pass a handle to the async runtime to the constellation, where it can be shut-down along with other components and
    # help reduce our count of still running threads after shutdown.
    # Testing: manual testing, and covered by unit-test in net, and wpt tests.  Fixes: part of -
    # https://github.com/servo/servo/issues/30849
+https://github.com/servo/servo/pull/38470	(@gterzian, #38470)	script: allow for undefined chunks in stream piping (#38470)
    dom
    # Current code uses `undefined` as chunk value to identify the closing of a stream, but this breaks once you start
    # streaming a chunk that is actually `undefined`, as shown in https://github.com/servo/servo/pull/38466.  This PR
    # re-implement the logic in a way that allows for chunks to be `undefined`.
    # Testing: Should maintain `streams/piping` WPT pass rates.  Also makes the `undefined` case of
    # [`/encoding/streams/encode-bad-chunks.any.js`](https://github.com/servo/servo/blob/c59ee57b5d1ad0d6c2c6db10e15e3c53d243d
    # 0f2/tests/wpt/tests/encoding/streams/encode-bad-chunks.any.js#L29),
    # but that is only noticeable in https://github.com/servo/servo/pull/38466 Fixes: None, but noted in
    # https://github.com/servo/servo/pull/38466
+https://github.com/servo/servo/pull/38462	(@rayguo17, @jschwe, #38462)	script: fix set muted on html video element creation (#38462)
    media
    # Set muted on html video element creation.  On `video` element creation, the `set_mute` function will be called before
    # the media player is created, hence the player will still act as not being muted.  This PR fix this behaviour by passing
    # `muted` info after player is created as part of `setup_media_player` process.
    # Testing: Locally test on Windows11 Fixes: https://github.com/servo/servo/issues/38448
-https://github.com/servo/servo/pull/38449	(@Loirooriol, #38449)	build(deps): bump Stylo to servo/stylo#221 (#38449)
    # Bumps Stylo to "Drop obsolete `layout.css.transition-behavior.enabled` flag".
    # Testing: Not needed (no behavior change).
+https://github.com/servo/servo/pull/38366	(@Loirooriol, #38366)	layout: Recreate lazy block size when re-doing layout to avoid floats (#38366)
    layout
    # Block-level boxes that establish an independent formatting context need to avoid overlapping floats.  If their inline
    # size stretches, then we may need to lay out multiple times.
    # The problem was that when trying with a different inline size, the intrinsic block size can change, but we were using
    # the cached final block size from the previous attempt.
    # Testing: Adding new test Fixes: #38365
-https://github.com/servo/servo/pull/38024	(@Taym95, #38024)	Add AsHandleValue trait to Heap<Value> and make Heap values rooted (#38024)
    # Encapsulates the unsafe conversion from Heap to HandleValue, and reducing repetitive unsafe code at call.
    # fix #37258
+https://github.com/servo/servo/pull/38431	(@mrobinson, @Loirooriol, #38431)	script: Unify script-based "update the rendering" and throttle it to 60 FPS (#38431)
    performance
    # Instead of running "update the rendering" at every IPC message, only run it when a timeout has occured in script.  In
    # addition, avoid updating the rendering if a rendering update isn't necessary.  This should greatly reduce the amount of
    # processing that has to happen in script.
    # Because we are running many fewer calls to "update the rendering" it is reasonable now to ensure that these always work
    # the same way.  In particular, we always run rAF and update the animation timeline when updating the ernder
    # In addition, pull the following things out of reflow:
    #  - Code dealing with informing the Constellation that a Pipeline has
    #    become Idle when waiting for a screenshot.
    #  - Detecting when it is time to fulfill the `document.fonts.ready`
    #    promise.
    # The latter means that reflow can never cause a garbage collection, making timing of reflows more consistent and
    # simplifying many callsites that need to do script queries.
    # Followup changes will seek to simplify the way that ScriptThread-driven animation timeouts happen even simpler.
    # Testing: In general, this should not change testable behavior so much, though it does seem to fix one test.  The main
    # improvement here should be that the ScriptThread does less work.
+https://github.com/servo/servo/pull/38461	(@leo030303, #38461)	Servoshell: Update `Window::inner_size` on `WindowEvent::Resized` (fix resize bug) (#38461)
    servoshell
    # Just adds back a line that was omitted when a different commit was reverted, see the issue for details, I've tested on
    # Gnome Wayland with Fedora 42 and the bug is fixed
    # Fixes: https://github.com/servo/servo/issues/38441 cc @yezhizhen
-https://github.com/servo/servo/pull/38455	(@leo030303, #38455)	Add can_gc to HTMLDocument NamedGetter (#38455)
    # Just fixing something missed on my last PR https://github.com/servo/servo/pull/38433#discussion_r2250744925
+https://github.com/servo/servo/pull/38436	(@euclid.ye@huawei.com, #38436)	webdriver: Improve "element click" by using container + Upgrade outdated test (#38436)
    webdriver
    # - According to [spec](https://w3c.github.io/webdriver/#ref-for-dfn-in-view-3), we should use container instead of
    # element itself to determine "in-view".  - Updated `test_element_intercepted_no_pointer_events` in
    # `element_click/interactability.py` to expect "element not interactable".  This was outdated with spec as original test
    # was written 7 years ago https://github.com/web-platform-tests/wpt/pull/11453.
    # Testing: new passing cases for ``, ``.
>>> 2025-08-06T06:08:56Z
-https://github.com/servo/servo/pull/38488	(@dependabot[bot], @dependabot[bot], #38488)	build(deps): bump tokio-util from 0.7.15 to 0.7.16 (#38488)
    # Bumps [tokio-util](https://github.com/tokio-rs/tokio) from 0.7.15 to 0.7.16.
    # Commits
    # cf6b50a chore: prepare tokio-util v0.7.16 (#7507) 416e36b task: stabilise JoinMap (#7075) 9741c90 sync: document cancel
    # safety on SetOnce::wait (#7506) 4e3f17b codec: also apply capacity to read buffer in Framed::with_capacity (#7500)
    # 86cbf81 Merge 'tokio-1.47.1' into 'master' be8ee45 chore: prepare Tokio v1.47.1 (#7504) d9b1916 Merge 'tokio-1.43.2'
    # into 'tokio-1.47.x' (#7503) db8edc6 chore: prepare Tokio v1.43.2 (#7502) e47565b blocking: clarify that spawn_blocking
    # is aborted if not yet started (#7501) 4730984 readme: add 1.47 as LTS release (#7497) Additional commits viewable in
    # compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=tokio-util&package-manager=car
    # go&previous-version=0.7.15&new-version=0.7.16)](https://docs.github.com/en/github/managing-security-vulnerabilities/abou
    # t-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38486	(@dependabot[bot], @dependabot[bot], #38486)	build(deps): bump async-lock from 3.4.0 to 3.4.1 (#38486)
    # Bumps [async-lock](https://github.com/smol-rs/async-lock) from 3.4.0 to 3.4.1.
    # Release notes Sourced from async-lock's releases.
    # v3.4.1
    # Fix typos in docs.  (#89)
    # Changelog Sourced from async-lock's changelog.
    # Version 3.4.1
    # Fix typos in docs.  (#89)
    # Commits
    # 82283a2 v3.4.1 cd0937d Fix clippy::empty_line_after_doc_comments and clippy::empty_line_after_outer_...  7819a20 Fix
    # clippy::needless_lifetimes warning efcc3d8 ci: Use reusable workflows for fmt and security_audit 6bece6e ci: Use
    # &quot;v2.0.0&quot; branch for security check 9963923 chore: Fix typos (#89) 8717b76 chore: Fix lints (#92) See full diff
    # in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=async-lock&package-manager=car
    # go&previous-version=3.4.0&new-version=3.4.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-
    # dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38485	(@dependabot[bot], @dependabot[bot], #38485)	build(deps): bump futures-lite from 2.6.0 to 2.6.1 (#38485)
    # Bumps [futures-lite](https://github.com/smol-rs/futures-lite) from 2.6.0 to 2.6.1.
    # Release notes Sourced from futures-lite's releases.
    # v2.6.1
    # Fix docs for once_future and stop_after_future.  (#131)
    # Changelog Sourced from futures-lite's changelog.
    # Version 2.6.1
    # Fix docs for once_future and stop_after_future.  (#131)
    # Commits
    # 226ce18 v2.6.1 3444c7a docs: Fix stop_after_future link and once_future description (#131) d608d08 Some alloc-related
    # cleanup (#130) 077e1c1 Switch to unconditional no_std attribute (#128) 5c196b9 docs: Enable doc_auto_cfg on docs.rs
    # (#125) 64dbe9e ci: Use reusable workflows for fmt and security_audit See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=futures-lite&package-manager=c
    # argo&previous-version=2.6.0&new-version=2.6.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/abou
    # t-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38483	(@dependabot[bot], @dependabot[bot], #38483)	build(deps): bump event-listener from 5.4.0 to 5.4.1 (#38483)
    # Bumps [event-listener](https://github.com/smol-rs/event-listener) from 5.4.0 to 5.4.1.
    # Release notes Sourced from event-listener's releases.
    # v5.4.1
    # Fix a copy-paste error in wait_timeout docs (#152)
    # Changelog Sourced from event-listener's changelog.
    # Version 5.4.1
    # Fix a copy-paste error in wait_timeout docs (#152)
    # Commits
    # 0c18ca2 v5.4.1 56d87b4 Update criterion requirement from 0.6 to 0.7 (#156) 810a6db Update criterion requirement from 0.5
    # to 0.6 (#153) 91a936e Fix doctest on WASM 323da40 Fix clippy::mem_replace_option_with_some warning 29e15c0 ci: Re-enable
    # WASM test a8aefba Merge pull request #152 from JamesHallowell/fix-wait-timeout-docs 9870df3 Minor amendment to
    # wait_timeout docs 51ae140 ci: Use reusable workflows for fmt and security_audit See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=event-listener&package-manager
    # =cargo&previous-version=5.4.0&new-version=5.4.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/ab
    # out-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38481	(@dependabot[bot], @dependabot[bot], #38481)	build(deps): bump signal-hook-registry from 1.4.5 to 1.4.6 (#38481)
    # Bumps [signal-hook-registry](https://github.com/vorner/signal-hook) from 1.4.5 to 1.4.6.
    # Changelog Sourced from signal-hook-registry's changelog.
    # signal-hook-registry-1.4.6
    # Reword/improve the safety requirements docs for register (#178).
    # signal-hook-1.3.18
    # Release the special-case removal of AIX for top-level signal-hook too (#169, #176).
    # signal-hook-async-std-0.3.0
    # Bump async-std to 0.2 (#172).
    # Commits
    # 4c5d0a0 Release registry v1.4.6 b299a05 Merge pull request #179 from vorner/safety-docs 164d58b Clarify safety
    # requirements for register.  1ff235c Merge pull request #177 from tomstokes/master 9ffea0f docs: Fix MIO feature name
    # e343491 Version 0.3.18 dfdec81 signal-hook-async-std 0.3.0 dcc5da2 Merge pull request #175 from
    # gaykitty/update-async-std 171da9c Update async-io and futures-lite to v2 See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=signal-hook-registry&package-m
    # anager=cargo&previous-version=1.4.5&new-version=1.4.6)](https://docs.github.com/en/github/managing-security-vulnerabilit
    # ies/about-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38476	(@sagudev, #38476)	layout: Separate `LayoutDamage` bit patterns nibbles with `_` (#38476)
    # Using `_` on such long bit patterns makes them easier to read.
    # Testing: Just formatting.  Fixes: #38474
+https://github.com/servo/servo/pull/38363	(@delan, @atbrakhi, #38363)	script: Tell SpiderMonkey whether scripts are inline (#38363)
    devtools
    # to use the [SpiderMonkey Debugger API](https://firefox-source-docs.mozilla.org/js/Debugger/) as the single source of
    # truth about scripts and their sources for devtools purposes (servo/servo#38334), the debugger script needs to be able to
    # distinguish inline scripts from other scripts, because inline scripts are a special case where the source contents need
    # to come from the Servo parser.
    # the mechanism for this is
    # [Debugger.Script.prototype.**introductionType**](https://firefox-source-docs.mozilla.org/js/Debugger/Debugger.Source.htm
    # l#introductiontype),
    # which is `inlineScript` for inline scripts or a variety of other values for other kinds of scripts, but only the
    # embedder can provide this information.
    # this patch bumps mozjs to servo/mozjs#603, which expands on CompileOptionsWrapper, making it a safe wrapper around
    # CompileOptions.  to construct one from safe code, use Runtime::new_compile_options().  then you can call
    # `set_introduction_type(&'static CStr)` on the new instance.  we also make Runtime::evaluate_script() take a
    # CompileOptionsWrapper from the caller, instead of constructing one internally.
    # in this patch, we set the introductionType to `c"inlineScript"` when calling run_a_classic_script() and
    # compile_module_script() for inline scripts, and leave it unset all other cases.
    # Testing: will undergo automated tests in #38334 Fixes: part of #36027, part of servo/servo#38378
+https://github.com/servo/servo/pull/38464	(@mrobinson, @Loirooriol, #38464)	layout: Cache projected point in spatial node when hit testing (#38464)
    performance
    # Implement a simple one element cache for projected points in spatial nodes.  This should reduce the amount matrix math
    # done during hit testing.
    # Testing: This should not change test results, but should improve performance a bit.  Thus, tests are not necessary
    # beyond existing performance tests.
-https://github.com/servo/servo/pull/38475	(@delan, @atbrakhi, #38475)	script: Remove logging in debugger script (#38475)
    # #38333 adds new code to the debugger script containing some console.log() calls, which unlike native rust log messages
    # can’t be turned off.  this patch removes them for now, until we find a better approach.
    # Testing: no testable changes in this patch Fixes: noisy logging as of #38333
+https://github.com/servo/servo/pull/38463	(@mrobinson, @Loirooriol, @kongbai1996, #38463)	layout: Add a layout hit test and use it for `document.elementsFromPoint` (#38463)
    stability
    # In #18933, hit testing was moved from layout to WebRender.  This presents some issues.  For instance, the DOM can change
    # at the same time that hit test is happening.  This can mean that hit test returns references to defunct DOM nodes,
    # introducing memory safety issues.  Currently, Servo will try to ensure that the epochs used for testing and those
    # recorded in the DOM match, but this is not very reliable and has led to code that retries failed hit tests.
    # This change reintroduces (8 years later) a layout hit tester and turns it on for `document.elementFromPoint` and
    # `document.elementsFromPoint`.  The idea is that this hit tester will gradually replace the majority of the WebRender hit
    # testing happening in the renderer.
    # Testing: This shouldn't really change the behavior hit testing, but it seems to improve one WPT test.
-https://github.com/servo/servo/pull/38467	(@mrobinson, #38467)	layout: Introduce `ReflowPhasesRun` (#38467)
    # There were various booleans on `ReflowResults` that represented various actions that might have been taken during a
    # reflow request.  Replace those with a bitflags that better represents what reflow phases have actually been run.  Update
    # variable names to reflect what they mean.
    # In addition, run some post-layout tasks unconditionally.  They are already contingent on the results returned from
    # layout.
    # This simplifies and clarifies the code a good deal.
    # Testing: This should not change observable behavior and thus is covered by existing WPT tests.
+https://github.com/servo/servo/pull/38333	(@delan, @atbrakhi, #38333)	script: Add new Window globals as debuggees (#38333)
    devtools
    # to debug the scripts in a page with the [SpiderMonkey Debugger
    # API](https://firefox-source-docs.mozilla.org/js/Debugger/), we need to pass the page’s global object to
    # [Debugger.prototype.**addDebuggee()**](https://firefox-source-docs.mozilla.org/js/Debugger/Debugger.html#adddebuggee-glo
    # bal).
    # we could pick up the global via the [onNewGlobalObject()
    # hook](https://firefox-source-docs.mozilla.org/js/Debugger/Debugger.html#onnewglobalobject-global), but if our script
    # system passes the global to the debugger script instead, we can later add details like the PipelineId that will help
    # servo identify debuggees that the API is notifying us about (#38334).
    # this patch plumbs new Window globals from script into addDebuggee() via the debugger script.  to call into the debugger
    # script with structured input, we create a new DOM event type, DebuggerEvent, that the debugger script listens for as the
    # “addDebuggee” event.
    # Testing: no testable effects yet, but will be used in #37667 Fixes: part of #36027
>>> 2025-08-07T06:11:17Z
-https://github.com/servo/servo/pull/38504	(@jschwe, #38504)	ci: Don't give lint job secrets (#38504)
    # The lint workflow doesn't seem to use any secrets, so we shouldn't pass them.
    # Testing: [mach try](https://github.com/servo/servo/actions/runs/16784528217/job/47531648483)
-https://github.com/servo/servo/pull/38424	(@gterzian, #38424)	constellation: join on script-threads (#38424)
    # We currently send exit signals to script-threads, and we also join on the BHM worker.  This ensure the constellation
    # shuts-down only after script has dropped it's sender to the BHM worker.  By joining on the script-threads, we have a
    # guarantee that they have exited(which is stronger than having dropped their senders) by the time the constellation
    # exits.
    # Testing: Manually opened many tabs and closed the window, both in single- and multi-process modes.  Fixes: Part of -
    # https://github.com/servo/servo/issues/30849
-https://github.com/servo/servo/pull/38502	(@dependabot[bot], @dependabot[bot], #38502)	build(deps): bump anstream from 0.6.19 to 0.6.20 (#38502)
    # Bumps [anstream](https://github.com/rust-cli/anstyle) from 0.6.19 to 0.6.20.
    # Commits
    # 550de4d chore: Release 094640c docs: Update changelog 6aec7d7 Merge pull request #265 from aschey/main 96dbb44
    # fix(crossterm): fix color conversion e4e2347 chore: Release 03f5d6a Merge pull request #264 from epage/alloc 3f49744
    # perf(roff): Remove extra allocations d5351f4 chore: Release 44e1d1d fix(roff): Minimize size of output (#263) 9c2b802
    # fix(roff): Minimize size of output Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=anstream&package-manager=cargo
    # &previous-version=0.6.19&new-version=0.6.20)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-
    # dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38498	(@euclid.ye@huawei.com, #38498)	script: Rename some `parent` to `child` (#38498)
    # I believe there was some code migration but name's not been changed.
    # Testing: No behaviour change.
-https://github.com/servo/servo/pull/38220	(@jschwe, @sagudev, #38220)	bencher: Clone thresholds from main (#38220)
    # When running bencher on pull requests or try, we want to clone any thresholds we setup for main to detect regressions.
    # Note: The thresholds we are actually interested in are defined on the production profile, while in PRs we currently test
    # release.  Probably we should reconsider that, but perhaps that could be a different PR with seperate discussion.
    # Testing: ./mach try ([ohos](https://github.com/servo/servo/actions/runs/16779272577))
+https://github.com/servo/servo/pull/38493	(@nicoburns, #38493)	Use cached layout in grid layout (#38493)
    performance
    # This makes grid layout make use of Servo's layout caching system.
    # Testing: No behavior change.  Existing WPT coverage
+https://github.com/servo/servo/pull/38473	(@mrobinson, #38473)	script/layout: Ensure a StackingContextTree before IntersectionObserver geometry queries (#38473)
    stability
    # IntersectionObserver needs to be able to query node geometry without forcing a layout.  A previous layout could have run
    # without needing a `StackingContextTree`.  In that case the layout-less query should finish building the
    # `StackingContextTree` before doing the query.  Add a new type of layout API which requests that layout finishes building
    # the StackingContextTree.
    # This change also slightly simplifies and corrects the naming of `Element` APIs around client box queries.
    # Testing: This should fix intermittent failures in WPT tests.  Fixes: #38380.  Fixes: #38390.  Closes: #38400.
+https://github.com/servo/servo/pull/38373	(@averyrudelphe@gmail.com, #38373)	servoshell: make the color picker and select picker closeable (#38373)
    servoshell
    # Addresses the first half of #38347 by making it possible to close the select picker and the color picker by pressing ESC
    # or clicking off the modal.  Marking this as draft since I need some help with squashing a bug - the "clicking off" part
    # only triggers after moving the mouse or pressing any key, and I'm not sure why.
    # Testing: Manual.  Fixes: First half of #38347.
+https://github.com/servo/servo/pull/38491	(@euclid.ye@huawei.com, #38491)	webdriver: Search ancestors instead of preceding nodes when computing container for `option`&`optgroup` (#38491)
    webdriver
    # Fix the bug from 6 years ago https://github.com/servo/servo/pull/24090.
    # According to [spec](https://w3c.github.io/webdriver/#dfn-container), we should search ancestor instead of preceding
    # nodes (which is reverse order of pre-order DFS and can end up weird places) when computing container for
    # `option`&`optgroup`.
    # Testing: Update WPT.  Fixes: https://github.com/servo/servo/pull/36467#discussion_r2255834497.
+https://github.com/servo/servo/pull/38230	(@abdelrahman1234567, #38230)	script: Implement `scrollIntoView` (#38230)
    dom
    # This is an implementation for `scrollIntoView`.  For now, it is called when a certain element gains focus.
    # Testing: Existing WPT tests Fixes: #24059
+https://github.com/servo/servo/pull/38443	(@shubhamg13, #38443)	Include the scrollable overflow of a child box if either its parent or child has `overflow: visible` (#38443)
    layout
    # Include the scrollable overflow of a child box if either its parent or child has `overflow: visible`
    # **Issue**: For the blocks having property `overflow:hidden`, their scroll overflow is not added to parent's scroll
    # overflow.  Causing unable to scroll the parent block aka `Root` block in our Issue #38248 .
    # **Testing**: css/cssom-view/scrolling-quirks-vs-nonquirks.html **Fixes**: #38248
-https://github.com/servo/servo/pull/38450	(@jerensl, #38450)	script_bindings: Add type definitions for configuration.py (#38450)
    # *Describe the changes that this pull request makes here.  This will be the commit message.*
    # Testing: *Describe how this pull request is tested or why it doesn't require tests* Fixes: *Link to an issue this pull
    # requests fixes or remove this line if there is no issue*
-https://github.com/servo/servo/pull/38469	(@euclid.ye@huawei.com, #38469)	webdriver: Simplify `get_element_pointer_interactable_paint_tree` (#38469)
    # Add step 1 and simplify step 2 - 5 to remove duplicate `GetClientRects` call.
    # There is some issue with spec to be updated later.
    # Testing: No behaviour change.
>>> 2025-08-08T06:05:25Z
+https://github.com/servo/servo/pull/38518	(@mrobinson, @Loirooriol, #38518)	script/compositor: Handle cursor updates from script (#38518)
    layout
    # Instead of using WebRender hit testing to update the cursor, base it on layout hit tests.  This allows removing the
    # majority of WebRender hit test items and finally opens up the possibility of adding support for custom cursors.  In
    # addition, this change fixes an issue where cursors were not set properly on areas of the viewport that extended past the
    # page content.
    # Testing: This is difficult to test as verifying that the cursor changed properly is beyond the capabilities of Servo's
    # test harnesses.
+https://github.com/servo/servo/pull/38521	(@Loirooriol, #38521)	layout: Floor content-box size by zero when stretching flex item (#38521)
    layout
    # When stretching the cross size of a flex item to its flex line, we were computing the stretch size by subtracting
    # padding, border and margin from the line size.  However, this could result in a negative amount for the content-box
    # cross size.  Therefore, this floors it by zero.
    # Testing: Adding new tests Fixes: #38517
-https://github.com/servo/servo/pull/38515	(@Loirooriol, #38515)	layout: Refactor `FlexItemLayoutResult` (#38515)
    # This performs various refactorings:
    # - Turns `content_size` into `content_block_size`, losing the inline component, since it was the same as
    # `containing_block_inline_size`.  - Merges `containing_block_inline_size` and `containing_block_block_size` into
    # `containing_block_size`.  - Removes `has_child_which_depends_on_block_constraints` since this information should already
    # be in `depends_on_block_constraints`.  - `FlexItem::layout()` is no longer responsible for trying to reuse the previous
    # result.  Therefore it no longer returns an `Option`, and no longer accepts the previous result as a parameter.  -
    # `FlexItemLayoutResult::compatible_with_containing_block_size()` is removed, and a simplified version is inlined into the
    # relevant caller of `FlexItem::layout()`.
    # Testing: Not needed (no change in behavior)
-https://github.com/servo/servo/pull/38523	(@dependabot[bot], @dependabot[bot], #38523)	build(deps): bump keyboard-types from 0.8.0 to 0.8.1 (#38523)
    # Bumps [keyboard-types](https://github.com/pyfisch/keyboard-types) from 0.8.0 to 0.8.1.
    # Release notes Sourced from keyboard-types's releases.
    # v0.8.1 Added
    # Added impl From&lt;NamedKey&gt; for Key: rust-windowing/keyboard-types#81
    # Full Changelog: https://github.com/rust-windowing/keyboard-types/compare/v0.8.0...v0.8.1
    # Commits
    # f82b9e4 Release v0.8.1 6b939e2 Make it clear in the docs that space is not a named key 25d8e98 Add impl
    # From\&lt;NamedKey&gt; for Key 7634834 Doc tweaks / improvements 29852c9 no_std: Don't use the std prelude See full diff
    # in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=keyboard-types&package-manager
    # =cargo&previous-version=0.8.0&new-version=0.8.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/ab
    # out-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38522	(@dependabot[bot], @dependabot[bot], #38522)	build(deps): bump bytemuck_derive from 1.10.0 to 1.10.1 (#38522)
    # Bumps [bytemuck_derive](https://github.com/Lokathor/bytemuck) from 1.10.0 to 1.10.1.
    # Commits
    # 2524f62 chore: Release bytemuck_derive version 1.10.1 c4873c9 .  374df78 Make the Pod/NoUninit derive macros use assert!
    # to check size equality,...  6633a51 Fix a typo (#319) See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=bytemuck_derive&package-manage
    # r=cargo&previous-version=1.10.0&new-version=1.10.1)](https://docs.github.com/en/github/managing-security-vulnerabilities
    # /about-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38524	(@dependabot[bot], @dependabot[bot], #38524)	build(deps): bump clap from 4.5.42 to 4.5.43 (#38524)
    # Bumps [clap](https://github.com/clap-rs/clap) from 4.5.42 to 4.5.43.
    # Release notes Sourced from clap's releases.
    # v4.5.43 [4.5.43] - 2025-08-06 Fixes
    # (help) In long help, list Possible Values before defaults, rather than after, for a more consistent look
    # Changelog Sourced from clap's changelog.
    # [4.5.43] - 2025-08-06 Fixes
    # (help) In long help, list Possible Values before defaults, rather than after, for a more consistent look
    # Commits
    # c4105bd chore: Release a029b20 docs: Update changelog cf15d48 Merge pull request #5893 from 8LWXpg/patch-2 7e54542 Merge
    # pull request #5892 from 8LWXpg/patch-1 6ffc88f fix(complete): Check if help string is empty 7d8470e fix(complete): Fix
    # single quote escaping in PowerShell eadcc8f chore: Release 7ce0f7b docs: Update changelog fea7c54 Merge pull request
    # #5888 from epage/tut c297ddd docs(tutorial): Experiment with a flat layout Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=clap&package-manager=cargo&pre
    # vious-version=4.5.42&new-version=4.5.43)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-depe
    # ndabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/37077	(@jdm, #37077)	Update to SpiderMonkey 137. (#37077)
    upgrades
    # Incorporates the updates from https://github.com/servo/mozjs/pull/584.
    # Testing: Existing WPT coverage is enough.  Fixes: Part of #36258
+https://github.com/servo/servo/pull/38306	(@nicoburns, #38306)	layout(grid): implement named grid lines and areas (#38306)
    layout
    # ### Changes made
    # This implements named grid lines (line names in `grid-template-*`), named grid areas (`grid-template-areas`), and the
    # ability to target those using `grid-{row,column}-{start,end}`.  It also includes a bunch of miscelaneous fixes for
    # `repeat(auto-fill | auto-fit, ...)` syntax as that interacts with the specification of line names.
    # The actual layout implementation is in Taffy.  The bulk of this PR is updating Servo to translate (CSS Grid-related)
    # Stylo types into Taffy types using a new iterator-based API which uses iterators and lazy translation for efficiency
    # (which is more important now that we're dealing with string data, even though they're `Atom`s).
    # ### Testing
    # This functionality has lots of WPT tests.  It fixes some seemingly random CSS Grid tests that use named lines/areas even
    # though that's not what they're testing.
    # ### Screenshots
    # wikipedia.org
    # bbc.co.uk:
    # theguardian.com:
-https://github.com/servo/servo/pull/38516	(@delan, @atbrakhi, #38516)	devtools: Reland devtools test fixes missing from #38359 (#38516)
    # in #38359, we intended to land some fixes to the devtools tests, but we failed to actually include those fixes in the
    # patch.  this patch adds a second internal web server, then reworks test_sources_list() to load scripts from the two
    # distinct origins of our internal web servers: and .
    # Testing: covered by existing devtools tests, which now actually pass Fixes: part of #36325
-https://github.com/servo/servo/pull/38514	(@delan, #38514)	mach: Allow filtering tests in `mach test-devtools` (#38514)
    # `mach test-devtools` uses [unittest](https://docs.python.org/3/library/unittest.html) without
    # [unittest.main()](https://docs.python.org/3/library/unittest.html#unittest.main), so we can parse arguments and set up
    # the test runner how we want, but this means there’s currently no way to filter tests on the command line.
    # this patch plumbs the positional arguments (if any) into the TestLoader’s
    # [testNamePatterns](https://docs.python.org/3/library/unittest.html#unittest.TestLoader.testNamePatterns), with extra
    # logic to treat any pattern `pattern` not containing `*` like `*pattern*`.  this is the same behaviour as unittest.main()
    # [`-k`](https://docs.python.org/3/library/unittest.html#cmdoption-unittest-k):
    # ``` $ ./mach test-devtools domparser responsexml Running devtools tests...  Running 2 tests: -
    # test_source_content_inline_script_with_domparser
    # (servo.devtools_tests.DevtoolsTests.test_source_content_inline_script_with_domparser) -
    # test_source_content_inline_script_with_responsexml
    # (servo.devtools_tests.DevtoolsTests.test_source_content_inline_script_with_responsexml)
    # test_source_content_inline_script_with_domparser
    # (servo.devtools_tests.DevtoolsTests.test_source_content_inline_script_with_domparser) ...  ok
    # test_source_content_inline_script_with_responsexml
    # (servo.devtools_tests.DevtoolsTests.test_source_content_inline_script_with_responsexml) ...  ok
    # ---------------------------------------------------------------------- Ran 2 tests in 4.055s
    # OK ```
    # Testing: not really worth automated testing, but tested manually above Fixes: part of #36325
-https://github.com/servo/servo/pull/38465	(@nicoburns, @Loirooriol, #38465)	stylo: use simplified restyle damage macros (#38465)
    # Servo PR for https://github.com/servo/stylo/pull/222
    # Fixes: #38506 Testing: adding new tests
+https://github.com/servo/servo/pull/38497	(@euclid.ye@huawei.com, #38497)	webdriver: Check if container is obscured for "Element Click" (#38497)
    webdriver
    # Implement step 7 of [Element Click](https://w3c.github.io/webdriver/#element-click): check whether container is
    # obscured.
    # Testing: `/webdriver/tests/classic/element_click/interactability.py` can now fully pass.  Other changes are combined
    # effect with 17a269a8ade22ec768a566224b29cb4795e94fca due to script execution, and exposes new problem:
    # https://github.com/servo/servo/pull/38497#discussion_r2257866612
-https://github.com/servo/servo/pull/38421	(@gterzian, #38421)	net: clean shutdown of fetch thread (#38421)
    # The fetch thread is currently not shut down, meaning it is one of the threads counted in the "threads are still running
    # after shutdown (bad)" counter shown when Servo has shut-down.
    # This PR introduces a mechanism to start, and shut-down, one fetch thread per process that requires one.
    # Testing: WPT tests and unit tests(for font context).  Also manually tested loading and closing "about:blank": this
    # change indeed brings down the count of threads still running after shutdown by one.
    # Fixes: https://github.com/servo/servo/issues/34887
+https://github.com/servo/servo/pull/38480	(@mrobinson, @Loirooriol, @kongbai1996, #38480)	compositor/layout: Rely on layout for fine-grained input event hit testing (#38480)
    layout
    # Before, the compositor was responsible for doing the hit testing during input events within a page.  This change moves
    # that hit testing to layout.  With this change, epoch mismatches are no longer a bit deal and we can simply ignore them,
    # as the Constellation and Script will take care of ignoring hit tests against scroll nodes and browsing contexts that no
    # longer exist.  This means that hit testing retry support can be removed.
    # Add the concept of a Script `HitTest` that transforms the coarse-grained renderer hit test into one that hit tests
    # against the actual layout items.
    # Testing: Currently we do not have good tests for verifying the behavior of input events, but WebDriver tests should
    # cover this.  Fixes: This is part of #37932.  Fixes: #26608.  Fixes: #25282.  Fixes: #38090.
+https://github.com/servo/servo/pull/38496	(@sagudev, #38496)	canvas: pop many clips on restore (#38496)
    canvas
    # When restoring context/state we need to pop all clips from current state, before we just poped one (even if there was
    # none).
    # Testing: Added new WPT tests
-https://github.com/servo/servo/pull/38503	(@jschwe, #38503)	ci: Move runner-timeout to composite action (#38503)
    # We are hitting the limit of 20 workflow references in servo.  To help mitigate this somewhat, we migrate the timeout job
    # to a composite action, which should be able to support our needs just as well.
    # Testing: [try run of this PR](https://github.com/servo/servo/actions/runs/16783916103/job/47529580725).  [try run with
    # unconditional cancel](https://github.com/servo/servo/actions/runs/16784074213/job/47530099654).
    # This reduces our workflow count by one, slightly helping to address #36143
>>> 2025-08-09T06:06:58Z
-https://github.com/servo/servo/pull/38561	(@jschwe, #38561)	bump mozjs to 137.0-1 (#38561)
    # This bump downgrades icu_capi to 1.5.0, to match the version vendored in spidermonkey.
    # Previous mozjs PRs: - https://github.com/servo/mozjs/pull/606 - https://github.com/servo/mozjs/pull/605
    # Testing: Covered by existing tests
+https://github.com/servo/servo/pull/38536	(@Kenzie.Raditya.Tirtarahardja@huawei.com, #38536)	script(webdriver): Fix element clear for file (#38536)
    webdriver
    # When clearing input file with WebDriver, we should set input's filelist with empty list instead of setting it with None.
    # Testing: `./tests/wpt/tests/webdriver/tests/classic/element_send_keys/file_upload.py`
-https://github.com/servo/servo/pull/38559	(@dependabot[bot], @dependabot[bot], #38559)	build(deps): bump slab from 0.4.10 to 0.4.11 (#38559)
    # Bumps [slab](https://github.com/tokio-rs/slab) from 0.4.10 to 0.4.11.
    # Release notes Sourced from slab's releases.
    # v0.4.11
    # Fix Slab::get_disjoint_mut out of bounds (#152)
    # Changelog Sourced from slab's changelog.
    # 0.4.11 (August 8, 2025)
    # Fix Slab::get_disjoint_mut out of bounds (#152)
    # Commits
    # 2e5779f Release v0.4.11 (#153) 2d65c51 Fix get_disjoint_mut error condition (#152) See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=slab&package-manager=cargo&pre
    # vious-version=0.4.10&new-version=0.4.11)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-depe
    # ndabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38560	(@dependabot[bot], @dependabot[bot], #38560)	build(deps): bump cfg-expr from 0.20.1 to 0.20.2 (#38560)
    # Bumps [cfg-expr](https://github.com/EmbarkStudios/cfg-expr) from 0.20.1 to 0.20.2.
    # Release notes Sourced from cfg-expr's releases.
    # 0.20.2 Changed
    # PR#81 updated the builtin target list to 1.89.0.
    # Changelog Sourced from cfg-expr's changelog.
    # [0.20.2] - 2025-08-07 Changed
    # PR#81 updated the builtin target list to 1.89.0.
    # Commits
    # 6be48f7 Release 0.20.2 319b059 Update to 1.89 (#81) See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=cfg-expr&package-manager=cargo
    # &previous-version=0.20.1&new-version=0.20.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-
    # dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38544	(@mrobinson, #38544)	script: Wrap unsafe code in `components/script/bindings` in `unsafe {}` (#38544)
    # Clippy now checks to see if unsafe code is wrapped in unsafe blocks.  We have this lint disabled for `script` and
    # `script_bindings` because of a lot of legacy code that doesn't do this.  The lint is useful though as it makes it more
    # obvious what code is unsafe.  This is an incremental step toward being able to turn this lint on for `script`.
    # This has the benefit of silencing warnings that show up in some IDEs that use rust-analyzer.
    # Testing: This should not change behavior at all and is thus covered by existing tests.
-https://github.com/servo/servo/pull/38558	(@dependabot[bot], @dependabot[bot], #38558)	build(deps): bump cc from 1.2.31 to 1.2.32 (#38558)
    # Bumps [cc](https://github.com/rust-lang/cc-rs) from 1.2.31 to 1.2.32.
    # Changelog Sourced from cc's changelog.
    # 1.2.32 - 2025-08-08 Fixed
    # fix new clippy lint introduced in rust 1.89.0 (#1509)
    # Other
    # clarify cargo default if no rerun emitted (#1508) extract compile_objects_sequential (#1507) Windows find_tools: add
    # support for finding Clang (#1506) Add m68k-unknown-linux-gnu cross-compile target (#1505)
    # Commits
    # 94a7cc3 chore: release v1.2.32 (#1510) 33b616d doc: clarify cargo default if no rerun emitted (#1508) 3046b0a fix new
    # clippy lint introduced in rust 1.89.0 (#1509) b8959a2 Refactor: extract compile_objects_sequential (#1507) 3f62db1
    # Windows find_tools: add support for finding Clang (#1506) 5e210bd Add m68k-unknown-linux-gnu cross-compile target
    # (#1505) See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=cc&package-manager=cargo&previ
    # ous-version=1.2.31&new-version=1.2.32)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-depend
    # abot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38557	(@dependabot[bot], @dependabot[bot], #38557)	build(deps): bump bytemuck from 1.23.1 to 1.23.2 (#38557)
    # Bumps [bytemuck](https://github.com/Lokathor/bytemuck) from 1.23.1 to 1.23.2.
    # Changelog Sourced from bytemuck's changelog.
    # 1.23.2
    # bump derive minimum version.
    # Commits
    # c069a2f chore: Release bytemuck version 1.23.2 8b48ef3 .  7fef8d9 bump derive minimum version.  should be a semver patch
    # effect.  2524f62 chore: Release bytemuck_derive version 1.10.1 c4873c9 .  374df78 Make the Pod/NoUninit derive macros
    # use assert!  to check size equality,...  6633a51 Fix a typo (#319) 1c9e7ba chore: Release bytemuck_derive version 1.10.0
    # 5e58cf7 changelog 0e11472 add support for deriving NoUninit on enums with fields (#292) See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=bytemuck&package-manager=cargo
    # &previous-version=1.23.1&new-version=1.23.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-
    # dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38556	(@dependabot[bot], @dependabot[bot], #38556)	build(deps): bump hashbrown from 0.15.4 to 0.15.5 (#38556)
    # Bumps [hashbrown](https://github.com/rust-lang/hashbrown) from 0.15.4 to 0.15.5.
    # Release notes Sourced from hashbrown's releases.
    # v0.15.5 Added
    # Added Entry::or_default_entry and Entry::or_insert_entry.
    # Changed
    # Re-implemented likely/unlikely with #[cold]
    # Changelog Sourced from hashbrown's changelog.
    # 0.15.5 - 2025-08-07 Added
    # Added Entry::or_default_entry and Entry::or_insert_entry.
    # Changed
    # Re-implemented likely/unlikely with #[cold]
    # Commits
    # b751eef Update CHANGELOG.md da4c80e chore: release v0.15.5 4358483 Merge pull request #631 from DaniPopes/readd-likely
    # 64bd7db Re-implement likely/unlikely with #[cold] 670213f Merge pull request #601 from braddunbar/or-default-entry
    # 99761e4 fix clippy issues e44ee2d Merge branch 'master' of https://github.com/rust-lang/hashbrown into or-defau...
    # e514afe Merge pull request #624 from rust-lang/release-plz-2025-05-28T15-42-25Z See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=hashbrown&package-manager=carg
    # o&previous-version=0.15.4&new-version=0.15.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about
    # -dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/38526	(@Loirooriol, #38526)	layout: Let `stretch` on flex item cross size stretch to the line (#38526)
    layout
    # We were instead stretching to the containing block, which implied that the behaviors of a `stretch` size and `stretch`
    # alignment weren't consistent.
    # As resolved by the CSSWG, the behavior will now be:
    #  - If the cross size of the line is known, stretch to the line.  - Otherwise, stretch to the containing block.
    # See https://github.com/w3c/csswg-drafts/issues/11784
    # This aligns us with Blink, which has already shipped this new behavior.
    # Testing: Improves existing WPT and adds a new test.
-https://github.com/servo/servo/pull/38548	(@delan, @atbrakhi, @mrobinson, #38548)	devtools: Warn when sending common protocol errors (#38548)
    # #37686 fixed an entire class of devtools protocol bugs that led to protocol desyncs with warnings in the Servo log, but
    # it also removed the warnings, making it harder to spot where our devtools impl is incomplete.
    # this patch reintroduces a warning whenever some Actor::handle_message() returns Err(ActorError).
    # Testing: debug logging only, so not really worth testing
-https://github.com/servo/servo/pull/38546	(@mrobinson, #38546)	Revert "Include the scrollable overflow of a child box if either its parent or child has `overflow: visible` (#38443)" (#38546)
    # This reverts commit dcb90bb85eb31c483cd43bfabba235dcea84929d.
    # This broke scrollable overflow calculation in the following case:
    # ```
    #     hello
    # ```
    # In this case the overflow is propagating through the `overflow: auto` `` and into the parents.  When dumping the flow
    # tree I see the root node being 5000 pixels tall.  It's unclear why this change didn't break any tests, so it's likely
    # that we need to add a test for this case.
-https://github.com/servo/servo/pull/38545	(@mrobinson, #38545)	script_bindings Start wrapping unsafe code in `unsafe {}` (#38545)
    # This is useful to better isolate `unsafe` code.  Once all unsafe calls are wrapped we can enable the Rust warning.  This
    # also explicitly disables the warning for generated code, which is a much more difficult task.  After this change there
    # are 211 warnings left in `script_bindings`.
    # Testing: This should not change behavior and is thus covered by existing tests.
-https://github.com/servo/servo/pull/38541	(@delan, @atbrakhi, #38541)	devtools: Expose `introductionType` to devtools clients (#38541)
    # in the devtools protocol, [source
    # forms](https://firefox-source-docs.mozilla.org/devtools/backend/protocol.html#loading-script-sources) announced in
    # `resources-available-array` messages can include the `introductionType`, which more or less mirrors the field of the
    # same name in SpiderMonkey’s CompileOptions.
    # this patch exposes `introductionType` accordingly, allowing us to check for the correct values in automated tests.
    # Testing: new coverage in devtools tests Fixes: part of #36027
-https://github.com/servo/servo/pull/38532	(@mukilan, #38532)	script: make `Node::xml_serialize` fallible. (#38532)
    # Testing: [Try run][1] did not reveal any test failures.  There doesn't seem to be any straightforward failure scenarios
    # that can be triggered in `xml5ever` that are not IO errors and the xml_serialize method simply serializes to a String
    # buffer.
    # [1]: https://github.com/servo/servo/actions/runs/16824267959/job/47657275606l
-https://github.com/servo/servo/pull/38511	(@jerensl, #38511)	mach(test-tidy): Make wpt lint logic `servo-tidy.toml` and optimize checking for changed files  (#38511)
    # Fix wpt lint logic to respect servo-tidy.toml ignores and --all flag
    # Testing: Should be covered on CI Fixes: #38510 #37991
-https://github.com/servo/servo/pull/38537	(@euclid.ye@huawei.com, #38537)	webdriver: Rename `wait_for_script_response` to `wait_for_ipc_response` (#38537)
    # As titled.  Initially I want to include this as part of another PR but looks so messy..  The motivation is that we are
    # no longer just waiting for script response.
    # Testing: No behaviour change.
>>> 2025-08-10T06:07:59Z
+https://github.com/servo/servo/pull/38579	(@simonwuelker, #38579)	script: Convert `CSS` from a IDL interface with static methods to a namespace (#38579)
    dom
    #  This change updates our implementation to match the spec.  Per https://drafts.csswg.org/cssom/#issue-24739c22 this is
    #  observable.
    # Testing: Covered by existing web platform tests.
-https://github.com/servo/servo/pull/38568	(@Loirooriol, #38568)	layout: Move sizing logic from geom.rs to sizing.rs (#38568)
    # Moves `Size`, `SizeConstraint`, `Sizes` and `LazySizeData`.
    # Testing: Not needed, no change in behavior.
-https://github.com/servo/servo/pull/38576	(@mrobinson, #38576)	script: Replace `allow(unused_imports)` with conditional `use` statements (#38576)
    # A few places in the code are using a blanket `allow(unused_imports)` compiler directive to silence errors about unused
    # imports when the `webxr` feature is disabled.  Since this can hide other kinds of unused imports, replace these
    # directives with conditional `use` statements.
    # Testing: No behavior change, so existing tests suffice.
+https://github.com/servo/servo/pull/38575	(@simonwuelker, #38575)	script: Tell devtools whether a node is displayed or not (#38575)
    devtools
    # Doing so makes the devtools inspector display the nodes in gray, as it is the case in firefox.  The relevant node
    # parameter already exists but is hardcoded.
    # Before:
    # After:
    # Testing: We don't have tests for the devtools inspector.
-https://github.com/servo/servo/pull/38571	(@delan, #38571)	script: Rename DebuggerEvent to DebuggerAddDebuggeeEvent (#38571)
    # the next debugger script event, `getPossibleBreakpoints` (#37667), will contain a single attribute `unsigned long
    # spidermonkeyId`, so it will have nothing in common with `addDebuggee`.  this patch renames the latter accordingly.
    # Testing: no behaviour changes other than the rename, so no tests needed Fixes: part of #36027
+https://github.com/servo/servo/pull/38574	(@Loirooriol, #38574)	layout: Paint flex and grid items like inline blocks (#38574)
    layout
    # As specified in https://drafts.csswg.org/css-flexbox-1/#painting and https://drafts.csswg.org/css-grid/#z-order
    # Testing: Makes some WPT pass.  Fixes: #38573
-https://github.com/servo/servo/pull/38519	(@labros7107, #38519)	script: Replace usage of `IntersectionObserverRootMargin` with Stylo's`IntersectionObserverMargin` (#38519)
    # @stevennovaryo Created wrapper for Stylo's IntersectionObserverMargin and cleaned up repeated code.  Testing: Code
    # compiles and `./mach test-unit tests/unit/style/` doesn't have any errors.  intersectionobserver.rs is able to utilize
    # the struct.  Fixes: https://github.com/servo/servo/issues/35907
    # --------------------------- Signed-off-by: samir
-https://github.com/servo/servo/pull/38569	(@sagudev, #38569)	chore: Update vello(_cpu) (#38569)
    # I need this to properly evaluate multi threading in vello_cpu.
    # Testing: Existing WPT tests, but it's just dep bump.
-https://github.com/servo/servo/pull/38527	(@wuminghua7@huawei.com, @sagudev, #38527)	script_bindings: Remove `jsstring_to_str` (#38527)
    # This PR removes `jsstring_to_str`, which is replaced with `jsstr_to_string`, and updates `mozjs` to
    # https://github.com/servo/mozjs/commit/6f3dcb99a71e41ad0c50f2a99a2f6568d3f71c11.
    # Given that servo now always replaces unpaired surrogate since https://github.com/servo/servo/pull/35381, the internal
    # conversion function `jsstring_to_str` is functionally the same as `jsstr_to_string` from `mozjs`.  This PR removes
    # `jsstring_to_str` and replaces with `jsstr_to_string` with conversions to `DOMString` where necessary.
    # Testing: Passes all unit test.  No regression was found in WPT test (see try run:
    # https://github.com/minghuaw/servo/actions/runs/16821156583)
+https://github.com/servo/servo/pull/38551	(@delan, @atbrakhi, #38551)	script: Add new worker globals as debuggees (#38551)
    devtools
    # to debug workers in a page with the [SpiderMonkey Debugger API](https://firefox-source-docs.mozilla.org/js/Debugger/),
    # we need to pass the worker’s global object to
    # [Debugger.prototype.**addDebuggee()**](https://firefox-source-docs.mozilla.org/js/Debugger/Debugger.html#adddebuggee-glo
    # bal).
    # we could pick up the global via the [onNewGlobalObject()
    # hook](https://firefox-source-docs.mozilla.org/js/Debugger/Debugger.html#onnewglobalobject-global), but if our script
    # system passes the global to the debugger script instead, we can later add details like the PipelineId that will help
    # servo identify debuggees that the API is notifying us about (#38334).
    # this patch creates a debugger global in worker threads, runs the debugger script in those new globals, and plumbs new
    # worker globals from those threads into addDebuggee() via the debugger script.  since worker threads can’t generate
    # PipelineId values, but they only ever run workers on behalf of one pipeline, we use that pipeline’s PipelineId as the
    # PipelineId of the debugger global, rather than generating a unique PipelineId like we do in script threads.
    # Testing: will undergo many automated tests in #38334 Fixes: part of #36027
-https://github.com/servo/servo/pull/38567	(@euclid.ye@huawei.com, #38567)	script: Cleanup unused import in `htmlscriptelement.rs` (#38567)
    # Testing: No behaviour change.
-https://github.com/servo/servo/pull/38566	(@euclid.ye@huawei.com, #38566)	script: Change signature of `Event::dispatch` to match the spec and simplify things (#38566)
    # - [Dispatch Event](https://dom.spec.whatwg.org/#concept-event-dispatch) should return a Boolean.  This function is used
    # frequently in spec and the change makes things easier to follow.  - Remove `enum EventStatus` and related functions.  -
    # Update some dead spec link.  - Update some steps.
    # This is intended as cleanup before working on #38435 and reduces binary size by 488KB in Release profile.
    # Testing: No behaviour change.
-https://github.com/servo/servo/pull/38565	(@mukilan, #38565)	script: mark `innerHTML` as fallible in `ShadowRoot` (#38565)
    # This is a follow-up to #38532 which simply defaulted to an empty string as the spec's WebIDL doesn't mark `innerHTML` as
    # `Throws`.  However, since the absence of `Throws` in the spec doesn't imply no-throw, we can mark this as fallible in
    # our WebIDL.  This makes the `ShadowRoot`'s implementation match `Element`'s `innerHTML`.
    # Testing: Same as #38532.
+https://github.com/servo/servo/pull/37838	(@arthmis, #37838)	add implementation for Path2D addPath method (#37838)
    dom
    # Add implementation for Path2D addPath method Spec: https://html.spec.whatwg.org/multipage/canvas.html#dom-path2d-addpath
    # Testing: WPT test - `tests/wpt/tests/css/geometry/DOMMatrix2DInit-validate-fixup.html` Fixes: #37695
+https://github.com/servo/servo/pull/38550	(@delan, @atbrakhi, #38550)	script: Set correct `introductionType` values in more places (#38550)
    devtools
    # to use the [SpiderMonkey Debugger API](https://firefox-source-docs.mozilla.org/js/Debugger/) as the single source of
    # truth about scripts and their sources for devtools purposes (servo/servo#38334), we need to keep track of whether
    # scripts come from an actual file or from things like setTimeout(), because for some
    # [introductionType](https://firefox-source-docs.mozilla.org/js/Debugger/Debugger.Source.html#introductiontype)
    # [values](https://firefox-source-docs.mozilla.org/devtools-user/debugger-api/debugger.source/#accessor-properties-of-the-
    # debugger-source-prototype-object),
    # we want to disregard the script unless it has a [`//# sourceURL=` override](https://tc39.es/ecma426/#sec-linking-eval)
    # ([displayURL](https://firefox-source-docs.mozilla.org/js/Debugger/Debugger.Source.html#displayurl)).
    # this patch builds on #38363, setting the correct introductionType value in several more cases.
    # Testing: will undergo many automated tests in #38334 Fixes: part of #36027
>>> 2025-08-11T06:25:07Z
+https://github.com/servo/servo/pull/38490	(@Kenzie.Raditya.Tirtarahardja@huawei.com, #38490)	script(webdriver): Check if element is disabled based on WebDriver specification (#38490)
    webdriver
    # Checking if an element is disabled based on [spec](https://w3c.github.io/webdriver/#dfn-disabled).  Fix the command `Is
    # Element Enabled`.
    # Testing: Covered in WPT (`./tests/wpt/tests/webdriver/tests/classic/is_element_enabled/enabled.py`)
-https://github.com/servo/servo/pull/38585	(@TimvdLippe, #38585)	Update Nom to 8.0.0 (#38585)
    # There are two relevant breaking changes: * instead of `)(input)`, we now need to call `).parse(input)` * tuples are no
    # longer a call, but a `()` call.
    # There is one other usage of nom 7, however that's in the build dependencies list of mozangle via bindgen.  Therefore, we
    # won't have duplicate nom versions in Servo binary.
-https://github.com/servo/servo/pull/38549	(@rodion.borovyk@gmail.com, #38549)	script: Return a Result from GlobalScope::evaluate_script_on_global_with_result (#38549)
    # Make GlobalScope::evaluate_script_on_global_with_result return a Result instead of a boolean.  This is the first step to
    # resolve issue #37810.
    # Testing: Should not break or fix any existing tests
-https://github.com/servo/servo/pull/38583	(@servo-wpt-sync, #38583)	Sync WPT with upstream (10-08-2025) (#38583)
    # Automated downstream sync of changes from upstream as of 10-08-2025 [no-wpt-sync]
-https://github.com/servo/servo/pull/38582	(@sagudev, #38582)	python: Update pyOpenSSL to 24 (#38582)
    # WPT updated something and we need to update pyOpenSSL to 24 to make deps resolvable.  This fixes WPT Imports:
    # https://github.com/servo/servo/actions/runs/16855379913/job/47753105229
    # Testing: WPT import run: https://github.com/servo/servo/actions/runs/16859665646
>>> 2025-08-12T06:14:02Z
-https://github.com/servo/servo/pull/38604	(@dependabot[bot], @dependabot[bot], #38604)	build(deps): bump webrender_api from `ae2477d` to `15318d6` (#38604)
    # Bumps [webrender_api](https://github.com/servo/webrender) from `ae2477d` to `15318d6`.
    # Commits
    # 15318d6 Expose FastTransform so that it can be used in Servo See full diff in compare view
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/38589	(@euclid.ye@huawei.com, #38589)	script: Focus on mousedown instead of mouse click according to spec (#38589)
    dom
    # - Focus on mousedown instead of mouse click according to
    # [spec](https://w3c.github.io/uievents/#handle-native-mouse-down) - Refactor to follow spec closer and make things more
    # clear.  - Add some spec link.  - Remove some dead spec link.
    # Still some preparation before implementing #38435.  Testing: No regression in WebDriver & WPT.  But update some outdated
    # test.  Fixes: #38588
-https://github.com/servo/servo/pull/38611	(@dependabot[bot], @dependabot[bot], #38611)	build(deps): bump uuid from 1.17.0 to 1.18.0 (#38611)
    # Bumps [uuid](https://github.com/uuid-rs/uuid) from 1.17.0 to 1.18.0.
    # Release notes Sourced from uuid's releases.
    # v1.18.0 What's Changed
    # Fix up mismatched_lifetime_syntaxes lint by @​KodrAus in uuid-rs/uuid#837 Conversions between Timestamp and
    # std::time::SystemTime by @​dcormier in uuid-rs/uuid#835 Wrap the error type used in time conversions by @​KodrAus in
    # uuid-rs/uuid#838 Prepare for 1.18.0 release by @​KodrAus in uuid-rs/uuid#839
    # New Contributors
    # @​dcormier made their first contribution in uuid-rs/uuid#835
    # Full Changelog: https://github.com/uuid-rs/uuid/compare/v1.17.0...v1.18.0
    # Commits
    # 60a49eb Merge pull request #839 from uuid-rs/cargo/v1.18.0 eb8c697 prepare for 1.18.0 release 281f26f Merge pull request
    # #838 from uuid-rs/chore/time-conversion 2d67ab2 don't use allocated values in errors c284ed5 wrap the error type used in
    # time conversions 87a4359 Merge pull request #835 from dcormier/main 8927396 Merge pull request #837 from
    # uuid-rs/fix/lifetime-syntaxes 6dfb4b1 Conversions between Timestamp and std::time::SystemTime b508383 fix up
    # mismatched_lifetime_syntaxes lint See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=uuid&package-manager=cargo&pre
    # vious-version=1.17.0&new-version=1.18.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-depe
    # ndabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38610	(@dependabot[bot], @dependabot[bot], #38610)	build(deps): bump glob from 0.3.2 to 0.3.3 (#38610)
    # Bumps [glob](https://github.com/rust-lang/glob) from 0.3.2 to 0.3.3.
    # Release notes Sourced from glob's releases.
    # v0.3.3
    # Optimize memory allocations (#147) Bump the MSRV to 1.63 (#172) Fix spelling in pattern documentation (#164) Fix version
    # numbers and some formatting (#157) Style fixes (#137)
    # Changelog Sourced from glob's changelog.
    # 0.3.3 - 2025-08-11
    # Optimize memory allocations (#147) Bump the MSRV to 1.63 (#172) Fix spelling in pattern documentation (#164) Fix version
    # numbers and some formatting (#157) Style fixes (#137)
    # Commits
    # 952da29 chore: release v0.3.3 (#155) bfcd9a4 Optimize memory allocations (#147) e78862d Bump the MSRV to 1.63 (#172)
    # 97e5ee9 Merge pull request #164 from jonboulle/patch-1 4da20e6 Fix spelling in pattern documentation 1cf0f30 Fix version
    # numbers and some formatting 7a17f11 Merge pull request #153 from tgross35/clippy-ci 56619ab Run clippy checks in CI
    # 51363fa Disallow warnings in CI 1649a9a Apply remaining clippy suggestions Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=glob&package-manager=cargo&pre
    # vious-version=0.3.2&new-version=0.3.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-depend
    # abot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38609	(@dependabot[bot], @dependabot[bot], #38609)	build(deps): bump rustversion from 1.0.21 to 1.0.22 (#38609)
    # Bumps [rustversion](https://github.com/dtolnay/rustversion) from 1.0.21 to 1.0.22.
    # Release notes Sourced from rustversion's releases.
    # 1.0.22
    # Turn off clippy incompatible_msrv in rustversion-conditional code (#63)
    # Commits
    # 9e86f83 Release 1.0.22 a27fffd Merge pull request #64 from dtolnay/incompatiblemsrv 9358372 Allow clippy
    # incompatible_msrv 0379843 Revert &quot;Pin nightly toolchain used for miri job&quot; 1491c25 Merge pull request #62 from
    # dtolnay/ci 49ad7c5 Add -Zfmt-debug=none test in CI See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=rustversion&package-manager=ca
    # rgo&previous-version=1.0.21&new-version=1.0.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/abo
    # ut-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38607	(@dependabot[bot], @dependabot[bot], #38607)	build(deps): bump webrender from `ae2477d` to `15318d6` (#38607)
    # Bumps [webrender](https://github.com/servo/webrender) from `ae2477d` to `15318d6`.
    # Commits
    # 15318d6 Expose FastTransform so that it can be used in Servo See full diff in compare view
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38606	(@dependabot[bot], @dependabot[bot], #38606)	build(deps): bump wr_malloc_size_of from `ae2477d` to `15318d6` (#38606)
    # Bumps [wr_malloc_size_of](https://github.com/servo/webrender) from `ae2477d` to `15318d6`.
    # Commits
    # 15318d6 Expose FastTransform so that it can be used in Servo See full diff in compare view
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38605	(@dependabot[bot], @dependabot[bot], #38605)	build(deps): bump proc-macro2 from 1.0.95 to 1.0.96 (#38605)
    # Bumps [proc-macro2](https://github.com/dtolnay/proc-macro2) from 1.0.95 to 1.0.96.
    # Release notes Sourced from proc-macro2's releases.
    # 1.0.96
    # Simplify how rustdoc flags are decided during docs.rs builds (#511)
    # Commits
    # 21f89e7 Release 1.0.96 fe7d2fa Merge pull request #511 from dtolnay/docsrs 7be6983 Revert &quot;Work around doc build
    # failure due to docs.rs flags change&quot; 6f40165 Revert &quot;Pin nightly toolchain used for miri job&quot; fc2ae0f
    # Update ui test suite to nightly-2025-06-18 1ccc5a2 Ignore mismatched_lifetime_syntaxes lint 1091cc2 Pin nightly
    # toolchain used for miri job 0e82bea Ignore ignore_without_reason pedantic clippy lint in test See full diff in compare
    # view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=proc-macro2&package-manager=ca
    # rgo&previous-version=1.0.95&new-version=1.0.96)](https://docs.github.com/en/github/managing-security-vulnerabilities/abo
    # ut-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38600	(@sagudev, #38600)	canvas: trace/instrument canvas messages processing (#38600)
    # Add some tracing/instrumenting for canvas messages processing.
    # Testing: We have not tests for tracing code.
-https://github.com/servo/servo/pull/38316	(@Narfinger, #38316)	canvas: Use `Transform2D<f64>` instead of `Transform2D<f32>` (#38316)
    # I mostly did dumb replacement so please check that this is correct.  In addition, `canvas_data::draw_with_shadow` needs
    # some a bit of a closer look.
    # Testing: This is covered by existing tests, and it is likely that WPT tests are unaffected by the precision of the
    # transform, even though it is technically more correct.  Fixes: #38256
-https://github.com/servo/servo/pull/38554	(@Loirooriol, @mrobinson, #38554)	layout: Use FastTransform for hit testing (#38554)
    # `FastTransform` provides faster matrix operations when the involved transforms are just translations.
    # Testing: Not needed (no change in behavior)
-https://github.com/servo/servo/pull/38596	(@Narfinger, #38596)	Update mozjs dependency. (#38596)
    # Dependency update for mozjs which includes the faster latin1 decoding.
    # Testing: Dependency updates have no tests.
+https://github.com/servo/servo/pull/38595	(@TimvdLippe, #38595)	Implement Trusted Types for ShadowRoot (#38595)
    dom
    # Also make TrustedHTML work the same as TrustedScript by only taking 1 `&str` to make things easier.
    # Part of #36258
-https://github.com/servo/servo/pull/38597	(@simonwuelker, #38597)	Reduce the size of some unsafe blocks in `shaper.rs` (#38597)
    # This change ensures that safe operations are done outside of unsafe blocks as often as possible.
+https://github.com/servo/servo/pull/38539	(@mrobinson, @Loirooriol, #38539)	script/compositor: Send `mouseleave` events when cursor moves between `<iframe>`s (#38539)
    dom
    # Properly send `mouseleave` events when the cursor moves between ``s.  This allows a better handling of cursor changes
    # and status text updates.  Specifically, we do not need to continuously update the cursor and the value can be cached in
    # the `Document`.  In addition, status updates can now be sent properly when moving focus between ``s.
    # Note that style updates for `:hover` values are still broken, but less so than before.  Now the hover state on the
    # `Node` is updated, but for some reason the restyle isn't taking place properly.  This maintains the status quo as far as
    # behavior goes when hover moves between ``s.
    # This change also adds a helper data structure to `Document` which will eventually be responsible for event handling.
    # Testing: Cursor and status change are currently very hard to test as the API test harness makes this difficult at the
    # moment.
+https://github.com/servo/servo/pull/37834	(@TimvdLippe, #37834)	Implement Trusted Type eval checks (#37834)
    dom
    # It implements the new codeForEvalGets callback to retrieve the value for a trusted script object.  Additionally, it
    # implements the new logic in can-compile-strings to call the policy factory if required.
    # Note that parameter and argument checks aren't implemented yet, as they require updates to binding generation (see TODO
    # in script_runtime).
    # Part of #36258
+https://github.com/servo/servo/pull/38188	(@mukilan, #38188)	script: support inline SVG by serializing the subtree (#38188)
    svg
    # This patch adds support for rendering static inline SVG documents in the DOM tree by serializing the SVGElement's
    # subtree and leveraging the existing resvg based SVG stack for rendering.  Serialiing the subtree is necessary as resvg's
    # tree representation (roxmltree) is immutable, so we can't construct the tree incrementally.
    # Few other design choices here: 1.  The `SVGSVGElement` is now treated as a replaced element and the
    #    layout code is responsible for plumbing the serialized SVG source (encoded as a base64 data: url) into the image
    #    cache, much like how background images are handled.
    # 2.  The serialization is done on the script thread after an initial
    #    layout pass.  This is necessary because the serialization code asserts that it is invoked from script thread i.e we
    #    can't call it from layout workers.
    # 3.  The serialized SVG data: url is cached to avoid recomputing it on
    #    subsequent layouts.  The cache is invalidated when the SVGSVGElement's subtree is mutated.
    # The original SVGSVGElement code was behind the `dom_svg_enabled` pref.  This patch also removes the preference and make
    # SVG support using resvg available unconditionally.
    # Below is the analysis of the new test failures:
    # These tests use inline SVG but used to pass by accident.  They now fail because they contain SVG with no intrinsic
    # sizing which is not handled by resvg in a way that would allows us to distinguish it from the sized case.  The same
    # limitation applies to non-inline SVG.
    #  - /css/CSS2/positioning/absolute-replaced-width-003a.xht - /css/CSS2/positioning/absolute-replaced-width-003b.xht -
    #  /css/CSS2/positioning/absolute-replaced-width-003c.xht
    # These tests employ CSS styles in the HTML that target the elements in inline SVG, which is not currently supported.
    #  - /css/compositing/mix-blend-mode/mix-blend-mode-plus-lighter-svg-basic.html -
    #  /css/compositing/mix-blend-mode/mix-blend-mode-plus-lighter-svg.html
    # This is a tentative test that uses the unsupported 'border-shape' CSS property.  The ref uses SVG, so it used to pass
    # accidentally.  The ref still doesn't render correctly since it also relies on styling SVG elements using CSS classes in
    # the HTML (instead of inline in SVG).
    #  - /css/css-borders/tentative/border-shape/border-shape-stroke.html
    # These tests use the attribute 'clip-path=circle(...)' in the test, but this doesn't seem to work in resvg.
    #  - /css/css-masking/clip-path/clip-path-borderBox-1b.html - /css/css-masking/clip-path/clip-path-contentBox-1b.html -
    #  /css/css-masking/clip-path/clip-path-contentBox-1c.html - /css/css-masking/clip-path/clip-path-fillBox-1b.html -
    #  /css/css-masking/clip-path/clip-path-marginBox-1a.html - /css/css-masking/clip-path/clip-path-paddingBox-1b.html -
    #  /css/css-masking/clip-path/clip-path-strokeBox-1b.html - /css/css-masking/clip-path/clip-path-strokeBox-1c.html -
    #  /css/css-masking/clip-path/clip-path-viewBox-1a.html - /css/css-masking/clip-path/clip-path-viewBox-1b.html -
    #  /css/css-masking/clip-path/clip-path-viewBox-1d.html - /css/css-masking/clip-path/svg-clip-path-circle-offset.html -
    #  /css/css-masking/clip-path/svg-clip-path-ellipse-offset.html
    # Additionally, the below two tests use a `foreignObject` SVG element which embeds a html div fragment.  This is also not
    # supported by resvg.
    #  - /css/css-masking/clip-path/clip-path-viewBox-1d.html - /css/css-masking/clip-path/clip-path-fillBox-1b.html
    # The following test fails because of apparent pixel differences between a circle rendered purely using CSS clip-path vs a
    # circle rendered in SVG using resvg.
    #  - /css/css-masking/clip-path/clip-path-contentBox-1c.html
    # These tests style the inline SVG elements using CSS in the HTML or separate stylesheet.  This is not supported by this
    # implementation.
    #  - /css-transforms/document-styles/svg-document-styles-{001..004}.html -
    #  /css-transforms/document-styles/svg-document-styles-012.html -
    #  /css-transforms/external-styles/svg-external-styles-{001..004}.html -
    #  /css-transforms/external-styles/svg-external-styles-014.html
    # These tests seem like they should pass, but they fail because of what seems like an anti-aliasing issue in the rendering
    # engine.  The transformed element has a thin outline which is causing pixel difference with the ref:
    #  - /css/css-transforms/group/svg-transform-group-008.html - /css/css-transforms/group/svg-transform-group-009.html -
    #  /css/css-transforms/group/svg-transform-nested-009.html - /css/css-transforms/group/svg-transform-nested-013.html -
    #  /css/css-transforms/group/svg-transform-nested-014.html - /css/css-transforms/group/svg-transform-nested-018.html -
    #  /css/css-transforms/group/svg-transform-nested-019.html - /css/css-transforms/group/svg-transform-nested-008.html
    # The below tests fail because resvg is calculating the wrong size for the 'rect' inside the SVG.  The dimensions of the
    # SVG are established via the CSS in the HTML, so it seems resvg is using incorrect coordinates for the children of the
    # svg when explict width/height are not specified in the root svg element.
    #  - /css/css-transforms/group/svg-transform-group-011.html - /css/css-transforms/group/svg-transform-nested-021.html -
    #  /css/css-transforms/group/svg-transform-nested-029.html
    # All these tests use an SVG that doesn't have width nor height attributes and this causes resvg to use incorrect
    # coordinates for the SVG's children.  In addition, the following tests use the CSS syntax for transforms inside the SVG
    # (using style attribute) which is not supported by resvg (it only supports the SVG 1.1 transform syntax).
    #  - /css/css-transforms/inline-styles/svg-inline-styles-{001..004}.html -
    #  /css/css-transforms/inline-styles/svg-inline-styles-012.html
    # In the case of these four tests, the `style` attribute specifies an invalid transform, but resvg doesn't fallback to the
    # transform specified via the `transform` attribute on the same element.
    #  - /css/css-transforms/inline-styles/svg-inline-styles-005.html -
    #  /css/css-transforms/inline-styles/svg-inline-styles-006.html -
    #  /css/css-transforms/inline-styles/svg-inline-styles-010.html -
    #  /css/css-transforms/inline-styles/svg-inline-styles-013.html
    # The following test fails because of the lack of width/height in SVG as described above but it also exposes gaps in our
    # CSS tranform implementation.
    #  - /css/css-transforms/preserve3d-and-filter-with-perspective.html
    # These tests failure because resvg doesn't handle the SVG without explicit width and height, but specified via CSS in the
    # HTML.  In addition, there are pixel differences between the ref due to antialiasing issues.
    #  - /css/css-transforms/matrix/svg-matrix-{005...008}.html - /css/css-transforms/matrix/svg-matrix-010.html -
    #  /css/css-transforms/matrix/svg-matrix-012.html - /css/css-transforms/matrix/svg-matrix-{015..069}.html -
    #  /css/css-transforms/rotate/svg-rotate-angle-45-001.html - /css/css-transforms/rotate/svg-rotate-angle-45-011.html -
    #  /css/css-transforms/rotate/svg-rotate-angle-45-022.html - /css/css-transforms/scale/svg-scale-006.html -
    #  /css/css-transforms/scale/svg-scale-007.html
    # These tests seem to be failing due to some sort of antialiasing issue, where a transformed SVG element has a thin border
    # that causes pixel differences compared to the solid colored reference.
    #  - /css/css-transforms/skewX/svg-skewx-001.html - /css/css-transforms/skewX/svg-skewx-006.html -
    #  /css/css-transforms/skewX/svg-skewx-011.html - /css/css-transforms/skewX/svg-skewx-016.html -
    #  /css/css-transforms/skewX/svg-skewx-021.html - /css/css-transforms/skewX/svg-skewxy-001.html -
    #  /css/css-transforms/skewY/svg-skewy-001.html - /css/css-transforms/skewY/svg-skewy-006.html -
    #  /css/css-transforms/skewY/svg-skewy-011.html - /css/css-transforms/skewY/svg-skewy-016.html -
    #  /css/css-transforms/skewY/svg-skewy-021.html
    # These tests specify several SVG attributes such as transform, vector-effect etc via CSS in the HTML (rather than inline
    # in SVG).  The current implementation doesn't support this.
    #  - /css/css-transforms/transform-box/stroke-box-mutation-001.html -
    #  /css/css-transforms/transform-box/stroke-box-mutation-002.html -
    #  /css/css-transforms/transform-box/stroke-box-mutation-003.html -
    #  /css/css-transforms/transform-box/stroke-box-mutation-004.html -
    #  /css/css-transforms/transform-box/svgbox-stroke-box-002.html -
    #  /css/css-transforms/transform-box/svgbox-stroke-box-003.html -
    #  /css/css-transforms/transform-box/svgbox-stroke-box-004.html -
    #  /css/css-transforms/transform-box/svgbox-stroke-box-005.html
    # These tests depend on 'transform-origin' specified on an element inside an SVG, but this transform is influenced by the
    # 'tranform-box' set via CSS in the HTML itself (not the SVG).  The current implementation doesn't support styling the SVG
    # using document styles, so these tests just fail.
    #  - /css/css-transforms/transform-origin/svg-origin-relative-length-*.html
    # These tests check the fallback behaviour when invalid syntax is encountered in the 'transform-origin' value.  resvg
    # doesn't correctly fallback to 0,0 causing the tests to fail.
    #  - /css/css-transforms/transform-origin/svg-origin-relative-length-invalid-001.html -
    #  /css/css-transforms/transform-origin/svg-origin-relative-length-invalid-002.html -
    #  /css/css-transforms/transform-origin/svg-origin-relative-length-invalid-003.html -
    #  /css/css-transforms/transform-origin/svg-origin-relative-length-invalid-004.html
    # These tests use unimplemented Canvas APIs like 'beginLayer' and the 'CanvasFilter' constructor and hence fail at
    # runtime.
    #  - /html/canvas/element/filters/2d.filter.canvasFilterObject.gaussianBlur.tentative.html -
    #  /html/canvas/element/filters/2d.filter.layers.gaussianBlur.tentative.html -
    #  /html/canvas/element/layers/2d.layer.anisotropic-blur.isotropic.tentative.html -
    #  /html/canvas/element/layers/2d.layer.anisotropic-blur.mostly-x.tentative.html -
    #  /html/canvas/element/layers/2d.layer.anisotropic-blur.mostly-y.tentative.html -
    #  /html/canvas/element/layers/2d.layer.anisotropic-blur.x-only.tentative.html -
    #  /html/canvas/element/layers/2d.layer.anisotropic-blur.y-only.tentative.html -
    #  /html/canvas/element/layers/2d.layer.css-filters.blur-and-shadow.tentative.html -
    #  /html/canvas/element/layers/2d.layer.css-filters.blur.tentative.html -
    #  /html/canvas/element/layers/2d.layer.css-filters.shadow.tentative.html -
    #  /html/canvas/element/layers/2d.layer.ctm.layer-filter.tentative.html -
    #  /html/canvas/offscreen/filters/2d.filter.canvasFilterObject.dropShadow.tentative.html -
    #  /html/canvas/offscreen/filters/2d.filter.canvasFilterObject.gaussianBlur.tentative.html -
    #  /html/canvas/offscreen/filters/2d.filter.layers.dropShadow.tentative.html -
    #  /html/canvas/offscreen/filters/2d.filter.layers.gaussianBlur.tentative.html -
    #  /html/canvas/offscreen/layers/2d.layer.anisotropic-blur.isotropic.tentative.html -
    #  /html/canvas/offscreen/layers/2d.layer.anisotropic-blur.mostly-x.tentative.html -
    #  /html/canvas/offscreen/layers/2d.layer.anisotropic-blur.mostly-y.tentative.html -
    #  /html/canvas/offscreen/layers/2d.layer.anisotropic-blur.x-only.tentative.html -
    #  /html/canvas/offscreen/layers/2d.layer.anisotropic-blur.y-only.tentative.html -
    #  /html/canvas/offscreen/layers/2d.layer.css-filters.blur-and-shadow.tentative.html -
    #  /html/canvas/offscreen/layers/2d.layer.css-filters.blur.tentative.html -
    #  /html/canvas/offscreen/layers/2d.layer.css-filters.shadow.tentative.html -
    #  /html/canvas/offscreen/layers/2d.layer.ctm.layer-filter.tentative.html
    # These tests fail because resvg doesn't seem to honour the 'translate' CSS property specified on an SVG element using an
    # inline 'style' attribute.
    #  - /css/css-transforms/translate/svg-translate-with-units.html -
    #  /css/css-transforms/translate/translate-and-transform-attribute-in-svg.html -
    #  /css/css-transforms/translate/translate-and-transform-css-property-in-svg.html -
    #  /css/css-transforms/translate/translate-in-svg.html
    # These tests seem to fail due to the filter effect implementation in resvg either not being complete or spec compliant.
    #  - /css/filter-effects/feconvolve-divisor.html - /css/filter-effects/feconvolve-region-001.html -
    #  /css/filter-effects/feconvolve-region-002.html - /css/filter-effects/filter-subregion-01.html -
    #  /css/filter-effects/svg-feimage-002.html - /css/filter-effects/svg-feimage-003.html -
    #  /css/filter-effects/svg-feimage-004.html - /css/filter-effects/svg-feoffset-001.html
    # The test /css/filter-effects/svg-feimage-004.html should ideally PASS but currently fails because we don't propagate
    # height/width set using CSS in HTML element to the root SVG, so resvg uses the wrong dimensions when rendering the
    # children of the SVG.
    # These failures are due to deficienies in our current implementation i.e we don't support styling SVG elements using CSS
    # in HTML.
    #  - /css/css-transforms/gradientTransform/svg-gradientTransform-combination-001.html -
    #  /css/selectors/sharing-in-svg-use.html
    # The below test fails as our current implementation relies on resvg to tell us the intrinsic ratio of the SVG, but this
    # doesn't always work correctly.
    #  - /css/css-sizing/svg-intrinsic-size-005.html
    # This failure is due to lack of proper fallback to no-op transform in resvg when the `rotate()` syntax is specified with
    # an invalid list e.g `rotate(90,)`.
    #  - /css/css-transforms/rotate/svg-rotate-3args-invalid-002.html
    # This test only passes in CI and based on the raw log output, it seems that no text inside the SVG is rendered in the CI.
    # This could be an font stack related issue.
    #  - /css/css-display/display-contents-svg-elements.html
    # This test asserts that the CSP blocks loads triggered using `use` elements in SVG.  It used to TIMEOUT as without inline
    # SVG support, no CSP violation event was triggered.  It fails now since the event is now triggered for the load of the
    # SVG itself (our current implementation loads inline SVGs as serialized base64 data: urls).  This doesn't match the
    # blocked URL in the use element though.
    #  - /content-security-policy/img-src/svg-use-blocked.tentative.html
    # Signed-off-by: Mukilan Thiyagarajan
-https://github.com/servo/servo/pull/38593	(@mrobinson, #38593)	tidy: Replace custom `panic`/`unwrap` lint with clippy lint (#38593)
    # This change replaces our custom `panic` / `unwrap` lint with the one from clippy.  This rule as not properly applied in
    # servoshell, so this change fixes some clippy errors raised by the new configuration.
    # Testing: This change removes the tidy tests for the custom lints, but otherwise the behavior is tested as part of clippy
    # itself.
-https://github.com/servo/servo/pull/38520	(@mrobinson, #38520)	script: Move `point_in_initial_containing_block` calculation to script (#38520)
    # Instead of calculating this value in the compositor, calculate it in `ScriptThread` now that it is straightforward to
    # get this value from the layout spatial tree.  This allows removing some tricky callback code in the Compositor.
    # Testing: This shouldn't change any observable behavior so is covered by existing tests.
+https://github.com/servo/servo/pull/37100	(@mrobinson, #37100)	script: Properly fire `input` events for clipboard use in input elements (#37100)
    dom
    # When using the clipboard to paste or modify the contents of an input element the specification says says[^1] to
    # > Queue tasks to fire any events that should fire due to the > modification, see § 5.3 Integration with other scripts
    # and events for > details.
    # This change does that, by turning `handle_text_clipboard_action` into `TextInput::handle_clipboard_event` and having the
    # caller responsible for executing events.  In addition, when content is changed, the node is dirtied, forcing a relayout.
    # [^1]: https://www.w3.org/TR/clipboard-apis/#paste-action
    # Testing: This is difficult to test because we do not have test harness support for input events currently.  There is a
    # manual test for this in the linked bug which is now passing.  Fixes: #37074.
-https://github.com/servo/servo/pull/38562	(@amotaouakkil123, #38562)	Replace `Rc<RefCell<Option<RootedTraceableBox<Heap<JSVal>>>>>` with `Rc<RefCell<Option<Heap<JSVal>>>>` in `PipeTo::shutdown_error` (#38562)
    # #38024 adds a rooted box around the Heap for safety, but this is not necessary anymore after #38385.  The solution is to
    # replace `Rc>>>>` with `Rc>>>`.  This changes replaces this type.
-https://github.com/servo/servo/pull/38538	(@jerensl, #38538)	mach(test-tidy): Remove alphabetical order and line length rule from tidy (#38538)
    # As we plan to adopt more rules from Ruff and rustfmt, we would like to retire the following rules:
    # 1.  `Line length check`, as this is already handled by Ruff and rustfmt configurations.  2.  `Alphabetical order`
    # Testing: `./mach test-tidy --no-progress --all` Fixes: #37121
+https://github.com/servo/servo/pull/38334	(@delan, @atbrakhi, #38334)	devtools: Create source actors from Debugger API notifications (#38334)
    devtools
    # currently our devtools impl creates source actors in script, when executing scripts in HTMLScriptElement or
    # DedicatedWorkerGlobalScope.  this approach is cumbersome, and it means that many pathways to running scripts are missed,
    # such as imported ES modules.
    # with the [SpiderMonkey Debugger API](https://firefox-source-docs.mozilla.org/js/Debugger/), we can pick up all of the
    # scripts and all of their sources without any extra code, as long as we tell it about every global we create (#38333,
    # #38551).  this patch adds a [Debugger#onNewScript()
    # hook](https://firefox-source-docs.mozilla.org/js/Debugger/Debugger.html#onnewscript-script-global) to the debugger
    # script, which calls DebuggerGlobalScope#notifyNewSource() to notify our script system when a new script runs.  if the
    # source is relevant to the file tree in the Sources tab, script tells devtools to create a source actor.
    # Testing: adds several new automated devtools tests Fixes: part of #36027
>>> 2025-08-13T06:04:46Z
+https://github.com/servo/servo/pull/38620	(@euclid.ye@huawei.com, #38620)	webdriver: Synchronize "close window" command & Return correct error type (#38620)
    webdriver
    # 1.  Synchronize [Close Window](https://w3c.github.io/webdriver/#dfn-close-window) command to reduce intermittency 2.
    # There was a update last month exposing that we are not returning correct error type for Session getter.
    # https://github.com/web-platform-tests/wpt/pull/53735 3.  Other trivial fix
    # Testing: - `/webdriver/tests/classic/close_window/close.py` can now fully pass.  -
    # `/webdriver/tests/classic/delete_session/*` can now fully pass.
-https://github.com/servo/servo/pull/38641	(@dependabot[bot], @dependabot[bot], #38641)	build(deps): bump clap from 4.5.43 to 4.5.44 (#38641)
    # Bumps [clap](https://github.com/clap-rs/clap) from 4.5.43 to 4.5.44.
    # Release notes Sourced from clap's releases.
    # v4.5.44 [4.5.44] - 2025-08-11 Features
    # Add Command::mut_subcommands
    # Changelog Sourced from clap's changelog.
    # [4.5.44] - 2025-08-11 Features
    # Add Command::mut_subcommands
    # Commits
    # 8e2c2c5 chore: Release 427d4fc docs: Update changelog 3b99593 Merge pull request #5896 from epage/env f5fc765
    # feat(complete): Provide a way to disable env completions See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=clap&package-manager=cargo&pre
    # vious-version=4.5.43&new-version=4.5.44)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-depe
    # ndabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38639	(@dependabot[bot], @dependabot[bot], #38639)	build(deps): bump proc-macro2 from 1.0.96 to 1.0.97 (#38639)
    # Bumps [proc-macro2](https://github.com/dtolnay/proc-macro2) from 1.0.96 to 1.0.97.
    # Release notes Sourced from proc-macro2's releases.
    # 1.0.97
    # Allow build-script cleanup failure with NFSv3 output directory to be non-fatal (#505, #512, thanks @​davvid)
    # Commits
    # b61379b Release 1.0.97 50fc514 Merge pull request #512 from dtolnay/enotempty 7cc389b Restore support for rustc older
    # than 1.83 ad59158 Merge pull request #505 from davvid/ignore-cleanup 19cf120 build: allow the cleanup step to be
    # non-fatal See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=proc-macro2&package-manager=ca
    # rgo&previous-version=1.0.96&new-version=1.0.97)](https://docs.github.com/en/github/managing-security-vulnerabilities/abo
    # ut-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38640	(@dependabot[bot], @dependabot[bot], #38640)	build(deps): bump the servo-media-related group with 12 updates (#38640)
    # Bumps the servo-media-related group with 12 updates:
    # | Package | From | To | | --- | --- | --- | | [servo-media](https://github.com/servo/media) | ``4f36494`` | ``a57b0e6``
    # | | [servo-media-dummy](https://github.com/servo/media) | ``4f36494`` | ``a57b0e6`` | |
    # [servo-media-gstreamer](https://github.com/servo/media) | ``4f36494`` | ``a57b0e6`` | | servo-media-audio | ``4f36494``
    # | ``a57b0e6`` | | servo-media-derive | ``4f36494`` | ``a57b0e6`` | | servo-media-gstreamer-render | ``4f36494`` |
    # ``a57b0e6`` | | servo-media-gstreamer-render-android | ``4f36494`` | ``a57b0e6`` | | servo-media-gstreamer-render-unix |
    # ``4f36494`` | ``a57b0e6`` | | servo-media-player | ``4f36494`` | ``a57b0e6`` | | servo-media-streams | ``4f36494`` |
    # ``a57b0e6`` | | servo-media-traits | ``4f36494`` | ``a57b0e6`` | | servo-media-webrtc | ``4f36494`` | ``a57b0e6`` |
    # Updates `servo-media` from `4f36494` to `a57b0e6`
    # Commits
    # a57b0e6 initial stub for ohos backend (#444) See full diff in compare view
    # Updates `servo-media-dummy` from `4f36494` to `a57b0e6`
    # Commits
    # a57b0e6 initial stub for ohos backend (#444) See full diff in compare view
    # Updates `servo-media-gstreamer` from `4f36494` to `a57b0e6`
    # Commits
    # a57b0e6 initial stub for ohos backend (#444) See full diff in compare view
    # Updates `servo-media-audio` from `4f36494` to `a57b0e6`
    # Updates `servo-media-derive` from `4f36494` to `a57b0e6`
    # Updates `servo-media-gstreamer-render` from `4f36494` to `a57b0e6`
    # Updates `servo-media-gstreamer-render-android` from `4f36494` to `a57b0e6`
    # Updates `servo-media-gstreamer-render-unix` from `4f36494` to `a57b0e6`
    # Updates `servo-media-player` from `4f36494` to `a57b0e6`
    # Updates `servo-media-streams` from `4f36494` to `a57b0e6`
    # Updates `servo-media-traits` from `4f36494` to `a57b0e6`
    # Updates `servo-media-webrtc` from `4f36494` to `a57b0e6`
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38637	(@dependabot[bot], @dependabot[bot], #38637)	build(deps): bump ab_glyph_rasterizer from 0.1.9 to 0.1.10 (#38637)
    # Bumps [ab_glyph_rasterizer](https://github.com/alexheretic/ab-glyph) from 0.1.9 to 0.1.10.
    # Commits
    # 971e5a9 Release ab_glyph_rasterizer 0.1.10 f2e376a Fix remaining draw_line_scalar index oob panic scenarios (#120)
    # c476792 Fix 1.89 clippy lints 727737f Update dev-dependencies f963bca Release ab_glyph 0.2.31 a216ede Add
    # &quot;gvar-alloc&quot; feature enabled by default (#118) See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ab_glyph_rasterizer&package-ma
    # nager=cargo&previous-version=0.1.9&new-version=0.1.10)](https://docs.github.com/en/github/managing-security-vulnerabilit
    # ies/about-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/38591	(@Kenzie.Raditya.Tirtarahardja@huawei.com, #38591)	webdriver: Add handle user prompt for some command (#38591)
    webdriver
    # - When taking element screenshot, we should handle the user prompt before getting the element bounding rectangle -
    # Handle user prompt for `is element enabled` and `is element selected`
    # Testing: `./tests/wpt/tests/webdriver/tests/classic/{take_element_screenshot, is_element_enabled,
    # is_element_selected}/user_prompts.py`
+https://github.com/servo/servo/pull/37152	(@jschwe, #37152)	CI: Check MSRV in CI (#37152)
    devex
    # As previously proposed on zulip and discussed in the coordination meeting, add a check to CI to see if servo still
    # compiles with our minimum supported Rust version.  To avoid requiring changes, we define our MSRV as the current version
    # we are using now (1.85.0).
    # This does not prevent us from updating the default compiler version, which we should still do, to get benefits like
    # faster compile times, newer lints and making sure crown stays up-to-date.
    # We simply test that libservo compiles in CI, since libservo (and dependencies) is what embedders would care about.  We
    # also don't need mach (or bootstrap!) for this, so we just use cargo build.
    # Testing: This PR adds a CI test.  [`./mach try windows-build-libservo linux-build-libservo
    # mac-build-libservo`](https://github.com/jschwe/servo/actions/runs/16901171766)
-https://github.com/servo/servo/pull/38632	(@mrobinson, #38632)	tidy: Remove dead and redundant code from Servo Rust tidy check (#38632)
    # - Remove all handling of comments and attributes.  This was not affecting
    #   the checks in any way.
    # - Remove `is_associated_type()` as it was unused.  - Remove the check for `&String`, `&Vec`, operators at the end of the
    #   line, and the unit return type as clippy already checks these (and handles the mutable variants).
    # Testing: This is covered by tidy script tests.
-https://github.com/servo/servo/pull/38631	(@jschwe, #38631)	script: Remove unnecessary Arc<Mutex> (#38631)
    # The `Arc>` wrapper around the IpcSender does not appear to be needed anymore.
    # Testing: No functional changes.  Covered by existing tests
-https://github.com/servo/servo/pull/38614	(@delan, @atbrakhi, #38614)	ci: Run devtools tests whenever we run unit tests (#38614)
    # this patch updates linux.yml, mac.yml, and windows.yml to run the devtools test suite (#36325), whenever unit tests are
    # enabled in those workflows.  plus three changes that speed up the tests from 73 → 65 → 56 → 51 seconds:
    # - we replace the hardcoded sleep(1) after starting servoshell with a loop that waits until the devtools port is open
    # (this also fixes intermittent failures when servoshell starts too slowly, especially on macOS) - we start the internal
    # web servers once, and reuse them across all tests - we run servoshell in headless mode (this is also required because
    # most CI runners have no GUI)
    # finally we fix two bugs that cause very noisy but not very interesting error messages:
    # - in the test code, we use a [context manager](https://docs.python.org/3/reference/datamodel.html#context-managers) to
    # ensure the devtools client is disconnected unconditionally, even if test methods or assert helper methods raise
    # exceptions (this was causing errors on all platforms) - in the devtools server, we treat “connection reset” errors when
    # reading from the client like a normal EOF, rather than as a failure (this was causing errors on Windows)
    # on self-hosted linux builds, there are still spurious error messages like the following, but we can fix them later:
    # ``` error: XDG_RUNTIME_DIR not set in the environment.  libEGL warning: egl: failed to create dri2 screen ```
    # Testing: this patch effectively adds 44 tests to CI Fixes: #36325
+https://github.com/servo/servo/pull/38603	(@Loirooriol, @mukilan, #38603)	layout: Improve sizing for inline SVG (#38603)
    svg
    # The metadata provided by usvg has unreliable sizes.  Ignore it, and rely on the `width`, `height` and `viewBox`
    # attributes instead.
    # Note that inline SVG with a natural aspect ratio but no natural sizes should stretch to the containing block.  This is
    # left for a follow-up.
    # Bumps Stylo to https://github.com/servo/stylo/pull/229
    # Testing: Improves several WPT.
+https://github.com/servo/servo/pull/38624	(@delan, @atbrakhi, #38624)	devtools: Fix `getBreakpointListActor` handler in watcher actor (#38624)
    devtools
    # the Firefox devtools client often sends multiple `getBreakpointListActor` requests to the watcher actor when connecting,
    # and the Firefox devtools server returns the same breakpoint list actor every time, but Servo returns a new breakpoint
    # list actor each time.  this patch aligns Servo’s behaviour with Firefox.
    # Testing: this patch adds a devtools test
-https://github.com/servo/servo/pull/38619	(@euclid.ye@huawei.com, #38619)	test config: Add escape character (#38619)
    # Add escape character for config.  Otherwise cannot run webdriver test.
    # Fixes: `wptrunner.wptmanifest.parser.ParseError: Junk before EOL ]`
+https://github.com/servo/servo/pull/38602	(@rodion.borovyk@gmail.com, #38602)	script: Send JS evaluation errors to constellation (#38602)
    embedding
    # Send JS evaluation errors to constellation in `script_thread::handle_evaluate_javascript` instead of silently
    # swallowing.
    # Testing: New test cases in `tests/webview.rs`: one for compilation failure, another for evaluation failure.  Fixes:
    # #37810
+https://github.com/servo/servo/pull/38357	(@longvatrong111, #38357)	Implement webdriver extract script arguments (#38357)
    webdriver
    # Fix script parsing step.  Implement webdriver `extract script arguments`.  Implement `deserialize_web_element` and
    # `deserialize_shadow_root` from script command argument.
    # Testing: `/tests/wpt/tests/webdriver/tests/classic/execute_script/`
    # `/tests/wpt/tests/webdriver/tests/classic/execute_async_script/`
    # cc: @xiaochengh
+https://github.com/servo/servo/pull/38535	(@Kenzie.Raditya.Tirtarahardja@huawei.com, #38535)	script: Implement `getModifierState` for mouse event (#38535)
    dom
    # Implement missing idl function `getModifierState` for mouse event.  The implementation is exactly the same as in
    # keyboard event https://w3c.github.io/uievents/#dom-keyboardevent-getmodifierstate.
    # https://github.com/servo/servo/blob/6651f37c05138112cecf33d59de2709b715841f1/components/script/dom/keyboardevent.rs#L267
    # -L283
    # Testing: Fix `./tests/wpt/tests/infrastructure/testdriver/actions/actionsWithKeyPressed.html`
-https://github.com/servo/servo/pull/38386	(@abdelrahman1234567, #38386)	Basic webdriver support to servoshell on ohos (#38386)
    # Adding basic webdriver support to servoshell on ohos and basic communication between the ohos device and script.
    # Testing: Manual testing and tracing logs
+https://github.com/servo/servo/pull/37667	(@delan, @atbrakhi, #37667)	devtools: Show clients where they can set breakpoints (#37667)
    devtools
    # devtools clients query source actors to determine where the user can set breakpoints in a source.  there are two
    # relevant requests here: `getBreakableLines` controls which line numbers can be clicked in the margin, and once a line
    # number is clicked, `getBreakpointPositionsCompressed` controls where to show breakpoint buttons within that line.
    # this patch handles those requests by querying the [SpiderMonkey Debugger
    # API](https://firefox-source-docs.mozilla.org/js/Debugger/) for that information: - devtools sends its script thread a
    # GetPossibleBreakpoints message for the source’s
    # [`spidermonkey_id`](https://firefox-source-docs.mozilla.org/js/Debugger/Debugger.Source.html#id) - the script thread
    # fires a `getPossibleBreakpoints` event into its debugger global - the debugger script looks up the
    # [root](https://firefox-source-docs.mozilla.org/js/Debugger/Debugger.html#onnewscript-script-global)
    # [Debugger.Script](https://firefox-source-docs.mozilla.org/js/Debugger/Debugger.Script.html#getpossiblebreakpoints-query)
    # for that source, calls
    # [getPossibleBreakpoints()](https://firefox-source-docs.mozilla.org/js/Debugger/Debugger.Script.html#getpossiblebreakpoin
    # ts-query),
    # and returns the result via DebuggerGlobalScope#getPossibleBreakpointsResult() - that method takes the pending result
    # sender, and sends the result back to devtools - devtools massages the result into the format required by the request,
    # and replies to the client
    # as a result, users of the Firefox devtools client can now set breakpoints, though they don’t have any effect.
    # Testing: this patch adds new devtools tests Fixes: part of #36027
+https://github.com/servo/servo/pull/38601	(@uthmaniv, #38601)	net: Send Cookies to Devtools (#38601)
    devtools
    # The current behaviour in dev tools network monitor is missing cookies in the cookies tab in Request Details, displaying
    # "No cookies for this request" even for requests with cookies.  The changes in this PR refactors the `request_cookies`
    # and `response_cookies` to check and retrieve the cookies if available Also, the structure in which the cookies is sent
    # to devtools is been refactored to match the format firefox's devtools client expects.  With these changes, we now have
    # the cookies displayed for requests that have one.
    # Fixes: https://github.com/servo/servo/issues/38127
-https://github.com/servo/servo/pull/38608	(@dependabot[bot], @dependabot[bot], #38608)	build(deps): bump libc from 0.2.174 to 0.2.175 (#38608)
    # Bumps [libc](https://github.com/rust-lang/libc) from 0.2.174 to 0.2.175.
    # Release notes Sourced from libc's releases.
    # 0.2.175 Added
    # AIX: Add getpeereid (#4524) AIX: Add struct ld_info and friends (#4578) AIX: Retore struct winsize (#4577) Android: Add
    # UDP socket option constants (#4619) Android: Add CLONE_CLEAR_SIGHAND and CLONE_INTO_CGROUP (#4502) Android: Add more
    # prctl constants (#4531) FreeBSD Add further TCP stack-related constants (#4196) FreeBSD x86-64: Add
    # mcontext_t.mc_tlsbase (#4503) FreeBSD15: Add kinfo_proc.ki_uerrmsg (#4552) FreeBSD: Add in_conninfo (#4482) FreeBSD: Add
    # xinpgen and related types (#4482) FreeBSD: Add xktls_session (#4482) Haiku: Add functionality from libbsd (#4221) Linux:
    # Add SECBIT_* (#4480) NetBSD, OpenBSD: Export ioctl request generator macros (#4460) NetBSD: Add ptsname_r (#4608)
    # RISCV32: Add time-related syscalls (#4612) Solarish: Add strftime* (#4453) linux: Add EXEC_RESTRICT_* and EXEC_DENY_*
    # (#4545)
    # Changed
    # AIX: Add const to signatures to be consistent with other platforms (#4563)
    # Fixed
    # AIX: Fix the type of struct statvfs.f_fsid (#4576) AIX: Fix the type of constants for the ioctl request argument (#4582)
    # AIX: Fix the types of stat{,64}.st_*tim (#4597) AIX: Use unique errno values (#4507) Build: Fix an incorrect target_os
    # -&gt; target_arch check (#4550) FreeBSD: Fix the type of xktls_session_onedir.ifnet (#4552) Mips64 musl: Fix the type of
    # nlink_t (#4509) Mips64 musl: Use a special MIPS definition of stack_t (#4528) Mips64: Fix SI_TIMER, SI_MESGQ and
    # SI_ASYNCIO definitions (#4529) Musl Mips64: Swap the order of si_errno and si_code in siginfo_t (#4530) Musl Mips64: Use
    # a special MIPS definition of statfs (#4527) Musl: Fix the definition of fanotify_event_metadata (#4510) NetBSD: Correct
    # enum fae_action to be #[repr(C)] (#60a8cfd5) PSP: Correct char -&gt; c_char (eaab4fc3) PowerPC musl: Fix termios
    # definitions (#4518) PowerPC musl: Fix the definition of EDEADLK (#4517) PowerPC musl: Fix the definition of NCCS (#4513)
    # PowerPC musl: Fix the definitions of MAP_LOCKED and MAP_NORESERVE (#4516) PowerPC64 musl: Fix the definition of shmid_ds
    # (#4519)
    # Deprecated
    # ... (truncated)
    # Changelog Sourced from libc's changelog.
    # 0.2.175 - 2025-08-10 Added
    # AIX: Add getpeereid (#4524) AIX: Add struct ld_info and friends (#4578) AIX: Retore struct winsize (#4577) Android: Add
    # UDP socket option constants (#4619) Android: Add CLONE_CLEAR_SIGHAND and CLONE_INTO_CGROUP (#4502) Android: Add more
    # prctl constants (#4531) FreeBSD Add further TCP stack-related constants (#4196) FreeBSD x86-64: Add
    # mcontext_t.mc_tlsbase (#4503) FreeBSD15: Add kinfo_proc.ki_uerrmsg (#4552) FreeBSD: Add in_conninfo (#4482) FreeBSD: Add
    # xinpgen and related types (#4482) FreeBSD: Add xktls_session (#4482) Haiku: Add functionality from libbsd (#4221) Linux:
    # Add SECBIT_* (#4480) NetBSD, OpenBSD: Export ioctl request generator macros (#4460) NetBSD: Add ptsname_r (#4608)
    # RISCV32: Add time-related syscalls (#4612) Solarish: Add strftime* (#4453) linux: Add EXEC_RESTRICT_* and EXEC_DENY_*
    # (#4545)
    # Changed
    # AIX: Add const to signatures to be consistent with other platforms (#4563)
    # Fixed
    # AIX: Fix the type of struct statvfs.f_fsid (#4576) AIX: Fix the type of constants for the ioctl request argument (#4582)
    # AIX: Fix the types of stat{,64}.st_*tim (#4597) AIX: Use unique errno values (#4507) Build: Fix an incorrect target_os
    # -&gt; target_arch check (#4550) FreeBSD: Fix the type of xktls_session_onedir.ifnet (#4552) Mips64 musl: Fix the type of
    # nlink_t (#4509) Mips64 musl: Use a special MIPS definition of stack_t (#4528) Mips64: Fix SI_TIMER, SI_MESGQ and
    # SI_ASYNCIO definitions (#4529) Musl Mips64: Swap the order of si_errno and si_code in siginfo_t (#4530) Musl Mips64: Use
    # a special MIPS definition of statfs (#4527) Musl: Fix the definition of fanotify_event_metadata (#4510) NetBSD: Correct
    # enum fae_action to be #[repr(C)] (#60a8cfd5) PSP: Correct char -&gt; c_char (eaab4fc3) PowerPC musl: Fix termios
    # definitions (#4518) PowerPC musl: Fix the definition of EDEADLK (#4517) PowerPC musl: Fix the definition of NCCS (#4513)
    # PowerPC musl: Fix the definitions of MAP_LOCKED and MAP_NORESERVE (#4516) PowerPC64 musl: Fix the definition of shmid_ds
    # (#4519)
    # ... (truncated)
    # Commits
    # 84e26e6 Update the lockfile 4d04aee chore: release libc 0.2.175 94a7f32 cleanup: Format a file that was missed 1725273
    # Rename the ctest file from main to ctest e9b021b freebsd adding further TCP stack related constants.  9606a29 freebsd15:
    # Add ki_uerrmsg to struct kinfo_proc 2816bc2 libc-test: include sys/ktls.h on freebsd adfe283 libc-test: Account for
    # xktls_session_onedir::gen (freebsd) 4cc1bf4 freebsd: Document avoidance of reserved name gen 7cdcaa6 freebsd: Fix type
    # of struct xktls_session_onedir, field ifnet Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=libc&package-manager=cargo&pre
    # vious-version=0.2.174&new-version=0.2.175)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-de
    # pendabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
>>> 2025-08-14T06:11:50Z
-https://github.com/servo/servo/pull/38669	(@euclid.ye@huawei.com, #38669)	script: Remove duplicate context menu trigger (#38669)
    # #38584 moves input event handling to new `DocumentEventHandler`, but probably reintroduced some removed code when
    # resolving conflict with #38589.
-https://github.com/servo/servo/pull/38656	(@averyrudelphe@gmail.com, #38656)	mach: remove ubuntu version warning (#38656)
    # Removes the unsupported ubuntu version warning from mach.  Also removes the related version values on the Linux object,
    # as they're not used anywhere else nor are they maintained.
    # Testing: Only removes a warning, no test necessary.  Fixes: #38505.
-https://github.com/servo/servo/pull/38648	(@jdm, #38648)	Enable experimental features in servodriver. (#38648)
    # Applies the change from https://github.com/servo/servo/pull/36335 to the non-default servodriver WPT executor as well.
    # Testing: Tested manually with `--product=servodriver` on the webxr directory.  Part of #34683
-https://github.com/servo/servo/pull/38657	(@simonwuelker, #38657)	fonts: Unify `letter-spacing`/`word-spacing` implementations for harfbuzz and fast path (#38657)
    # Servo two shapers: harfbuzz and a "fast path" for simple cases that don't have kerning or substitution tables.  Both
    # currently implement `letter-spacing` and `word-spacing` seperately.  Theres also a slight difference, harfbuzz will
    # apply word spacing to preserved newlines and the fast path won't.
    # This change unifies the two implementations.
    # Testing: Covered by existing tests
-https://github.com/servo/servo/pull/38662	(@dependabot[bot], @dependabot[bot], #38662)	build(deps): bump clap from 4.5.44 to 4.5.45 (#38662)
    # Bumps [clap](https://github.com/clap-rs/clap) from 4.5.44 to 4.5.45.
    # Release notes Sourced from clap's releases.
    # v4.5.45 [4.5.45] - 2025-08-12 Fixes
    # (unstable-v5) ValueEnum variants now use the full doc comment, not summary, for PossibleValue::help
    # Changelog Sourced from clap's changelog.
    # [4.5.45] - 2025-08-12 Fixes
    # (unstable-v5) ValueEnum variants now use the full doc comment, not summary, for PossibleValue::help
    # Commits
    # 246d972 chore: Release a35a076 docs: Update changelog 9b985a3 Merge pull request #5912 from epage/takes 389fbe8
    # feat(builder): Allow flags to take num_args=0..=1 c395d02 test(parser): Show flag behavior 32c119e refactor(assert): Be
    # more specific than action.takes_values 80ea3e7 fix(assert): Clean up num_args/action assert 2bc0f45 fix(builder): Make
    # ValueRange display independent of usize::MAX a0187c6 test(assert): Verify num_args/action compat a8f9885
    # refactor(builder): Be more explicit in how takes_values is used Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=clap&package-manager=cargo&pre
    # vious-version=4.5.44&new-version=4.5.45)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-depe
    # ndabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38663	(@dependabot[bot], @dependabot[bot], #38663)	build(deps): bump rayon-core from 1.12.1 to 1.13.0 (#38663)
    # Bumps [rayon-core](https://github.com/rayon-rs/rayon) from 1.12.1 to 1.13.0.
    # Changelog Sourced from rayon-core's changelog.
    # Release rayon 1.11.0 / rayon-core 1.13.0 (2025-08-12)
    # The minimum supported rustc is now 1.80.  iter::repeatn has been renamed to iter::repeat_n to match the name stabilized
    # in the standard library.  The old name still exists as a deprecated function for compatibility.  Fixed a bug in
    # in_place_scope when the default global registry uses the current thread, like on WebAssembly without threading support.
    # binary_heap::Iter no longer requires a temporary allocation.  Relaxed trait bounds on many of the public structs.
    # Implemented IntoParallelIterator for Box&lt;[T]&gt; and its references.  Implemented FromParallelIterator&lt;_&gt; for
    # Box&lt;str&gt; via String.
    # Release rayon 1.10.0 (2024-03-23)
    # The new methods ParallelSlice::par_chunk_by and ParallelSliceMut::par_chunk_by_mut work like the slice methods chunk_by
    # and chunk_by_mut added in Rust 1.77.
    # Release rayon 1.9.0 (2024-02-27)
    # The new methods IndexedParallelIterator::by_exponential_blocks and by_uniform_blocks allow processing items in smaller
    # groups at a time.  The new iter::walk_tree, walk_tree_prefix, and walk_tree_postfix functions enable custom parallel
    # iteration over tree-like structures.  The new method ParallelIterator::collect_vec_list returns items as a linked list
    # of vectors, which is an efficient mode of parallel collection used by many of the internal implementations of collect.
    # The new methods ParallelSliceMut::par_split_inclusive_mut, ParallelSlice::par_split_inclusive, and
    # ParallelString::par_split_inclusive all work like a normal split but keeping the separator as part of the left slice.
    # The new ParallelString::par_split_ascii_whitespace splits only on ASCII whitespace, which is faster than including
    # Unicode multi-byte whitespace.  OsString now implements FromParallelIterator&lt;_&gt; and ParallelExtend&lt;_&gt; for a
    # few item types similar to the standard FromIterator and Extend.  The internal Pattern trait for string methods is now
    # implemented for [char; N] and &amp;[char; N], matching any of the given characters.
    # Commits
    # 7af20d7 Merge pull request #1265 from cuviper/release-1.11.0 c86161a Release rayon 1.11.0 / rayon-core 1.13.0 72345cb
    # Merge pull request #1264 from cuviper/mem-prelude b4c58af Merge pull request #1263 from cuviper/boxed 8fdeaf3 Use
    # size_of/size_of_val from the prelude 2a85fbf impl FromParallelIterator\&lt;_&gt; for Box\&lt;str&gt; via String 760a97c
    # impl\&lt;T&gt; IntoParallelIterator for Box\&lt;[T]&gt; and its refs dcea664 Merge pull request #1262 from
    # cuviper/relax-bounds 3d63a87 Relax trait bounds on many structs 0baaff5 Merge pull request #1261 from cuviper/compounds
    # Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=rayon-core&package-manager=car
    # go&previous-version=1.12.1&new-version=1.13.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/abou
    # t-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38660	(@dependabot[bot], @dependabot[bot], #38660)	build(deps): bump syn from 2.0.104 to 2.0.105 (#38660)
    # Bumps [syn](https://github.com/dtolnay/syn) from 2.0.104 to 2.0.105.
    # Release notes Sourced from syn's releases.
    # 2.0.105
    # Disallow &quot;negative&quot; inherent impls like impl !T {} (#1881, rust-lang/rust#144386)
    # Commits
    # 9a8cc49 Release 2.0.105 0f8962b Merge pull request #1881 from dtolnay/negativeinherent 337aeac Reject negative inherent
    # impls 95c5e5a Update test suite to nightly-2025-08-13 20e155a Revert &quot;Pin nightly toolchain used for miri job&quot;
    # bef1da9 Resolve implicit_clone pedantic clippy lint aa9d992 Update test suite to nightly-2025-07-24 3a2005c Update test
    # suite to nightly-2025-07-18 7ee23a7 Update to toml 0.9 6b30c4b Sort tests/common/eq.rs imports Additional commits
    # viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=syn&package-manager=cargo&prev
    # ious-version=2.0.104&new-version=2.0.105)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dep
    # endabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38422	(@gterzian, #38422)	net: Remove `CoreResourceThread` from `FetchThread` state (#38422)
    # In single process mode, there is a race condition on the initialization of the global fetch thread: once initialized the
    # global fetch thread will always use a given core resource thread, and this will be determined by the component who first
    # initializes it.  For example, if the canvas paint thread first does an async fetch, then this will set the public core
    # resource as used for all future fetches, including those coming from a pipeline in private mode.
    # In multi-process mode, there is a race condition per window event-loop: the first pipeline to use the fetch will set the
    # core resource thread for all others.
    # To ensure the fetch thread uses the correct core resource thread(private vs public), we need to pass the core resource
    # thread to each fetch thread operation for which is it needed.
    # Testing: It should not break existing fetch WPT tests.  The race condition is not something that can be tested reliably,
    # but it seems to be based on solid logic.  Fixes: follow-up from
    # https://github.com/servo/servo/pull/38421/files#r2248950924
-https://github.com/servo/servo/pull/38630	(@mrobinson, #38630)	layout: Use the `PseudoElement` from `ServoThreadSafeLayoutNode` in `NodeAndStyleInfo` (#38630)
    # Instead of storing the non-pseudo version of the node in `NodeAndStyleInfo`, store the pseudo version and use that to
    # query the `PseudoElement` that a `NodeAndStyleInfo` refers to.
    # This is a step on the way toward fixing nested pseudo-elements in Servo.
    # Testing: This should not change behavior and is thus covered by existing WPT tests.
-https://github.com/servo/servo/pull/38626	(@mrobinson, @Loirooriol, #38626)	layout: Use `ServoThreadSafeLayoutNode` in more places (#38626)
    # Use `ServoThreadSafeLayoutNode` in more places in layout rather than `ServoLayoutNode`.  The former is meant to be used
    # during layout, but layout 2020 was written against the latter.  In general, this reduces the amount of conversion to the
    # thread-safe version in many places in layout.
    # In addition, an unused iterator from the `script` crate `ServoThreadSafeLayoutNodeChildrenIterator` is replaced with the
    # child iterator from `layout`.  The `layout` version must be directly in `script` now as it uses the dangerous variants
    # of `next_sibling` and `first_child`, which allow encapsulating the unsafe bits into one module.
    # This will ultimately be useful for storing the layout data of pseudo-element children of pseudo-elements properly.
    # Testing: This should not change any behavior and thus is covered by existing tests.
-https://github.com/servo/servo/pull/38614	(@mrobinson, #38614)	Revert "ci: Run devtools tests whenever we run unit tests (#38614)"
    # this patch updates linux.yml, mac.yml, and windows.yml to run the devtools test suite (#36325), whenever unit tests are
    # enabled in those workflows.  plus three changes that speed up the tests from 73 → 65 → 56 → 51 seconds:
    # - we replace the hardcoded sleep(1) after starting servoshell with a loop that waits until the devtools port is open
    # (this also fixes intermittent failures when servoshell starts too slowly, especially on macOS) - we start the internal
    # web servers once, and reuse them across all tests - we run servoshell in headless mode (this is also required because
    # most CI runners have no GUI)
    # finally we fix two bugs that cause very noisy but not very interesting error messages:
    # - in the test code, we use a [context manager](https://docs.python.org/3/reference/datamodel.html#context-managers) to
    # ensure the devtools client is disconnected unconditionally, even if test methods or assert helper methods raise
    # exceptions (this was causing errors on all platforms) - in the devtools server, we treat “connection reset” errors when
    # reading from the client like a normal EOF, rather than as a failure (this was causing errors on Windows)
    # on self-hosted linux builds, there are still spurious error messages like the following, but we can fix them later:
    # ``` error: XDG_RUNTIME_DIR not set in the environment.  libEGL warning: egl: failed to create dri2 screen ```
    # Testing: this patch effectively adds 44 tests to CI Fixes: #36325
-https://github.com/servo/servo/pull/38555	(@dependabot[bot], @dependabot[bot], @schwenderjonathan@gmail.com, #38555)	build(deps): bump the napi-ohos-related group with 4 updates (#38555)
    # Bumps the napi-ohos-related group with 4 updates: [napi-derive-ohos](https://github.com/ohos-rs/ohos-rs),
    # [napi-ohos](https://github.com/ohos-rs/ohos-rs), [napi-derive-backend-ohos](https://github.com/ohos-rs/ohos-rs) and
    # [napi-sys-ohos](https://github.com/ohos-rs/ohos-rs).
    # Updates `napi-derive-ohos` from 1.0.4 to 1.1.0
    # Commits
    # eaba5da Merge pull request #139 from ohos-rs/feat-0719 165538b fix: lint warning 19530e3 Bump version ed8d46d Merge
    # branch 'main' into feat-0719 7c3dc96 perf(napi): optimize HashMap allocation in FromNapiValue implementation for H...
    # 06a48c5 Merge branch 'main' into feat-0719 9f0dc58 chore(release): publish cf6d8b0 fix(cli): rename options (#2804)
    # 5816924 chore(release): publish c6cf127 chore(cli): upgrade all NAPI-RS projects (#2803) Additional commits viewable in
    # compare view
    # Updates `napi-ohos` from 1.0.4 to 1.1.0
    # Commits
    # eaba5da Merge pull request #139 from ohos-rs/feat-0719 165538b fix: lint warning 19530e3 Bump version ed8d46d Merge
    # branch 'main' into feat-0719 7c3dc96 perf(napi): optimize HashMap allocation in FromNapiValue implementation for H...
    # 06a48c5 Merge branch 'main' into feat-0719 9f0dc58 chore(release): publish cf6d8b0 fix(cli): rename options (#2804)
    # 5816924 chore(release): publish c6cf127 chore(cli): upgrade all NAPI-RS projects (#2803) Additional commits viewable in
    # compare view
    # Updates `napi-derive-backend-ohos` from 1.0.4 to 1.1.0
    # Commits
    # eaba5da Merge pull request #139 from ohos-rs/feat-0719 165538b fix: lint warning 19530e3 Bump version ed8d46d Merge
    # branch 'main' into feat-0719 7c3dc96 perf(napi): optimize HashMap allocation in FromNapiValue implementation for H...
    # 06a48c5 Merge branch 'main' into feat-0719 9f0dc58 chore(release): publish cf6d8b0 fix(cli): rename options (#2804)
    # 5816924 chore(release): publish c6cf127 chore(cli): upgrade all NAPI-RS projects (#2803) Additional commits viewable in
    # compare view
    # Updates `napi-sys-ohos` from 1.0.4 to 1.1.0
    # Release notes Sourced from napi-sys-ohos's releases.
    # ohrs@1.1.0 What's Changed
    # feat: allow build and artifact skip libs logic by @​richerfu in ohos-rs/ohos-rs#119 fix: remove ArkRuntime Send and Sync
    # implenment by @​richerfu in ohos-rs/ohos-rs#120 feat 0306 by @​richerfu in ohos-rs/ohos-rs#121 feat: add export default
    # for template by @​richerfu in ohos-rs/ohos-rs#128 fix: should ignore some path and convert path to absolute path by
    # @​richerfu in ohos-rs/ohos-rs#129 Merge code by @​richerfu in ohos-rs/ohos-rs#133 feat: add vscode setting by default by
    # @​richerfu in ohos-rs/ohos-rs#134 feat(cli): support dtsCache flag by @​richerfu in ohos-rs/ohos-rs#135 feat: Sync
    # napi-rs by @​richerfu in ohos-rs/ohos-rs#139
    # Full Changelog: https://github.com/ohos-rs/ohos-rs/compare/ohrs@1.0.4...ohrs@1.1.0
    # Commits
    # eaba5da Merge pull request #139 from ohos-rs/feat-0719 165538b fix: lint warning 19530e3 Bump version ed8d46d Merge
    # branch 'main' into feat-0719 7c3dc96 perf(napi): optimize HashMap allocation in FromNapiValue implementation for H...
    # 06a48c5 Merge branch 'main' into feat-0719 9f0dc58 chore(release): publish cf6d8b0 fix(cli): rename options (#2804)
    # 5816924 chore(release): publish c6cf127 chore(cli): upgrade all NAPI-RS projects (#2803) Additional commits viewable in
    # compare view
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38650	(@jschwe, #38650)	build(deps): bump nix from 0.29.0 to 0.30.1 (#38650)
    # Bumps [nix](https://github.com/nix-rust/nix) from 0.29.0 to 0.30.1.  -
    # [Changelog](https://github.com/nix-rust/nix/blob/master/CHANGELOG.md) -
    # [Commits](https://github.com/nix-rust/nix/compare/v0.29.0...v0.30.1)
    # Closes: #38145 Testing: Covered by existing tests
-https://github.com/servo/servo/pull/38584	(@mrobinson, #38584)	script: Move the majority of the input event handling code to `DocumentEventHandler` (#38584)
    # This moves the majority of the input event handler code to the `DocumentEventHandler` helper structure.  It better
    # encapsulates event handling, hiding most of the details from both `ScriptThread` and `Document`.  The benefit here is
    # that the majority of the functions can become private and `Document` is over 1000 lines shorter.
    # Testing: This should not change any behavior so is covered by existing WPT tests.
-https://github.com/servo/servo/pull/38615	(@jdm, #38615)	script_bindings: Assert that serializable/transferable types have accurate WebIDL annotations (#38615)
    # These changes add compile-time assertions that: * any type that implements the Serializable/Transferable trait has a
    # `[Serializable]` or `[Transferable]` annotation in the interface WebIDL * any WebIDL interface with the `[Serializable]`
    # or `[Transferable]` annotation implements the corresponding trait
    # This is useful because it means that WebIDL definitions will be less confusing if you're trying to figure out whether
    # Servo supports serializing/transferring a particular interface type.  It also makes fixing #21715 in the future a little
    # bit easier, because the annotations will remain up to date.
    # Testing: compile-time only; no point in writing tests for this since it involves webidl codegen.
-https://github.com/servo/servo/pull/38635	(@dependabot[bot], @dependabot[bot], #38635)	build(deps): bump anyhow from 1.0.98 to 1.0.99 (#38635)
    # Bumps [anyhow](https://github.com/dtolnay/anyhow) from 1.0.98 to 1.0.99.
    # Commits
    # f2b963a Release 1.0.99 2c64c15 Merge pull request #420 from dtolnay/enotempty 8cf66f7 Allow build-script cleanup failure
    # with NFSv3 output directory to be non-fatal f5e145c Revert &quot;Pin nightly toolchain used for miri job&quot; 1d7ef1d
    # Update ui test suite to nightly-2025-06-30 6929572 Update ui test suite to nightly-2025-06-18 37224e3 Ignore
    # mismatched_lifetime_syntaxes lint 11f0e81 Pin nightly toolchain used for miri job d04c999 Raise required compiler for
    # backtrace feature to rust 1.82 219d163 Update test suite to nightly-2025-05-01 See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=anyhow&package-manager=cargo&p
    # revious-version=1.0.98&new-version=1.0.99)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-de
    # pendabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
>>> 2025-08-15T06:07:25Z
+https://github.com/servo/servo/pull/38622	(@longvatrong111, #38622)	webdriver: Implement the "Get Window Handles" command (#38622)
    webdriver
    # Implment get window handles according to [spec](https://w3c.github.io/webdriver/#dfn-window-handles).  - Window handles
    # are supposed to identify `browsing context`.  However, based on `get window handle command` and `get window handles
    # command`, we only need to care about top level browsing context.  - Back then, we use a random generated uuid for eacch
    # webview id, it is not correct but still work because all commands depend on `webview id` and `browsing context id`.  The
    # only case we need window handle is is when webdriver gets window object with js script.  Since the object is converted
    # to the id of window's document node, `get window handle` should return the same thing.
    # Action run (with updated expectation): https://github.com/longvatrong111/servo/actions/runs/16957610535
    # https://github.com/longvatrong111/servo/actions/runs/16957612027
    # Some tests may sporadically timeout due to unstable hit test.
    # cc: @xiaochengh
+https://github.com/servo/servo/pull/38671	(@euclid.ye@huawei.com, #38671)	script: Stop handling native `mousedown` and `mouseup` for disabled elements (#38671)
    dom
    # According to spec of [hit-test](https://w3c.github.io/uievents/#hit-test) for native mouse event, mousedown/mouseup
    # should also be excluded when interacting with disabled element, even tho it may be the frontmost of
    # [elementFromPoint](https://drafts.csswg.org/cssom-view/#dom-document-elementfrompoint).
    # Testing: Now it matches the behaviour of other browsers in #38670 for disabled element.  Also testdriver test:
    # `tests\wpt\tests\html\semantics\disabled-elements\disabled-event-dispatch.tentative.html` has 4 more passing tests.
    # Fixes: Part of #38670.
-https://github.com/servo/servo/pull/38686	(@dependabot[bot], @dependabot[bot], #38686)	build(deps): bump rayon from 1.10.0 to 1.11.0 (#38686)
    # Bumps [rayon](https://github.com/rayon-rs/rayon) from 1.10.0 to 1.11.0.
    # Changelog Sourced from rayon's changelog.
    # Release rayon 1.11.0 / rayon-core 1.13.0 (2025-08-12)
    # The minimum supported rustc is now 1.80.  iter::repeatn has been renamed to iter::repeat_n to match the name stabilized
    # in the standard library.  The old name still exists as a deprecated function for compatibility.  Fixed a bug in
    # in_place_scope when the default global registry uses the current thread, like on WebAssembly without threading support.
    # binary_heap::Iter no longer requires a temporary allocation.  Relaxed trait bounds on many of the public structs.
    # Implemented IntoParallelIterator for Box&lt;[T]&gt; and its references.  Implemented FromParallelIterator&lt;_&gt; for
    # Box&lt;str&gt; via String.
    # Commits
    # 6236214 Merge #1031 652f111 Release rayon 1.7.0 and rayon-core 1.11.0 7df001d Tweak plumbing consumer description
    # 322dfe8 Merge #1026 099241d Merge #1030 a17bcb9 Fix inappropriate use of slice::as_mut_ptr 98077fe Be more cautious
    # about drain drops 7069695 Merge #1028 874ff73 Fix docs for the yield None case on ThreadPool 58f7b7e Be careful
    # comparing job_ref.execute_fn Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=rayon&package-manager=cargo&pr
    # evious-version=1.10.0&new-version=1.11.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dep
    # endabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38689	(@sebsebmc@gmail.com, #38689)	tests: Reintroduce CookieStore WPT test expectations (#38689)
    # CookieStore spec graduated from WICG and the test suite in WPT got renamed to `cookiestore` from `cookie-store`.  This
    # readds the baseline CookieStore expectations in preparation for landing an implementation.
    # Testing: Reenables tests and readds expectations that were removed.
-https://github.com/servo/servo/pull/38687	(@jschwe, #38687)	base: Remove last usage of static_assertions crate (#38687)
    # Replace static_assertions in the `size_of_test` macro with `const assert`s.  The error message is still informative.
    # Additionally also remove the `cfg` guard, which caused the assertion to only be enabled on 64 bit platforms, which is
    # something one would not expect given the name `size_of_test` of the macro.  `cargo tree -i static_assertions` now points
    # to only `stylo` using `static_assertions`, so we should be able to remove this dependency fairly easy, since the macro
    # doesn't seem to be used there either at first glance.
    # Testing: Covered by existing tests.
-https://github.com/servo/servo/pull/38636	(@jschwe, @mrobinson, #38636)	base: Allow sending GenericReceiver (#38636)
    # Implement Serialize and Deserialize for GenericReceiver to also allow the Receiver to be sent across ipc channels.  This
    # is necessary to allow using the GenericChannel in more places.
    # Testing: Manually tested on follow-up feature branch.  Does not require new tests.
+https://github.com/servo/servo/pull/38507	(@menonrahul02@gmail.com, #38507)	script: Implement QuotaExceededError WebIDL interface (#38507)
    dom
    # Implements the new WebIDL interface for QuotaExceededError and uses it in appropriate places.
    # Testing: WPT tests.  Now passing many more in `tests/wpt/tests/WebCryptoAPI/getRandomValues.any.js` and
    # `tests/wpt/tests/webstorage/storage_session_setitem_quotaexceedederr.window.js`.  Fixes: #38489
+https://github.com/servo/servo/pull/38666	(@jschwe, #38666)	mozjs: Remove unneeded icu_capi features (#38666)
    performance
    # Reduces the binary size by around 16 MiB (ohos-production-stripped, 74M vs 100M).
    # Testing: try run: https://github.com/jschwe/servo/actions/runs/16968926330/job/48103382790
+https://github.com/servo/servo/pull/38570	(@simonwuelker, #38570)	layout: Set color and text decoration on `<select>` elements by default (#38570)
    layout
    # This makes the default style for `` elements match that of gecko
    # (https://searchfox.org/mozilla-central/rev/a1f4cb9fc03d81be41ca2ba81294592df784364d/layout/style/res/forms.css#217-243),
    # with some small modifications because servo does not have fancy things like `color: -moz-ComboboxText;`.
    # Testing: Includes a new web platform test Fixes: https://github.com/servo/servo/issues/37895
+https://github.com/servo/servo/pull/38678	(@mrobinson, @Loirooriol, #38678)	layout: Support storing layout data for two-level nested pseudo-elements (#38678)
    layout
    # Add basic support for storing layout data for pseudo-elements nested to up to two levels.  This removes the last
    # unstored layout result and fixes a double-borrow issue.  This change does not add properly parsing nor styling of these
    # element types, but does prepare for those changes which must come from stylo.
    # Testing: This fixes a intermittent panic in `tests/wpt/tests/css/css-lists/nested-marker-styling.html` Fixes: #38177.
    # Closes: #38183.
+https://github.com/servo/servo/pull/38682	(@simonwuelker, #38682)	script: Implement `CSS.registerProperty` (#38682)
    css
    # The implementation is mostly equivalent to
    # https://searchfox.org/mozilla-central/source/servo/ports/geckolib/glue.rs#9480.
    # Testing: New web platform tests start to pass
+https://github.com/servo/servo/pull/38677	(@simonwuelker, #38677)	script: Always throw when trying to `setProperty` on a readonly style `CSSStyleDeclaration` (#38677)
    dom
    # Previously, [`SetProperty`](https://drafts.csswg.org/cssom/#dom-cssstyledeclaration-setproperty) implemented step 3
    # before calling into the inner `set_property` method, which implements step 1.  Therefore if step 3 returned then step 1
    # never runs, and can't throw an exception.
    # Testing: A new web platform test starts to pass
+https://github.com/servo/servo/pull/38599	(@averyrudelphe@gmail.com, #38599)	script: Strip `javascript` URL scheme using `Position::AfterScheme` rather than `Position::BeforePath` (#38599)
    dom
    # This makes the initial split match step 2 of
    # https://html.spec.whatwg.org/multipage/browsing-the-web.html#evaluate-a-javascript%3A-url.
    # Testing: Covered by WPT tests.  Fixes: #38547
+https://github.com/servo/servo/pull/38664	(@gterzian, #38664)	script: check if the canvas is paintable before measuring text (#38664)
    stability
    # The `Canvas2dMsg::MeasureText` is dropped inside `send_canvas_2d_msg` if the canvas is not paintable, leading to a panic
    # on the receiving end.  Checking the paint-ability before sending the message prevents this panic, and if the canvas is
    # not pain-table, a default text metrics is used.
    # Testing: Manual testing of the minimal test case in the associated issue, and crash test added.  Fixes:
    # https://github.com/servo/servo/issues/36845
-https://github.com/servo/servo/pull/38681	(@sagudev, #38681)	chore: Pin cargo-deny to 0.18.3 (#38681)
    # cargo-deny@0.18.4 requires Rust 1.88
    # Testing: Fixes CI.
-https://github.com/servo/servo/pull/38531	(@jerensl, #38531)	mach: Enable ANN rules (type annotations) for ruff Python linter (#38531)
    # This changes will introduce [flake8-annotations (ANN)](https://docs.astral.sh/ruff/rules/#flake8-annotations-ann) for
    # python type annotation, this will make all thing related to function strictly typed in python
    # This rule will start to affected this directory from now: - /python -> Root directory - /python/tidy - /python/wpt
    # Testing: `./mach test-tidy` Fixes: Not related to any issues
-https://github.com/servo/servo/pull/38661	(@TimothyElems, @timmy@Timmys-Mac-mini.local, @jschwe, #38661)	bencher cli flags rename (#38661)
    # Renames `--branch-start-point`, `--branch-start-point-hash`, and `--branch-reset`, in favor of `--start-point`,
    # `--start-point-hash`, and `--start-point-reset`, according to [Bencher's
    # Docs](https://bencher.dev/docs/reference/changelog/#v0421).
    # Fixes: #38501
-https://github.com/servo/servo/pull/38638	(@jschwe, #38638)	opts: Use OnceLock for Options (#38638)
    # Currently, the options are only initialized once and then never changed.  Making this explicit allows optimizing
    # accesses, e.g.  caching opt values.  For some options like `multiprocess` it is obvious that we would never want to
    # support changing the value at runtime, however there are other options where it could be conceivable that we want to
    # change them at runtime.  However, imho such options might be better suited to put into a different datastructure, so
    # that it is explicit which options can be changed at runtime, and which are fixed.
    # Testing: Covered by existing tests (and manually running servo in multiprocess mode).
>>> 2025-08-16T06:02:41Z
-https://github.com/servo/servo/pull/38281	(@arihant2math@gmail.com, #38281)	net: Fix possible indexeddb key range singleton related panic (#38281)
    # If `.as_singleton()` was called on a range that had both lower and upper set as `None`, it would have panicked.
    # Testing: Nothing seems to have changed Fixes: #37647
-https://github.com/servo/servo/pull/38706	(@servo-wpt-sync, #38706)	Sync WPT with upstream (16-08-2025) (#38706)
    # Automated downstream sync of changes from upstream as of 16-08-2025 [no-wpt-sync]
-https://github.com/servo/servo/pull/38703	(@sagudev, #38703)	compositing: Use `webrender_api::ExternalImageSource` instead of `WebRenderImageSource` (#38703)
    # There is no reason to roll our own type.
    # Motivation: I need `ExternalImageSource::Invalid`.
    # Testing: Covered by existing WPT tests, but it's just refactor
+https://github.com/servo/servo/pull/38700	(@TimvdLippe, #38700)	Implement trusted types for setAttribute (#38700)
    dom
    # Callers now call `set_attribute` directly, to avoid the trusted types machinery, as well as skip validation.  That's not
    # required by spec as well.
    # This implements part of the DOM integration from https://github.com/whatwg/dom/pull/1268
    # Part of #36258
-https://github.com/servo/servo/pull/38702	(@dependabot[bot], @dependabot[bot], #38702)	build(deps): bump async-trait from 0.1.88 to 0.1.89 (#38702)
    # Bumps [async-trait](https://github.com/dtolnay/async-trait) from 0.1.88 to 0.1.89.
    # Release notes Sourced from async-trait's releases.
    # 0.1.89
    # Improve IDE functionality (#293, thanks @​Veykril)
    # Commits
    # a7e91e9 Release 0.1.89 fbcfcac Merge pull request 293 from Veykril/lw/quote_spanned fd93990 Improve use of spans in
    # quote_spanned a5093fe Add type-mismatch ui test 6d12b44 Revert &quot;Pin nightly toolchain used for miri job&quot;
    # dd9e4ba Hide unused_variables warning in consider-restricting.rs ui test b454fc8 Update ui test suite to
    # nightly-2025-08-03 9c880e8 Update ui test suite to nightly-2025-07-30 7ca751d Ignore unused_parens warning in test
    # 2bccfeb Update ui test suite to nightly-2025-05-28 Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=async-trait&package-manager=ca
    # rgo&previous-version=0.1.88&new-version=0.1.89)](https://docs.github.com/en/github/managing-security-vulnerabilities/abo
    # ut-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38701	(@dependabot[bot], @dependabot[bot], #38701)	build(deps): bump the egui-related group with 7 updates (#38701)
    # Bumps the egui-related group with 7 updates:
    # | Package | From | To | | --- | --- | --- | | [egui](https://github.com/emilk/egui) | `0.32.0` | `0.32.1` | |
    # [egui-winit](https://github.com/emilk/egui) | `0.32.0` | `0.32.1` | | [egui_glow](https://github.com/emilk/egui) |
    # `0.32.0` | `0.32.1` | | [ecolor](https://github.com/emilk/egui) | `0.32.0` | `0.32.1` | |
    # [emath](https://github.com/emilk/egui) | `0.32.0` | `0.32.1` | | [epaint](https://github.com/emilk/egui) | `0.32.0` |
    # `0.32.1` | | [epaint_default_fonts](https://github.com/emilk/egui) | `0.32.0` | `0.32.1` |
    # Updates `egui` from 0.32.0 to 0.32.1
    # Release notes Sourced from egui's releases.
    # 0.32.1 - Misc bug fixes egui is an easy-to-use immediate mode GUI for Rust that runs on both web and native.  Try it
    # now: https://www.egui.rs/ egui development is sponsored by Rerun, a startup building an SDK for visualizing streams of
    # multimodal data.  egui changelog
    #  Added
    # Add ComboBox::popup_style #7360 by @​lucasmerlin
    # 🐛 Fixed
    # Fix glyph rendering: clamp coverage to [0, 1] #7415 by @​emilk Fix manual Popup not closing #7383 by @​lucasmerlin Fix
    # WidgetText::Text ignoring fallback font and overrides #7361 by @​lucasmerlin Fix override_text_color priority #7439 by
    # @​YgorSouza Fix debug-panic in ScrollArea if contents fit without scrolling #7440 by @​YgorSouza
    # eframe changelog
    # Enable wgpu default features in eframe / egui_wgpu default features #7344 by @​lucasmerlin Request a redraw when the url
    # change through the popstate event listener #7403 by @​irevoire
    # egui_kittest changelog
    # Fix UPDATE_SNAPSHOTS: only update if we didn't pass the test #7455 by @​emilk
    # Changelog Sourced from egui's changelog.
    # 0.32.1 - 2025-08-15 - Misc bug fixes
    #  Added
    # Add ComboBox::popup_style #7360 by @​lucasmerlin
    # 🐛 Fixed
    # Fix glyph rendering: clamp coverage to [0, 1] #7415 by @​emilk Fix manual Popup not closing #7383 by @​lucasmerlin Fix
    # WidgetText::Text ignoring fallback font and overrides #7361 by @​lucasmerlin Fix override_text_color priority #7439 by
    # @​YgorSouza Fix debug-panic in ScrollArea if contents fit without scrolling #7440 by @​YgorSouza
    # Commits
    # 707a339 Bump version numbers to 0.32.1 ead6926 Update changelogs 03fb443 Only update snapshot if we didn't pass (#7455)
    # d739a4b Request a redraw when the url change through the popstate event listener (#...  b732992 Fix debug-panic in
    # ScrollArea if contents fit without scrolling (#7440) 7036d6a Fix override_text_color priority (#7439) 97fe124 Fix
    # WidgetText::Text ignoring fallback font and overrides (#7361) 4fcd1d1 Update to winit 0.30.12 (#7420) 1ad374f Fix manual
    # Popup not closing (#7383) 1afbb97 Add ComboBox::popup_style (#7360) Additional commits viewable in compare view
    # Updates `egui-winit` from 0.32.0 to 0.32.1
    # Release notes Sourced from egui-winit's releases.
    # 0.32.1 - Misc bug fixes egui is an easy-to-use immediate mode GUI for Rust that runs on both web and native.  Try it
    # now: https://www.egui.rs/ egui development is sponsored by Rerun, a startup building an SDK for visualizing streams of
    # multimodal data.  egui changelog
    #  Added
    # Add ComboBox::popup_style #7360 by @​lucasmerlin
    # 🐛 Fixed
    # Fix glyph rendering: clamp coverage to [0, 1] #7415 by @​emilk Fix manual Popup not closing #7383 by @​lucasmerlin Fix
    # WidgetText::Text ignoring fallback font and overrides #7361 by @​lucasmerlin Fix override_text_color priority #7439 by
    # @​YgorSouza Fix debug-panic in ScrollArea if contents fit without scrolling #7440 by @​YgorSouza
    # eframe changelog
    # Enable wgpu default features in eframe / egui_wgpu default features #7344 by @​lucasmerlin Request a redraw when the url
    # change through the popstate event listener #7403 by @​irevoire
    # egui_kittest changelog
    # Fix UPDATE_SNAPSHOTS: only update if we didn't pass the test #7455 by @​emilk
    # Changelog Sourced from egui-winit's changelog.
    # 0.32.1 - 2025-08-15 - Misc bug fixes
    #  Added
    # Add ComboBox::popup_style #7360 by @​lucasmerlin
    # 🐛 Fixed
    # Fix glyph rendering: clamp coverage to [0, 1] #7415 by @​emilk Fix manual Popup not closing #7383 by @​lucasmerlin Fix
    # WidgetText::Text ignoring fallback font and overrides #7361 by @​lucasmerlin Fix override_text_color priority #7439 by
    # @​YgorSouza Fix debug-panic in ScrollArea if contents fit without scrolling #7440 by @​YgorSouza
    # Commits
    # ead6926 Update changelogs 03fb443 Only update snapshot if we didn't pass (#7455) d739a4b Request a redraw when the url
    # change through the popstate event listener (#...  b732992 Fix debug-panic in ScrollArea if contents fit without
    # scrolling (#7440) 7036d6a Fix override_text_color priority (#7439) 97fe124 Fix WidgetText::Text ignoring fallback font
    # and overrides (#7361) 1ad374f Fix manual Popup not closing (#7383) 1afbb97 Add ComboBox::popup_style (#7360) 85c4b1d Fix
    # glyph rendering: clamp coverage to [0, 1] (#7415) 2f7bcf2 Fix multi-line TextShape rotation (#7404) Additional commits
    # viewable in compare view
    # Updates `egui_glow` from 0.32.0 to 0.32.1
    # Release notes Sourced from egui_glow's releases.
    # 0.32.1 - Misc bug fixes egui is an easy-to-use immediate mode GUI for Rust that runs on both web and native.  Try it
    # now: https://www.egui.rs/ egui development is sponsored by Rerun, a startup building an SDK for visualizing streams of
    # multimodal data.  egui changelog
    #  Added
    # Add ComboBox::popup_style #7360 by @​lucasmerlin
    # 🐛 Fixed
    # Fix glyph rendering: clamp coverage to [0, 1] #7415 by @​emilk Fix manual Popup not closing #7383 by @​lucasmerlin Fix
    # WidgetText::Text ignoring fallback font and overrides #7361 by @​lucasmerlin Fix override_text_color priority #7439 by
    # @​YgorSouza Fix debug-panic in ScrollArea if contents fit without scrolling #7440 by @​YgorSouza
    # eframe changelog
    # Enable wgpu default features in eframe / egui_wgpu default features #7344 by @​lucasmerlin Request a redraw when the url
    # change through the popstate event listener #7403 by @​irevoire
    # egui_kittest changelog
    # Fix UPDATE_SNAPSHOTS: only update if we didn't pass the test #7455 by @​emilk
    # Changelog Sourced from egui_glow's changelog.
    # 0.32.1 - 2025-08-15 - Misc bug fixes
    #  Added
    # Add ComboBox::popup_style #7360 by @​lucasmerlin
    # 🐛 Fixed
    # Fix glyph rendering: clamp coverage to [0, 1] #7415 by @​emilk Fix manual Popup not closing #7383 by @​lucasmerlin Fix
    # WidgetText::Text ignoring fallback font and overrides #7361 by @​lucasmerlin Fix override_text_color priority #7439 by
    # @​YgorSouza Fix debug-panic in ScrollArea if contents fit without scrolling #7440 by @​YgorSouza
    # Commits
    # ead6926 Update changelogs 03fb443 Only update snapshot if we didn't pass (#7455) d739a4b Request a redraw when the url
    # change through the popstate event listener (#...  b732992 Fix debug-panic in ScrollArea if contents fit without
    # scrolling (#7440) 7036d6a Fix override_text_color priority (#7439) 97fe124 Fix WidgetText::Text ignoring fallback font
    # and overrides (#7361) 1ad374f Fix manual Popup not closing (#7383) 1afbb97 Add ComboBox::popup_style (#7360) 85c4b1d Fix
    # glyph rendering: clamp coverage to [0, 1] (#7415) 2f7bcf2 Fix multi-line TextShape rotation (#7404) Additional commits
    # viewable in compare view
    # Updates `ecolor` from 0.32.0 to 0.32.1
    # Release notes Sourced from ecolor's releases.
    # 0.32.1 - Misc bug fixes egui is an easy-to-use immediate mode GUI for Rust that runs on both web and native.  Try it
    # now: https://www.egui.rs/ egui development is sponsored by Rerun, a startup building an SDK for visualizing streams of
    # multimodal data.  egui changelog
    #  Added
    # Add ComboBox::popup_style #7360 by @​lucasmerlin
    # 🐛 Fixed
    # Fix glyph rendering: clamp coverage to [0, 1] #7415 by @​emilk Fix manual Popup not closing #7383 by @​lucasmerlin Fix
    # WidgetText::Text ignoring fallback font and overrides #7361 by @​lucasmerlin Fix override_text_color priority #7439 by
    # @​YgorSouza Fix debug-panic in ScrollArea if contents fit without scrolling #7440 by @​YgorSouza
    # eframe changelog
    # Enable wgpu default features in eframe / egui_wgpu default features #7344 by @​lucasmerlin Request a redraw when the url
    # change through the popstate event listener #7403 by @​irevoire
    # egui_kittest changelog
    # Fix UPDATE_SNAPSHOTS: only update if we didn't pass the test #7455 by @​emilk
    # Changelog Sourced from ecolor's changelog.
    # 0.32.1 - 2025-08-15 - Misc bug fixes
    #  Added
    # Add ComboBox::popup_style #7360 by @​lucasmerlin
    # 🐛 Fixed
    # Fix glyph rendering: clamp coverage to [0, 1] #7415 by @​emilk Fix manual Popup not closing #7383 by @​lucasmerlin Fix
    # WidgetText::Text ignoring fallback font and overrides #7361 by @​lucasmerlin Fix override_text_color priority #7439 by
    # @​YgorSouza Fix debug-panic in ScrollArea if contents fit without scrolling #7440 by @​YgorSouza
    # Commits
    # 707a339 Bump version numbers to 0.32.1 ead6926 Update changelogs 03fb443 Only update snapshot if we didn't pass (#7455)
    # d739a4b Request a redraw when the url change through the popstate event listener (#...  b732992 Fix debug-panic in
    # ScrollArea if contents fit without scrolling (#7440) 7036d6a Fix override_text_color priority (#7439) 97fe124 Fix
    # WidgetText::Text ignoring fallback font and overrides (#7361) 4fcd1d1 Update to winit 0.30.12 (#7420) 1ad374f Fix manual
    # Popup not closing (#7383) 1afbb97 Add ComboBox::popup_style (#7360) Additional commits viewable in compare view
    # Updates `emath` from 0.32.0 to 0.32.1
    # Release notes Sourced from emath's releases.
    # 0.32.1 - Misc bug fixes egui is an easy-to-use immediate mode GUI for Rust that runs on both web and native.  Try it
    # now: https://www.egui.rs/ egui development is sponsored by Rerun, a startup building an SDK for visualizing streams of
    # multimodal data.  egui changelog
    #  Added
    # Add ComboBox::popup_style #7360 by @​lucasmerlin
    # 🐛 Fixed
    # Fix glyph rendering: clamp coverage to [0, 1] #7415 by @​emilk Fix manual Popup not closing #7383 by @​lucasmerlin Fix
    # WidgetText::Text ignoring fallback font and overrides #7361 by @​lucasmerlin Fix override_text_color priority #7439 by
    # @​YgorSouza Fix debug-panic in ScrollArea if contents fit without scrolling #7440 by @​YgorSouza
    # eframe changelog
    # Enable wgpu default features in eframe / egui_wgpu default features #7344 by @​lucasmerlin Request a redraw when the url
    # change through the popstate event listener #7403 by @​irevoire
    # egui_kittest changelog
    # Fix UPDATE_SNAPSHOTS: only update if we didn't pass the test #7455 by @​emilk
    # Changelog Sourced from emath's changelog.
    # 0.32.1 - 2025-08-15 - Misc bug fixes
    #  Added
    # Add ComboBox::popup_style #7360 by @​lucasmerlin
    # 🐛 Fixed
    # Fix glyph rendering: clamp coverage to [0, 1] #7415 by @​emilk Fix manual Popup not closing #7383 by @​lucasmerlin Fix
    # WidgetText::Text ignoring fallback font and overrides #7361 by @​lucasmerlin Fix override_text_color priority #7439 by
    # @​YgorSouza Fix debug-panic in ScrollArea if contents fit without scrolling #7440 by @​YgorSouza
    # Commits
    # ead6926 Update changelogs 03fb443 Only update snapshot if we didn't pass (#7455) d739a4b Request a redraw when the url
    # change through the popstate event listener (#...  b732992 Fix debug-panic in ScrollArea if contents fit without
    # scrolling (#7440) 7036d6a Fix override_text_color priority (#7439) 97fe124 Fix WidgetText::Text ignoring fallback font
    # and overrides (#7361) 1ad374f Fix manual Popup not closing (#7383) 1afbb97 Add ComboBox::popup_style (#7360) 85c4b1d Fix
    # glyph rendering: clamp coverage to [0, 1] (#7415) 2f7bcf2 Fix multi-line TextShape rotation (#7404) Additional commits
    # viewable in compare view
    # Updates `epaint` from 0.32.0 to 0.32.1
    # Release notes Sourced from epaint's releases.
    # 0.32.1 - Misc bug fixes egui is an easy-to-use immediate mode GUI for Rust that runs on both web and native.  Try it
    # now: https://www.egui.rs/ egui development is sponsored by Rerun, a startup building an SDK for visualizing streams of
    # multimodal data.  egui changelog
    #  Added
    # Add ComboBox::popup_style #7360 by @​lucasmerlin
    # 🐛 Fixed
    # Fix glyph rendering: clamp coverage to [0, 1] #7415 by @​emilk Fix manual Popup not closing #7383 by @​lucasmerlin Fix
    # WidgetText::Text ignoring fallback font and overrides #7361 by @​lucasmerlin Fix override_text_color priority #7439 by
    # @​YgorSouza Fix debug-panic in ScrollArea if contents fit without scrolling #7440 by @​YgorSouza
    # eframe changelog
    # Enable wgpu default features in eframe / egui_wgpu default features #7344 by @​lucasmerlin Request a redraw when the url
    # change through the popstate event listener #7403 by @​irevoire
    # egui_kittest changelog
    # Fix UPDATE_SNAPSHOTS: only update if we didn't pass the test #7455 by @​emilk
    # Changelog Sourced from epaint's changelog.
    # 0.32.1 - 2025-08-15 - Misc bug fixes
    #  Added
    # Add ComboBox::popup_style #7360 by @​lucasmerlin
    # 🐛 Fixed
    # Fix glyph rendering: clamp coverage to [0, 1] #7415 by @​emilk Fix manual Popup not closing #7383 by @​lucasmerlin Fix
    # WidgetText::Text ignoring fallback font and overrides #7361 by @​lucasmerlin Fix override_text_color priority #7439 by
    # @​YgorSouza Fix debug-panic in ScrollArea if contents fit without scrolling #7440 by @​YgorSouza
    # Commits
    # ead6926 Update changelogs 03fb443 Only update snapshot if we didn't pass (#7455) d739a4b Request a redraw when the url
    # change through the popstate event listener (#...  b732992 Fix debug-panic in ScrollArea if contents fit without
    # scrolling (#7440) 7036d6a Fix override_text_color priority (#7439) 97fe124 Fix WidgetText::Text ignoring fallback font
    # and overrides (#7361) 1ad374f Fix manual Popup not closing (#7383) 1afbb97 Add ComboBox::popup_style (#7360) 85c4b1d Fix
    # glyph rendering: clamp coverage to [0, 1] (#7415) 2f7bcf2 Fix multi-line TextShape rotation (#7404) Additional commits
    # viewable in compare view
    # Updates `epaint_default_fonts` from 0.32.0 to 0.32.1
    # Release notes Sourced from epaint_default_fonts's releases.
    # 0.32.1 - Misc bug fixes egui is an easy-to-use immediate mode GUI for Rust that runs on both web and native.  Try it
    # now: https://www.egui.rs/ egui development is sponsored by Rerun, a startup building an SDK for visualizing streams of
    # multimodal data.  egui changelog
    #  Added
    # Add ComboBox::popup_style #7360 by @​lucasmerlin
    # 🐛 Fixed
    # Fix glyph rendering: clamp coverage to [0, 1] #7415 by @​emilk Fix manual Popup not closing #7383 by @​lucasmerlin Fix
    # WidgetText::Text ignoring fallback font and overrides #7361 by @​lucasmerlin Fix override_text_color priority #7439 by
    # @​YgorSouza Fix debug-panic in ScrollArea if contents fit without scrolling #7440 by @​YgorSouza
    # eframe changelog
    # Enable wgpu default features in eframe / egui_wgpu default features #7344 by @​lucasmerlin Request a redraw when the url
    # change through the popstate event listener #7403 by @​irevoire
    # egui_kittest changelog
    # Fix UPDATE_SNAPSHOTS: only update if we didn't pass the test #7455 by @​emilk
    # Changelog Sourced from epaint_default_fonts's changelog.
    # 0.32.1 - 2025-08-15 - Misc bug fixes
    #  Added
    # Add ComboBox::popup_style #7360 by @​lucasmerlin
    # 🐛 Fixed
    # Fix glyph rendering: clamp coverage to [0, 1] #7415 by @​emilk Fix manual Popup not closing #7383 by @​lucasmerlin Fix
    # WidgetText::Text ignoring fallback font and overrides #7361 by @​lucasmerlin Fix override_text_color priority #7439 by
    # @​YgorSouza Fix debug-panic in ScrollArea if contents fit without scrolling #7440 by @​YgorSouza
    # Commits
    # ead6926 Update changelogs 03fb443 Only update snapshot if we didn't pass (#7455) d739a4b Request a redraw when the url
    # change through the popstate event listener (#...  b732992 Fix debug-panic in ScrollArea if contents fit without
    # scrolling (#7440) 7036d6a Fix override_text_color priority (#7439) 97fe124 Fix WidgetText::Text ignoring fallback font
    # and overrides (#7361) 1ad374f Fix manual Popup not closing (#7383) 1afbb97 Add ComboBox::popup_style (#7360) 85c4b1d Fix
    # glyph rendering: clamp coverage to [0, 1] (#7415) 2f7bcf2 Fix multi-line TextShape rotation (#7404) Additional commits
    # viewable in compare view
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38684	(@mrobinson, #38684)	script: Add presentation attributes as part of a single `PropertyDeclarationBlock` (#38684)
    # Instead of making a block for each attribute, use a single block as described in a `FIXME` comment by @emilio.  This
    # also switch to using `map` and `and_then` in more places to make the code a bit more concise.
    # Testing: This should not change behavior other than to incraese efficiency a bit and is thus covered by existing tests.
-https://github.com/servo/servo/pull/38690	(@nicoburns, #38690)	fonts: Use skrifa to get raw font table data on Linux (#38690)
    # Use skrifa instead of freetype for extracting raw table data.  Allows us to replace unsafe Freetype code with safe
    # Skrifa code.  Also allows us to avoid copying the table data.  Instead we return Arc'd data.
-https://github.com/servo/servo/pull/38592	(@jerensl, #38592)	mach: add type annotation in function for 'python/servo' folder (#38592)
    # This part of function strictly typed in python by adding ANN rule in ruff, similiar to #38531.
    # Testing: `./mach test-tidy` Fixes: Not related to any issues
-https://github.com/servo/servo/pull/38695	(@euclid.ye@huawei.com, #38695)	Rename `InputEvent::MouseLeave` to `InputEvent::MouseLeftViewport` (#38695)
    # 1.  `InputEvent::MouseLeave` indicates that mouse has left the viewport (fired by embedder) or iframe (synthesized in
    # Constellation
    # https://github.com/servo/servo/blob/f24f225db8b234c0545c57e80356af84e42bcb4b/components/constellation/constellation_webv
    # iew.rs#L119-L122).
    # Its handler in script is named as `handle_mouse_leave_event`, which is very misleading as we have DOM event
    # [mouseleave](https://w3c.github.io/uievents/#event-type-mouseleave).  I rename it to `MouseLeftViewport` to be
    # consistent with `WindowEvent::CursorLeft`:
    # https://github.com/servo/servo/blob/f24f225db8b234c0545c57e80356af84e42bcb4b/ports/servoshell/desktop/headed_window.rs#L
    # 632-L638
    # 2.  Add doc and rename function, such as `handle_mouse_move_event` to `handle_native_mouse_move_event` to be closer to
    # [spec](https://w3c.github.io/uievents/#handle-native-mouse-move).
    # Testing: Just renaming + skipping unnecessary hit-test in simple case.  Fixes: Nothing but preparing for #38670 and
    # #38435.
+https://github.com/servo/servo/pull/38530	(@ibluegalaxy_taoj@163.com, #38530)	script: Ensure `notify_invalidations()` is always called when modifying stylesheets (#38530)
    layout
    # This change supplements the missing stylesheet invalidation notifications to fix some bugs that the modification of
    # stylesheet does not take effect.  Additionally, this PR add a RAII thing to mark the modification scope of stylesheet
    # rules, which will facilitate to add extra logic before the modification happens.
    # Fixes: there is relevant issue #38211 , but it can't be fixed by this PR.  Testing: This fixes some subtests in
    # `/css/cssom/CSSStyleSheet-constructable.html`.
-https://github.com/servo/servo/pull/38696	(@euclid.ye@huawei.com, #38696)	servoshell: Do not send mouse button events to Servo that happen outside the `WebView` (#38696)
    # `webview_relative_mouse_point` can have negative y-coordinate when at toolbar, but we still would notify compositor the
    # native mousebutton event to do hit-test.
    # Testing: This fixes the way that mouse events are passed from servoshell to Servo, but there is currently no way to test
    # those kind of interactions.
+https://github.com/servo/servo/pull/38625	(@uthmaniv, @jdm, #38625)	net: Send ResponseContentObj to Devtools (#38625)
    devtools
    # Currently, the response tab for a request's detail in devtools does not show the available data, this was due to how the
    # content is being structured (not the way firefox's devtools client expects it) and also the body being discarded and not
    # stored in the actor.  This PR stores the body in the actor , which is then retrieved in `getResponseContent` and then
    # use it to instantiate the new struct `ResponseContentObj` which matches the format firefox's expects
    # Fixes: https://github.com/servo/servo/issues/38128
+https://github.com/servo/servo/pull/38466	(@wuminghua7@huawei.com, #38466)	Script: Implement `TextEncoderStream` (#38466)
    dom
    # This implements the `TextEncoderStream` WebIDL interface.
    # Testing: Existing WPT tests should be sufficient Fixes: #37724
>>> 2025-08-17T06:19:56Z
-https://github.com/servo/servo/pull/38721	(@servo-wpt-sync, #38721)	Sync WPT with upstream (17-08-2025) (#38721)
    # Automated downstream sync of changes from upstream as of 17-08-2025 [no-wpt-sync]
+https://github.com/servo/servo/pull/38720	(@menonrahul02@gmail.com, #38720)	content: Make QuotaExceededError serializable (#38720)
    dom
    # Implements (de)serialization behavior for QuotaExceededError and enables the annotation on the WebIDL spec.
    # Testing: Adds its own WPT tests Fixes: https://github.com/servo/servo/issues/38685
+https://github.com/servo/servo/pull/38709	(@jdm, #38709)	script: Ensure JS->webdriver conversions have a non-empty settings stack (#38709)
    stability
    # JS scripts that are evaluated already run with an [entry script](https://html.spec.whatwg.org/#entry) on the script
    # settings stack.  The codepaths that do something with the return value (eg.  WebDriver and embedder JS evaluation) have
    # the potential to run additional JS, since they can trigger getters for arbitrary properties of objects, so they also
    # need an entry script present in case code like
    # https://github.com/servo/servo/blob/e649b9b91d39b112e4ae7e1816438d296a24a341/components/script/dom/location.rs#L182 is
    # executed.
    # Testing: Added a regression unit test.  Fixes: #38692
-https://github.com/servo/servo/pull/38649	(@jdm, #38649)	Add preference observer API for runtime webxr preference changes (#38649)
    # Adds a global preference observer that is notified whenever any preference value is updated.  This is used to support
    # runtime configuration of WebXR automated testing, which is a prerequisite for running multiple WPT tests in a single
    # browser session.
    # Testing: Ran `./mach test-wpt /webxr --product=servodriver` Fixes: #38647
-https://github.com/servo/servo/pull/38187	(@arihant2math@gmail.com, #38187)	Switch indexeddb backend to sqlite and improve IPC messaging (#38187)
    # - Use sqlite instead of heed.  (one indexed database = one sqlite database) - Implement the backend for indexes - Use
    # keyranges where needed (as specified by the spec) - Implement `getKey` - Fix channel error messaging (led to a bunch of
    # changes to how async requests are handled)
    # Note: `components/net/indexeddb/engines/sqlite/serialize.rs` is unused; I can delete it if needed.
    # Testing: Switching to sqlite eliminated many panics (exposing some new failures).  Fixes: #38040
>>> 2025-08-18T06:11:18Z
-https://github.com/servo/servo/pull/38748	(@euclid.ye@huawei.com, #38748)	embedder: Remove `Int` variant from `WebDriverJSValue` (#38748)
    # According to [spec](https://w3c.github.io/webdriver/#dfn-json-deserialize), we should only care about
    # [Number](https://262.ecma-international.org/5.1/#sec-4.3.19) that is f64.
    # This change also closes the gap between `JSValue` and `WebDriverJSValue` and potentially merge into one in the future.
    # Testing: No regression.  However, we have lots of TIMEOUT due to https://github.com/servo/servo/pull/38622.
-https://github.com/servo/servo/pull/38634	(@simonwuelker, #38634)	Replace `FreeTypeFaceHelpers` with a safe wrapper struct (#38634)
    # Testing: only safety annotations change, no tests are required.  Fixes: https://github.com/servo/servo/issues/38627
+https://github.com/servo/servo/pull/38736	(@TimvdLippe, @jdm, #38736)	Implement trusted types for setTimeout/setInterval (#38736)
    dom
    # I had a difficult time figuring out where the relevant steps had to be added.  Therefore, I aggressively commented the
    # spec steps so eventually I discovered where I should add them.
    # Part of #36258
+https://github.com/servo/servo/pull/38718	(@TimvdLippe, #38718)	Add trusted type checks for global event handler attributes (#38718)
    dom
    # This only covers the global event handlers for now, while I figure out which others we are missing.  We don't seem to be
    # missing the WindowEventHandlers, but not sure where the others coming from.
    # Part of #36258
-https://github.com/servo/servo/pull/38733	(@jdm, #38733)	fonts: Measure more FontContext heap usage. (#38733)
    # Replace a hand-written MallocSizeOf implementation with an automatically derived one.  This exposes more than 1MB of
    # previously-untracked heap data on servo.org.
    # Testing: Compared about:memory output for servo.org before and after.  Part of: #11559
+https://github.com/servo/servo/pull/38735	(@kkoyung, #38735)	script: Throw error when lower is greater than upper in IDBKeyRange (#38735)
    dom
    # IDBKeyRange::Bound doesn't check if the lower bound is greater than the upper bound.  When this happens, it should throw
    # DataError.
    # Reference: Step 5 of
    # Testing: Passing WPT tests that were expected to fail before.
-https://github.com/servo/servo/pull/38654	(@jschwe, #38654)	tests: Vendor blink perf tests (#38654)
    # Vendors the [blink perf tests](https://chromium.googlesource.com/chromium/src/+/HEAD/third_party/blink/perf_tests/).
    # These perf tests are useful to evaluate the performance of servo.  The license that governs the perf tests is included
    # in the folder.  Running benchmark cases automatically is left to future work.
    # The update.py script is taken from mozjs and slightly adapted, so we can easily filter (and patch if this should be
    # necessary in the future.
    # Testing: This PR just adds the perf_tests, but does not use or modify them in any way.
-https://github.com/servo/servo/pull/38722	(@arihant2math@gmail.com, #38722)	tests: Turn on `IndexedDB` tests and update results (#38722)
    # null
>>> 2025-08-19T06:17:35Z
-https://github.com/servo/servo/pull/38768	(@dependabot[bot], @dependabot[bot], #38768)	build(deps): bump syn from 2.0.105 to 2.0.106 (#38768)
    # Bumps [syn](https://github.com/dtolnay/syn) from 2.0.105 to 2.0.106.
    # Release notes Sourced from syn's releases.
    # 2.0.106
    # Replace ~const syntax with [const] conditionally const syntax in trait bounds (#1896, rust-lang/rust#139858) Support
    # conditionally const impl Trait types (#1897) Reject polarity modifier and lifetime binder used in the same trait bound
    # (#1899, rust-lang/rust#127054) Parse const trait bounds with bound lifetimes (#1902) Parse bound lifetimes with lifetime
    # bounds (#1903) Allow type parameters and const parameters in trait bounds and generic closures (#1904, #1907, #1908,
    # #1909)
    # Commits
    # 0e4bc64 Release 2.0.106 4fb776a Merge pull request #1910 from dtolnay/traitboundissue 41b24a5 Fix duplicated async trait
    # bound issue a64f024 Merge pull request #1909 from dtolnay/fortype 176099e Parse type parameter introducer on closures
    # b790b39 Merge pull request #1908 from dtolnay/genericvsqpath 9649639 Synchronize generics-vs-qpath heuristic with rust
    # parser 60de331 Merge pull request #1907 from dtolnay/forconst 2aac6d7 Allow const parameters in for&lt;&gt; 11934e5
    # Merge pull request #1905 from dtolnay/unsafestatic Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=syn&package-manager=cargo&prev
    # ious-version=2.0.105&new-version=2.0.106)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dep
    # endabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38766	(@dependabot[bot], @dependabot[bot], #38766)	build(deps): bump proc-macro2 from 1.0.97 to 1.0.101 (#38766)
    # Bumps [proc-macro2](https://github.com/dtolnay/proc-macro2) from 1.0.97 to 1.0.101.
    # Release notes Sourced from proc-macro2's releases.
    # 1.0.101
    # Optimize Span location accessors (#519)
    # 1.0.100
    # Stabilize Span methods on Rust 1.88+: start, end, line, column, file, local_file (#517, #518)
    # 1.0.99
    # Prevent Span's unstable API becoming unavailable from a future new compiler lint (#515)
    # 1.0.98
    # Disallow prefixed identifier as name of lifetime: 'prefix#lifetime (#514, rust-lang/rust#126452)
    # Commits
    # d3188ea Release 1.0.101 cbd1286 Merge pull request #519 from dtolnay/binarysearch fab4cb6 Convert SourceMap scan to
    # binary search f4708a8 Factor out SourceMap linear search to method fdc853a Release 1.0.100 848ed0b Merge pull request
    # #518 from dtolnay/spanfile 76ce1a3 Stabilize Span::file and Span::local_file b5dd3c6 Merge pull request #517 from
    # dtolnay/startend 1d0ffc0 Use Span's start, end, line, column methods on stable 1.88+ 4f5845e Merge pull request #516
    # from dtolnay/probe Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=proc-macro2&package-manager=ca
    # rgo&previous-version=1.0.97&new-version=1.0.101)](https://docs.github.com/en/github/managing-security-vulnerabilities/ab
    # out-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38765	(@dependabot[bot], @dependabot[bot], #38765)	build(deps): bump hyper from 1.6.0 to 1.7.0 (#38765)
    # Bumps [hyper](https://github.com/hyperium/hyper) from 1.6.0 to 1.7.0.
    # Release notes Sourced from hyper's releases.
    # v1.7.0 Highlights Features
    # client:
    # add a TrySendError::error() method (#3885) (efa0b269) add a TrySendError::message() method (#3884) (03fd6aff)
    # error: add Error::is_shutdown() (#3863) (b8affd8a, closes #2745) server: add
    # allow_multiple_spaces_in_request_line_delimiters http1 builder method (#3929) (9749184f)
    # Bug Fixes
    # server: improve caching accuracy of Date header (#3887) (436cadd1)
    # What's Changed
    # chore: remove redundant backticks by @​jimmycathy in hyperium/hyper#3855 Gate tests with features they test by
    # @​WhyNotHugo in hyperium/hyper#3864 docs(service): add HttpService documentation by @​cratelyn in hyperium/hyper#3869
    # docs(examples): alias Builder for clarity by @​Muffeter in hyperium/hyper#3873 docs(MAINTAINERS): add katelyn martin as
    # collaborator by @​seanmonstar in hyperium/hyper#3878 chore(proto/h2): fix module-level documentation by @​cratelyn in
    # hyperium/hyper#3881 feat(client): add a TrySendError::message() method by @​cratelyn in hyperium/hyper#3884
    # feat(client): add a TrySendError::error() method by @​cratelyn in hyperium/hyper#3885 fix(http2): add decriptive error
    # for non-zero connect request by @​samp5 in hyperium/hyper#3886 refactor(lib): drop futures-util except in ffi by
    # @​hanna-kruppe in hyperium/hyper#3890 fix(date): improve caching accuracy by @​Patryk27 in hyperium/hyper#3887
    # docs(SECURITY): update policy to use GSA drafts when reporting vulnerabilities by @​seanmonstar in hyperium/hyper#3894
    # feat: add Error::is_shutdown() by @​joshka in hyperium/hyper#3863 docs: improve ext module overview by @​seanmonstar in
    # hyperium/hyper#3921 docs(rt): improve rt module overview by @​seanmonstar in hyperium/hyper#3920 chore(ci): update to
    # cargo-check-external-types-0.3.0 by @​tottoto in hyperium/hyper#3928 test(common): add missing assertion in full_rewind
    # test by @​1911860538 in hyperium/hyper#3926 fix(lib): avoid implicit cargo feature by @​hanna-kruppe in
    # hyperium/hyper#3931 feat(http1): add allow_multiple_spaces_in_request_line_delimiters h1 builder config method by
    # @​mccordryan in hyperium/hyper#3929 Prepare v1.7.0 by @​seanmonstar in hyperium/hyper#3933
    # New Contributors
    # @​jimmycathy made their first contribution in hyperium/hyper#3855 @​Muffeter made their first contribution in
    # hyperium/hyper#3873 @​samp5 made their first contribution in hyperium/hyper#3886 @​hanna-kruppe made their first
    # contribution in hyperium/hyper#3890 @​Patryk27 made their first contribution in hyperium/hyper#3887 @​joshka made their
    # first contribution in hyperium/hyper#3863 @​1911860538 made their first contribution in hyperium/hyper#3926 @​mccordryan
    # made their first contribution in hyperium/hyper#3929
    # ... (truncated)
    # Changelog Sourced from hyper's changelog.
    # v1.7.0 (2025-08-18) Bug Fixes
    # server: improve caching accuracy of Date header (#3887) (436cadd1)
    # Features
    # client:
    # add a TrySendError::error() method (#3885) (efa0b269) add a TrySendError::message() method (#3884) (03fd6aff)
    # error: add Error::is_shutdown() (#3863) (b8affd8a, closes #2745) server: add
    # allow_multiple_spaces_in_request_line_delimiters http1 builder method (#3929) (9749184f)
    # Commits
    # 400bdfd v1.7.0 9749184 feat(server): add allow_multiple_spaces_in_request_line_delimiters http1 bu...  caa166c
    # chore(dependencies): avoid implicit cargo feature of futures-util (#3931) 8ad2595 test(common): add missing assertion in
    # full_rewind test (#3926) 24f0da8 chore(ci): update to cargo-check-external-types-0.3.0 (#3928) 974289f docs(rt): improve
    # rt module overview (#3920) 283fd23 docs: improve ext module overview and Protocol docs (#3921) b8affd8 feat(error): add
    # Error::is_shutdown() (#3863) c88df78 docs(SECURITY): update policy to use GSA drafts when reporting vulnerabilitie...
    # 436cadd fix(server): improve caching accuracy of Date header (#3887) Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=hyper&package-manager=cargo&pr
    # evious-version=1.6.0&new-version=1.7.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-depen
    # dabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38764	(@dependabot[bot], @dependabot[bot], #38764)	build(deps): bump cc from 1.2.32 to 1.2.33 (#38764)
    # Bumps [cc](https://github.com/rust-lang/cc-rs) from 1.2.32 to 1.2.33.
    # Changelog Sourced from cc's changelog.
    # 1.2.33 - 2025-08-15 Other
    # Regenerate target info (#1521) [win][arm64ec] Add testing for Arm64EC Windows (#1512) Fix parsing of nigthly targets
    # (#1517) [win][arm64ec] Fix finding assembler and setting is_arm for Arm64EC (#1511)
    # Commits
    # a928923 chore: release v1.2.33 (#1522) 9c33178 Regenerate target info (#1521) 220d772 Bump actions/checkout from 4 to 5
    # (#1520) 9de267d [win][arm64ec] Add testing for Arm64EC Windows (#1512) 37fc899 Fix gen-windows-sys-binding (#1518)
    # de7e8d5 Fix parsing of nigthly targets (#1517) ca81dcc [win][arm64ec] Fix finding assembler and setting is_arm for
    # Arm64EC (#1511) See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=cc&package-manager=cargo&previ
    # ous-version=1.2.32&new-version=1.2.33)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-depend
    # abot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/38746	(@Taym95, #38746)	Implement AbortSignal static abort(reason) (#38746)
    dom
    # Implement AbortSignal static abort(reason)
    # part of #36936
-https://github.com/servo/servo/pull/35922	(@jschwe, #35922)	Fix ./mach build --no-default-features (#35922)
    # Fix build failures when building without default features.
    # Testing: This was manually tested, but this PR does not add automated tests of `--no-default-features` to CI.
-https://github.com/servo/servo/pull/38751	(@euclid.ye@huawei.com, #38751)	webdriver: Reuse `JSValue` as `WebDriverJSValue` (#38751)
    # After #38748, `WebDriverJSValue` is almost same as `JSValue`.  Now we turn "potentially merge into one in the future"
    # into reality.  The only thing we should be cautious is to properly serialize `WebFrame`, `WebWindow`, `WebElement` for
    # WebDriver.
    # Testing: No regression.  Some error is fixed previously by #38709 which didn't update test :) Binary size reduced by
    # 134KB.
+https://github.com/servo/servo/pull/38642	(@simonwuelker, #38642)	fonts: Implement CSS `font-variation-settings` property for FreeType platforms (#38642)
    css
    # This change adds support for variable fonts via the
    # [`font-variation-settings`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-variation-settings) property.
    # There are three areas where we need to set the variation values: * Webrender (`compositor.rs`), for drawing the glyphs *
    # Harfbuzz (`shaper.rs`), for most shaping tasks * PlatformFont (`fonts/platform/`), for horizontal advances and kerning
    # For now, freetype is the only platform shaper that supports variable fonts.  I can't easily test the fonts with
    # non-freetype shapers.  Thats why variable fonts are behind the `layout_variable_fonts_enabled` pref, which is disabled
    # by default.
    # HTML test file
    # ```html
    # @font-face {
    #   font-family: "Amstelvar VF"; src:
    #   url("https://mdn.github.io/shared-assets/fonts/variable-fonts/AmstelvarAlpha-VF.woff2")
    #     format("woff2-variations");
    #   font-weight: 300 900; font-stretch: 35% 100%; font-style: normal; font-display: swap;
    # }
    # p {
    #   font:
    #     1.2em "Amstelvar VF", Georgia, serif;
    #   font-size: 4rem; margin: 1rem; display: inline-block;
    # }
    # .p1 {
    #   font-variation-settings: "wght" 300;
    # }
    # .p2 {
    #   font-variation-settings: "wght" 625;
    # }
    # .p3 {
    #   font-variation-settings: "wght" 900;
    # }
    #   Weight (font-variation-settings: "wght" 300)
    #   Weight (font-variation-settings: "wght" 625)
    #   Weight (font-variation-settings: "wght" 900)
    # ```
    # https://github.com/user-attachments/assets/9e21101a-796a-49fe-b82c-8999d8fa9ee1
    # Testing: Needs decision on whether we want to enable the pref in CI Works towards
    # https://github.com/servo/servo/issues/37236
    # Depends on https://github.com/servo/stylo/pull/230
+https://github.com/servo/servo/pull/38529	(@ibluegalaxy_taoj@163.com, #38529)	script: Mark the entire shadow tree for restyle when its stylesheet is invalidated (#38529)
    layout
    # This change fix this bugs: modify stylesheet of shadow tree does not take effect if there is no other Dom change within
    # the shadow tree happens.
    # Fixes: This change fix some bugs reported by this issue #38211.  Testing: This fixes some subtests in
    # `/css/cssom/CSSStyleSheet-constructable.html` and
    # `/css/cssom/CSSStyleSheet-constructable-disallow-import.tentative.html`, and make some subtest failed in
    # `/css/cssom/CSSStyleSheet-constructable-baseURL.html`, because the `BaseUrl` is not yet supported for `CSSStylesheet`.
-https://github.com/servo/servo/pull/38758	(@mrobinson, #38758)	fonts: Have `CoreTextFontCache::core_text_font` return a `PlatformFont` (#38758)
    # This will make it easier in a followup to include the normalized font variations in the return value.  This also make
    # `PlatformFont::ensure_h_kern_subtable` work on the instance instead of being a struct method.  Finally, all
    # `PlatformFont` methods are combined into a single impl block.
    # Testing: This should not change behavior and is thus covered by existing tests.
-https://github.com/servo/servo/pull/38680	(@mrobinson, @Loirooriol, #38680)	layout: Always build `Tag` and `BaseFragmentInfo` with `ServoThreadSafeLayoutNode` (#38680)
    # This cleanup makes the interface a bit simpler and prevents problems where the pseudo-element information is not passed
    # by accident.
    # Testing: This should not change behavior, so is covered by existing tests.
-https://github.com/servo/servo/pull/38698	(@mrobinson, #38698)	tidy: Add a rule ensuring that `//` comments are followed by a space in Rust (#38698)
    # This shows up sometimes in code reviews, so it makes sense that tidy enforces it.  `rustfmt` supports this via comment
    # normalization, but it does many other things and is still an unstable feature (with bugs).
    # Testing: There are new tidy tests for this change.
-https://github.com/servo/servo/pull/38757	(@simonwuelker, #38757)	Add missing backtick in README.md (#38757)
    # The build instructions for OHOS were missing a backtick.
+https://github.com/servo/servo/pull/38618	(@stevennovaryo, #38618)	layout: Do not include `position:fixed` children when calculating scrollable overflow for root element (#38618)
    layout
    # Reimplementation of: #35931
    # For a `FragmentTree` we define a scrollable overflow calculation that includes the overflow all of it's children
    # `Fragments`.  In practice we are using this calculation for scrolling area of the viewport and defining the root scroll
    # frames.  However, since uncontained fixed positioned element is located outside of the document and should not be
    # scrolled, and therefore it would make no sense to include them in the calculation of its scrollable overflow as well.
    # Testing: New and existing WPT tests Fixes: #38617 Fixes: #38182
-https://github.com/servo/servo/pull/38704	(@nicoburns, #38704)	Use built-in conversion function from unicode_script to convert script for harfbuzz (#38704)
    # Replaces a big match statement with a call to `unicode_script`'s `Script::short_name` method which has the same big
    # match statement.  We special case `Script::Unknown` because the `short_name` method returns empty string for that
    # variant, but harfbuzz represents it with `Zzzz`.
    # EDIT: `Zzzz` seems to be in the spec so I've sent a PR to `unicode_script` to use it:
    # https://github.com/unicode-rs/unicode-script/pull/23 EDIT: And https://github.com/unicode-rs/unicode-script/pull/24
    # which would allow us to remove this method entirely.
-https://github.com/servo/servo/pull/38694	(@jerensl, #38694)	script_bindings(python): Add ruff rule for strict typing in function (#38694)
    # This is part of introducing the Ruff rule [flake8-annotations
    # (ANN)](https://docs.astral.sh/ruff/rules/#flake8-annotations-ann) into the script_bindings folder.
    # Since `codegen.py` has 10k lines of code, the strategy is to introduce the rule first while ignoring the `ANN` Ruff rule
    # for `codegen.py`.  We will then gradually add type annotations slice by slice to ensure no new errors occur outside of
    # `ANN`.
    # Testing: `./mach test-wpt webidl`
-https://github.com/servo/servo/pull/38749	(@jdm, #38749)	Enable dom_abort_controller_enabled for AbortController test subdirectory (#38749)
    # Since we don't enable the preference as part of `--enable-experimental-web-platform-features` yet, we don't run any
    # automated tests for the AbortController feature.  This change means that we at least explicitly test the interface.
    # Testing: Just enabling new tests.  Part of: https://github.com/servo/servo/issues/34866
-https://github.com/servo/servo/pull/38741	(@jschwe, #38741)	CI: Bump setup-ohos-sdk to 0.2.3 (#38741)
    # Includes a fix, which deletes the SDK for ohos-native hosts, saving some disk and cache space, since we only need the
    # version for linux hosts.
    # Testing: [mach try ohos](https://github.com/jschwe/servo/actions/runs/17024914816)
>>> 2025-08-20T06:03:57Z
-https://github.com/servo/servo/pull/38787	(@dependabot[bot], @dependabot[bot], #38787)	build(deps): bump serde_json from 1.0.142 to 1.0.143 (#38787)
    # Bumps [serde_json](https://github.com/serde-rs/json) from 1.0.142 to 1.0.143.
    # Release notes Sourced from serde_json's releases.
    # v1.0.143
    # Implement Clone and Debug for serde_json::Map iterators (#1264, thanks @​xlambein) Implement Default for
    # CompactFormatter (#1268, thanks @​SOF3) Implement FromStr for serde_json::Map (#1271, thanks @​mickvangelderen)
    # Commits
    # 10102c4 Release 1.0.143 2a5b853 Replace super::super with absolute path within crate 447170b Merge pull request 1271
    # from mickvangelderen/mick/impl-from-str-for-map ec190d6 Merge pull request #1264 from xlambein/master 8be6647 Merge pull
    # request #1268 from SOF3/compact-default ba5b3cc Revert &quot;Pin nightly toolchain used for miri job&quot; fd35a02
    # Implement FromStr for Map&lt;String, Value&gt; bea0fe6 Implement Default for CompactFormatter 0c0e9f6 Add Clone and
    # Debug impls to map iterators See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=serde_json&package-manager=car
    # go&previous-version=1.0.142&new-version=1.0.143)](https://docs.github.com/en/github/managing-security-vulnerabilities/ab
    # out-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38786	(@dependabot[bot], @dependabot[bot], #38786)	build(deps): bump prettyplease from 0.2.36 to 0.2.37 (#38786)
    # Bumps [prettyplease](https://github.com/dtolnay/prettyplease) from 0.2.36 to 0.2.37.
    # Release notes Sourced from prettyplease's releases.
    # 0.2.37
    # Replace ~const syntax with [const] conditionally const syntax (#123)
    # Commits
    # c971184 Release 0.2.37 484e060 Merge pull request #123 from dtolnay/conditionallyconst 38d93c7 Replace ~const syntax
    # with [const] conditionally const syntax e1c92b1 Merge pull request #122 from dtolnay/negativeinherent 1f74d47 Reject
    # negative inherent impls See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=prettyplease&package-manager=c
    # argo&previous-version=0.2.36&new-version=0.2.37)](https://docs.github.com/en/github/managing-security-vulnerabilities/ab
    # out-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/38744	(@arihant2math@gmail.com, #38744)	net: fix indexeddb backend bugs (#38744)
    indexeddb
    # Fix a large number of backend issues that were masking everything else.  There probably is still more, but it'll take
    # more integration/unit testing to find it.
    # Testing: WPT Fixes: #38743
-https://github.com/servo/servo/pull/38409	(@uthmaniv, #38409)	Split devtools network event logic for creating/retrieving network event actors (#38409)
    # `DevtoolsInstance::find_network_event_actor` silently creates a new actor if there is not one already known for a given
    # ID.  This is confusing; this PR separates logic for handling network requests (create a new actor) and network responses
    # (retrieve an existing actor).
    # Fixes: (https://github.com/servo/servo/issues/37841)
-https://github.com/servo/servo/pull/38727	(@jdm, #38727)	allocator: Add optional heap allocation measurement tracking. (#38727)
    # Add an off-by-default allocator mode that tracks all live allocations with sizes and associated stack traces.  We also
    # track if each allocation is visited as part of a measuring heap usage in `about:memory`, allowing us to report on
    # allocations that are not tracked yet.  Right now the list of untracked allocations is dumped to stdout; I have a python
    # script coming in a separate PR which makes it easier to perform analysis on the massive output.
    # Testing: Manually tested with `./mach build -d --features servo_allocator/allocation-tracking` and visiting
    # about:memory.  Part of: #11559
+https://github.com/servo/servo/pull/38760	(@mrobinson, #38760)	fonts: Add font variation support for macOS (#38760)
    css
    # This change adds font variation support for macOS.  The main bulk of the change is reading the default, min, and max
    # values for each variation axis from the font and instantiating a new CoreText font with the appropriate values.
    # In addition, fonts with variations are now properly cached in the CoreText font cache.
    # Testing: There are no tests for this change as we do not run WPT tests for macOS and font variations are currently
    # turned off by default.  Eventually, when the feature is turned on there will be test for it.  These changes are just
    # laying the groundwork for the full implementation.
-https://github.com/servo/servo/pull/38780	(@euclid.ye@huawei.com, #38780)	webxr: Fix compile warning for Windows after upgrade to rustc 1.89 (#38780)
    # This is a follow up to https://github.com/servo/servo/pull/36818#issuecomment-3135078567.  Since openxr is a feature
    # only available on Windows, it was omitted.
    # Testing: Fixes ``` warning: hiding a lifetime that's elided elsewhere is confusing
    #    --> components\webxr\openxr\input.rs:366:9
    #     |
    # 366 | &self,
    #     | ^^^^^ the lifetime is elided here
    # ...
    # 371 | ) -> Vec {
    #     | ------- the same lifetime is hidden here | = help: the same lifetime is referred to in inconsistent ways, making
    #     the signature confusing = note: `#[warn(mismatched_lifetime_syntaxes)]` on by default
    # help: use `'_` for type paths
    #     |
    # 371 | ) -> Vec> { ```
-https://github.com/servo/servo/pull/38778	(@Loirooriol, #38778)	layout: Fix mix-ups between physical and logical aspect ratios (#38778)
    # `ComputedValuesExt::preferred_aspect_ratio()` was getting the natural aspect ratio expressed logically as inline over
    # block, but then it was mixing it with the value of the `aspect-ratio` CSS property, which is expressed physically as
    # width over height.
    # Therefore, this changes `ComputedValuesExt::preferred_aspect_ratio()` to expect the physical natural ratio, and then it
    # takes care to convert the resulting ratio logically.
    # Testing: Unneeded.  This has no effect in practice because we don't support `writing-mode` yet.
+https://github.com/servo/servo/pull/38705	(@Loirooriol, #38705)	layout: Stop making `<video>` fall back to a preferred aspect ratio of 2 (#38705)
    layout
    # This is simpler, and has been successfully shipped in Blink.  See https://github.com/w3c/csswg-drafts/issues/12053 for
    # more information.
    # Testing: Improves WPT tests.
+https://github.com/servo/servo/pull/38753	(@nicoburns, #38753)	Fix loading raw data from `.ttc` files on macos (#38753)
    font
    # # Objective
    # Ensure that functionality which uses the raw font data (such as rendering text to canvas) works correctly on macOS when
    # the specified font is a system font that lives in an OpenType Collection (`.ttc`) file.
    # ## Changes made
    # - The `read_data_from_file` in each backend now returns a `index: u32` in addition to `data: Vec` - The `data` field on
    # the `Font` type has been renamed to `raw` and the `data` method on the `Font` type has been renamed to `raw_font`.  This
    # allows the index to be cached as computing is moderately expensive on macOS (on the order of 100 microseconds).  - Both
    # of the above now store/return a `struct RawFont` instead of a `FontData` where `RawFont` is defined as `struct RawFont {
    # data: FontData, index: u32 }`.  - The users of the `data` method have been updated to use the cached index from `data`
    # rather than calling `.index()` each time.
-https://github.com/servo/servo/pull/36818	(@webbeef, @sagudev, #36818)	cargo: Bump rustc to 1.89 (#36818)
    # Update Rustc to 1.89.
    # Reviewable by commit.
    # Leftover work: - #37330 - #38777
-https://github.com/servo/servo/pull/38645	(@jschwe, #38645)	Use GenericChannel for script_chan (#38645)
    # Motivation: Using our GenericChannel abstraction allows us to optimize IPC in single-process mode to just use cross-beam
    # channel.  To keep the diff low, and get early feedback, this PR only tackles a single channel, but the intention is to
    # port all ipc channels to the generic channel, which allows us to skip serializing and deserializing messages in single
    # process mode.
    # Based on: - https://github.com/servo/servo/pull/38638 - https://github.com/servo/servo/pull/38636
    # Testing: Covered by existing tests
-https://github.com/servo/servo/pull/38774	(@jschwe, #38774)	uv: Fix warning by adding `project` table to pyproject.toml (#38774)
    # `uv` logs a warning if the pyproject.toml does not contain a project table.  There is not really much point in adding
    # the table, but no downsides either, so lets just add the table to make `uv` happy.
    # Testing: Manual run of `RUST_LOG=warn ./mach run` Fixes: #38761
-https://github.com/servo/servo/pull/38747	(@Kenzie.Raditya.Tirtarahardja@huawei.com, #38747)	webdriver: Change `TickActions` to vector rather than hashmap (#38747)
    # Based on [spec](https://w3c.github.io/webdriver/#dfn-extract-an-action-sequence), `TickActions` should be a list.
    # Previously we used Hashmap, which when iterated has arbitrary order.  This causes some tests to be unstable previously
    # (see the linked issue).
    # Testing: `./webdriver/tests/classic/perform_actions/{pointer_contextmenu, pointer_modifier_click}.py` consistently pass
    # now.  Fixes: https://github.com/servo/servo/issues/38387
-https://github.com/servo/servo/pull/38767	(@dependabot[bot], @dependabot[bot], #38767)	build(deps): bump bitflags from 2.9.1 to 2.9.2 (#38767)
    # Bumps [bitflags](https://github.com/bitflags/bitflags) from 2.9.1 to 2.9.2.
    # Release notes Sourced from bitflags's releases.
    # 2.9.2 What's Changed
    # Fix difference in the spec by @​KodrAus in bitflags/bitflags#446 Fix up inaccurate docs on bitflags_match by @​KodrAus
    # in bitflags/bitflags#453 Remove rustc internal crate feature by @​KodrAus in bitflags/bitflags#454 Prepare for 2.9.2
    # release by @​KodrAus in bitflags/bitflags#456
    # Full Changelog: https://github.com/bitflags/bitflags/compare/2.9.1...2.9.2
    # Changelog Sourced from bitflags's changelog.
    # 2.9.2 What's Changed
    # Fix difference in the spec by @​KodrAus in bitflags/bitflags#446 Fix up inaccurate docs on bitflags_match by @​KodrAus
    # in bitflags/bitflags#453 Remove rustc internal crate feature by @​KodrAus in bitflags/bitflags#454
    # Full Changelog: https://github.com/bitflags/bitflags/compare/2.9.1...2.9.2
    # Commits
    # 85b5e60 Merge pull request #456 from KodrAus/cargo/2.9.2 d185ca5 remove reference to std internal features 82a365f
    # prepare for 2.9.2 release f1beb28 Merge pull request #454 from KodrAus/fix/rustc-dep-of-std ef247c5 update more error
    # messages c8e2354 update compiler errors fe4c49d remove rustc internal crate feature 2b786c9 Merge pull request #453 from
    # bitflags/fix/match-docs 15519b0 fix up inaccurate docs on bitflags_match 80684fd Merge pull request #446 from
    # bitflags/KodrAus-patch-1 Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=bitflags&package-manager=cargo
    # &previous-version=2.9.1&new-version=2.9.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-de
    # pendabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38770	(@dependabot[bot], @dependabot[bot], #38770)	build(deps): bump brotli from 8.0.1 to 8.0.2 (#38770)
    # Bumps [brotli](https://github.com/dropbox/rust-brotli) from 8.0.1 to 8.0.2.
    # Commits
    # See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=brotli&package-manager=cargo&p
    # revious-version=8.0.1&new-version=8.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-depe
    # ndabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
>>> 2025-08-21T06:01:33Z
+https://github.com/servo/servo/pull/38737	(@arihant2math@gmail.com, #38737)	Enable access to transaction from idbobjectstore (#38737)
    indexeddb
    # Adds the transaction property to IDBObjectStore, as per spec.
    # Testing: WPT Fixes: None
+https://github.com/servo/servo/pull/37968	(@sebsebmc@gmail.com, #37968)	script: initial CookieStore implementation (#37968)
    dom
    # This is a first draft at implementing the required infrastructure for CookieStore, which requires setting up IPC between
    # script and the resource thread to allow for async/"in parallel" handling of cookie changes that have a promise API.
    # Cookie Store also will need to receive change events when cookies for a url are changed so the architecture needs to
    # support that.
    # Expect this PR to be reworked once the architecture becomes more settled, cookie change events will be implemented in
    # follow up PRs
    # Testing: WPT tests exist for this API Part of #37674
+https://github.com/servo/servo/pull/38407	(@Kenzie.Raditya.Tirtarahardja@huawei.com, @euclid.ye@huawei.com, #38407)	script(webdriver): Element send keys append to the end of `filelist` if Multiple (#38407)
    webdriver
    # Step 8.6 of [Element Send Keys](https://w3c.github.io/webdriver/#dfn-element-send-keys) remote end's implementation.  >
    # 6.  Complete implementation specific steps equivalent to setting the [selected
    # files](https://w3c.github.io/webdriver/#dfn-selected-files) on the [input](https://w3c.github.io/webdriver/#dfn-input)
    # element.  **If multiple is true files are be appended to element's [selected
    # files](https://w3c.github.io/webdriver/#dfn-selected-files).**
    # Testing: `webdriver/tests/classic/element_send_keys/file_upload.py` Fixes: https://github.com/servo/servo/issues/38190
-https://github.com/servo/servo/pull/38804	(@Narfinger, #38804)	compostor: Move duplicated code for generating a batch of `FontKey`s into a function (#38804)
    # The code was duplicated for handling in normal messages and handling while shutting down messages.  This cleans it up
    # and puts them into a function.
    # Testing: Does not change functionality.
-https://github.com/servo/servo/pull/38802	(@atouchet, #38802)	Update user agent strings to match Firefox 140 (#38802)
    # Update user agent strings to match Firefox 140 now that #38563 is merged.
    # Testing: No tests for user agent string update.
-https://github.com/servo/servo/pull/38805	(@dependabot[bot], @dependabot[bot], #38805)	build(deps): bump taffy from 0.9.0 to 0.9.1 (#38805)
    # Bumps [taffy](https://github.com/DioxusLabs/taffy) from 0.9.0 to 0.9.1.
    # Changelog Sourced from taffy's changelog.
    # 0.9.1 Fixed
    # Flexbox: don't apply cross-axis stretch alignment to children with auto margins (#861)
    # Commits
    # See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=taffy&package-manager=cargo&pr
    # evious-version=0.9.0&new-version=0.9.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-depen
    # dabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/38801	(@averyrudelphe@gmail.com, #38801)	Add `matrixTransform` for `DOMPointReadOnly` (#38801)
    dom
    # Adds the `matrixTransform` function for `DOMPointReadOnly`.
    # Testing: Covered by WPT tests (`css/geometry`)
+https://github.com/servo/servo/pull/38598	(@shubhamg13, @Loirooriol, #38598)	layout: Use `overflow: visible` if `overflow` was propagated to viewport (#38598)
    layout
    # The `overflow-*` values of either the root element or the `` get propagated to the viewport.  However, we were missing
    # this part: > The element from which the value is propagated must then have a used `overflow` value of `visible`.
    # See https://drafts.csswg.org/css-overflow/#overflow-propagation
    # Testing:
    #  - `css/cssom-view/scrolling-quirks-vs-nonquirks.html` - `css/css-overflow/overflow-body-propagation-007.html` -
    #  `css/css-overflow/overflow-body-propagation-008.html` - `css/css-overflow/overflow-body-propagation-009.html` -
    #  `css/css-overflow/scrollable-overflow-with-nested-elements-001.html` -
    #  `css/css-overflow/scrollable-overflow-with-nested-elements-002.html` -
    #  `css/css-overflow/scrollable-overflow-with-nested-elements-003.html` -
    #  `css/css-overflow/scrollable-overflow-with-nested-elements-004.html` -
    #  `css/css-overflow/scrollbar-gutter-scroll-into-view.html`
    # Failures:
    #  - `css/css-overflow/overflow-body-propagation-010.html`
    #    Failing because of missing support for `contain: paint`.
    # - `css/css-overflow/scrollable-overflow-with-nested-elements-005.html`
    #    Failing because of wrong `data-expected-height`, but correct `data-expected-scroll-height` which is core of this PR.
    #    `data-expected-height` can be dealt separately.
    # Fixes: #38248
-https://github.com/servo/servo/pull/38793	(@Kenzie.Raditya.Tirtarahardja@huawei.com, #38793)	wpt: Set servo window size and open blank page for wdspec (#38793)
    # On `ServoWdSpecBrowser`, we set the window size to `800x600` and open `about:blank`.  This will unify the behavior of
    # servo and servodriver.
    # https://github.com/servo/servo/blob/604b6ea26dadc55e6c8c68b9c7d9f9f84193539e/tests/wpt/tests/tools/wptrunner/wptrunner/b
    # rowsers/servodriver.py#L101-L102
    # Testing: Unify the behavior of servo and servodriver for wdspec
+https://github.com/servo/servo/pull/38540	(@ibluegalaxy_taoj@163.com, #38540)	Reuse `StylesheetContent` for inline style sheets with identical content (#38540)
    performance
    # For duplicate style sheets with identical content, `StylesheetContents` can be reused to avoid redundant parsing of the
    # inline style sheets.  Since duplicate stylesheets is a common case with web components, this change will significantly
    # improve performance.  Additionally, the cache hit rate of stylo's `CascadeDataCache` can now be significantly improved.
    # When shared `StylesheetContents` is modified, copy-on-write will occur to avoid affecting other sharers.  And then
    # updates the references to `CssRule` or `PropertyDeclarationBlock` stored in the CSSOMs to ensure that modifications are
    # made only on the new copy.
-https://github.com/servo/servo/pull/38796	(@dependabot[bot], @dependabot[bot], #38796)	build(deps): bump sea-query from 1.0.0-rc.9 to 1.0.0-rc.10 (#38796)
    # Bumps [sea-query](https://github.com/SeaQL/sea-query) from 1.0.0-rc.9 to 1.0.0-rc.10.
    # Commits
    # See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=sea-query&package-manager=carg
    # o&previous-version=1.0.0-rc.9&new-version=1.0.0-rc.10)](https://docs.github.com/en/github/managing-security-vulnerabilit
    # ies/about-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38795	(@dependabot[bot], @dependabot[bot], #38795)	build(deps): bump winapi-util from 0.1.9 to 0.1.10 (#38795)
    # Bumps [winapi-util](https://github.com/BurntSushi/winapi-util) from 0.1.9 to 0.1.10.
    # Commits
    # 29a804c 0.1.10 7405180 cargo: support windows-sys v0.60.0 b0e2eed github: add FUNDING See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=winapi-util&package-manager=ca
    # rgo&previous-version=0.1.9&new-version=0.1.10)](https://docs.github.com/en/github/managing-security-vulnerabilities/abou
    # t-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38794	(@dependabot[bot], @dependabot[bot], #38794)	build(deps): bump cfg-if from 1.0.1 to 1.0.3 (#38794)
    # Bumps [cfg-if](https://github.com/rust-lang/cfg-if) from 1.0.1 to 1.0.3.
    # Release notes Sourced from cfg-if's releases.
    # v1.0.3
    # Revert &quot;Remove @__identity rule.&quot;
    # v1.0.2
    # Remove @__identity rule.
    # Changelog Sourced from cfg-if's changelog.
    # 1.0.3 - 2025-08-19
    # Revert &quot;Remove @__identity rule.&quot;
    # 1.0.2 - 2025-08-19
    # Remove @__identity rule.
    # Commits
    # 9c7bb0b chore: release v1.0.3 (#93) 145894c Revert &quot;Remove @__identity rule.&quot; 9f747fe chore: release v1.0.2
    # (#88) 97739b8 Fix some ugly and inconsistent formatting.  4d7a585 Remove @__identity rule.  527acbd Bump
    # actions/checkout from 4 to 5 See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=cfg-if&package-manager=cargo&p
    # revious-version=1.0.1&new-version=1.0.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-depe
    # ndabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38791	(@jdm, #38791)	script: Measure heap usage of various ignored fields  (#38791)
    # These changes allow using MallocSizeOf/`#[conditional_malloc_size_of]` on WebIDL callback values, and then fix a grab
    # bag of places in the script crate that previously ignored those values.  There are also some commits removing ignored
    # fields that involved Arc/Rc that are not WebIDL callbacks, since they are now easier to support with the
    # `#[conditional_malloc_size_of]` attribute.
    # Testing: Manual testing on about:memory for servo.org.
+https://github.com/servo/servo/pull/38563	(@jdm, #38563)	Upgrade to SpiderMonkey 140. (#38563)
    upgrade
    # Upgrade to use the latest mozjs upgrade.
    # Testing: Covered by existing WPT.
-https://github.com/servo/servo/pull/38790	(@mrobinson, #38790)	dependabot: Exclude two testing directories to depndabot scanning (#38790)
    # According to dependabot/dependabot-core#4364, dependabot now supports excluding certain directories from upgrade
    # scanning.  This change adds two problematic directories to the exclusion list.
-https://github.com/servo/servo/pull/38716	(@jdm, #38716)	constellation: Broadcast preference changes to all content processes (#38716)
    # Building on the preference observer work from #38649, we now automatically install an observer when multiprocess mode is
    # enabled.  This observer notifies the constellation of updated preferences, which in turn notifies each content process
    # so the changes will be reflected into script/layout as expected.  There's a unit test that verifies this works correctly
    # by checking a preference-gated WebIDL property before and after the preference is toggled.
    # Testing: New unit test added.  Fixes: #35966
    # Depends on #38649.
-https://github.com/servo/servo/pull/38121	(@sagudev, #38121)	dependabot: Add egui-file-dialog and accesskit_winit to egui group (#38121)
    # https://github.com/servo/servo/pull/38119#issuecomment-3079653012
    # Testing: None, just dependabot config.
-https://github.com/servo/servo/pull/38785	(@dependabot[bot], @dependabot[bot], #38785)	build(deps): bump tinyvec from 1.9.0 to 1.10.0 (#38785)
    # Bumps [tinyvec](https://github.com/Lokathor/tinyvec) from 1.9.0 to 1.10.0.
    # Changelog Sourced from tinyvec's changelog.
    # Changelog 1.10
    # Minimum rust version is now 1.55, and the non-const-generic impls are removed.  This reduces build times by over a
    # second on average, which is significant enough for a library crate.
    # 1.9
    # Adds a latest_stable_rust cargo feature, which will automatically pull in other cargo features related to the latest
    # Stable version of rust.  Adds ArrayVec::try_from_array_len Adds TinyVec::into_vec and TinyVec::into_boxed_slice Adds
    # support for generic-array crate Adds support for the borsh crate
    # 1.8.1
    # e00E updated the rustc features so that they all correctly depend on the lower version feature.  pr 199
    # 1.8
    # Fuuzetsu added the ArrayVec::as_inner method.  pr 197
    # 1.7
    # Fuuzetsu added the rustc_1_61 cargo feature, which adds the retain_mut method.  pr 198
    # 1.6.1
    # e00E fixed the Arbitrary impl to work on Stable without using a feature gate.  pr 180
    # 1.6.0
    # i509VCB added the try_ functions for fallable reallocation.  pr 158 ajtribick added more error impls to
    # TryFromSliceError.  pr 160 The std feature now automatically enables the alloc feature as well.
    # 1.5.1
    # madsmtm fixed an error with the alloc feature on very old rustc versions.
    # ... (truncated)
    # Commits
    # 3c613ad chore: Release 2c5f2f6 changelog a44fb04 bump MSRV to 1.55, drop generated Array impls (#209) See full diff in
    # compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=tinyvec&package-manager=cargo&
    # previous-version=1.9.0&new-version=1.10.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-de
    # pendabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
>>> 2025-08-22T06:08:40Z
+https://github.com/servo/servo/pull/38836	(@arihant2math@gmail.com, #38836)	net: Fix initial indexeddb version storage (#38836)
    indexeddb
    # #38819 made a step in the right direction.  Unfortunately sqlite doesn't support unsigned integers, so I've been storing
    # them as i64s internally, but deserializing the bytes to u64s.  This allows for an extra bit of information, but by
    # inserting 0 into the table, it was interpreted `u64::from_ne_bytes([1,0,0,0....,0])` (or whatever the internal bit
    # representation of `0_i64` is on the platform), which is not intended.
+https://github.com/servo/servo/pull/38828	(@averyrudelphe@gmail.com, #38828)	Make DOM geometry structs serializable (#38828)
    dom
    # Makes the following DOM geometry structs serializable: - `DOMRect` - `DOMRectReadOnly` - `DOMQuad` - `DOMMatrix` -
    # `DOMMatrixReadOnly`
    # Testing: Covered by WPT (`css/geometry/structured-serialization.html`).
-https://github.com/servo/servo/pull/38833	(@menonrahul02@gmail.com, #38833)	opts: Add a --force-ipc option (#38833)
    # Testing: servo.org loads properly with `./mach run -- -I` Fixes: https://github.com/servo/servo/issues/38823
+https://github.com/servo/servo/pull/38813	(@arihant2math@gmail.com, #38813)	Stub out IDBIndex (#38813)
    indexeddb
    # Stubs the IDBIndex interface.
    # Testing: Mostly stubbing.  Eventually covered by WPT.  Fixes: Partially #38100
+https://github.com/servo/servo/pull/38819	(@jdm, #38819)	indexeddb: Initialize DB version to zero. (#38819)
    indexeddb
    # None of our automated tests were executing the initial DB setup code because the requested version always matched.
    # Testing: Existing WPT coverage.
+https://github.com/servo/servo/pull/38745	(@longvatrong111, @euclid.ye@huawei.com, #38745)	webdriver: Refactor webdriver session and improve window handles (#38745)
    webdriver
    # This PR contains 2 parts:
    # 1.  Refactor webdriver session.  2.  Improve webdriver window handles: - Webdriver always get window handles from script
    # thread by default.  - If script thread is blocked by user prompt, embedder stores the window handle before user prompt
    # appears, then webdriver can get window handle from embedder.
    # Testing: Clear timeout cause by user prompt blocking script thread:
    # https://github.com/longvatrong111/servo/actions/runs/17033900026
-https://github.com/servo/servo/pull/38755	(@nicoburns, #38755)	Shaper abstraction setup (#38755)
    # # Objective
    # - Reorganise Servo's shaper code in preparation for multiple shaping backends - Make it possible to keep
    # https://github.com/servo/servo/pull/38707 up-to-date with `main` with minimal conflicts
    # ## Changes made
    # - Split `components/fonts/shaper.rs` into `components/fonts/shapers/mod.rs` and `components/fonts/shapers/harfbuzz.rs` -
    # Add traits for generic shapers - `ShapedGlyphData` now takes ownership of the HarfBuzz buffer (`hb_buffer_t`).  This
    # allows it to be returned from the`THarfShaper::shape_text` function.  The buffer is now deallocated in the
    # `ShapedGlyphData`s `Drop` impl.  - Add traits for HarfBuzz-like shapers and move code from `save_glyph_results` function
    # to be generic over those traits so that it can be shared by a future `HarfRust` backend.
-https://github.com/servo/servo/pull/38827	(@mrobinson, #38827)	compositor: Remove `IOCompositor::pipeline_to_webview_map` (#38827)
    # This data structure is now unused after changes to the way that hit testing works.
    # Testing: This is just removing dead code so no tests are necessary.
-https://github.com/servo/servo/pull/38771	(@jerensl, @mukilan, #38771)	script_bindings(python): Add type to a function for `codegen.py` (#38771)
    # This PR focuses on adding type annotations to utility functions, PropertyDefiner, and its child classes.
+https://github.com/servo/servo/pull/38826	(@delan, @atbrakhi, #38826)	devtools: Fix available breakpoint positions with nested scripts (#38826)
    devtools
    # in the [SpiderMonkey Debugger API](https://firefox-source-docs.mozilla.org/js/Debugger/), there is a separate
    # [Debugger.Script](https://firefox-source-docs.mozilla.org/js/Debugger/Debugger.Script.html) object for each function in
    # a script, forming a tree of Script objects.  since we were only issuing
    # [getPossibleBreakpoints()](https://firefox-source-docs.mozilla.org/js/Debugger/Debugger.Script.html#getpossiblebreakpoin
    # ts-query)
    # queries to the [root Script
    # object](https://firefox-source-docs.mozilla.org/js/Debugger/Debugger.html#onnewscript-script-global) for each script, we
    # were failing to report locations inside functions as available for setting breakpoints.
    # this patch fixes that by recursively issuing the getPossibleBreakpoints() requests over the
    # [getChildScripts()](https://firefox-source-docs.mozilla.org/js/Debugger/Debugger.Script.html#getchildscripts) tree.
    # Testing: this patch adds a new devtools test
-https://github.com/servo/servo/pull/38803	(@jschwe, #38803)	mozjs: Remove vendored icu crates (#38803)
    # Instead of vendoring a copy of icu_capi, mozjs now instead determines the location of the provided c header files by
    # parsing the cargo metadata output.  This will allow vendoring mozjs and is a step towards publishing mozjs and thus
    # servo again.  Corresponding mozjs PR: https://github.com/servo/mozjs/pull/596
    # Testing: Covered by existing tests
+https://github.com/servo/servo/pull/38775	(@stevennovaryo, #38775)	layout: Stretch `<input>` inner container to its containing block (#38775)
    layout
    # The `` element inner container should be stretch to its containing block.  This would allow the alignment of the text.
    # This is done by adding `min-width: 100%`.  It is required because we are not using a custom layout contrary to Firefox
    # and Chrome.
    # Testing: New Servo specific WPT.
-https://github.com/servo/servo/pull/38762	(@menonrahul02@gmail.com, #38762)	layout: Measure stacking context tree in layout thread memory report (#38762)
    # Measures the memory usage of the stacking context tree in the memory report of the layout thread by adding
    # `MallocSizeOf` to `StackingContextTree` and all the types required for that.  Also requires adding `MallocSizeOf` to
    # some webrender types.
    # Testing: Manually looked at about:memory
    # Fixes: https://github.com/servo/servo/issues/38725
+https://github.com/servo/servo/pull/38797	(@atbrakhi, #38797)	devtools: Handle `removeBreakpoint` on breakpoint-list actor (#38797)
    devtools
    # The breakpoint-list actor did not implement a handler for the `removeBreakpoint` request, causing the client to receive
    # `unrecognizedPacketType` error.  This patch adds `removeBreakpoint` handler
    # Fixes: Part of #36027
+https://github.com/servo/servo/pull/38810	(@averyrudelphe@gmail.com, #38810)	Add legacy window aliases `SVGMatrix`/`SVGPoint` for `DOMMatrix`/`DOMPoint` (#38810)
    dom
    # Adds the legacy window aliases `SVGMatrix`/`SVGPoint` for `DOMMatrix`/`DOMPoint`.
    # Testing: Covered by WPT (`css/geometry`).
+https://github.com/servo/servo/pull/38784	(@TimvdLippe, #38784)	Implement trusted types for remaining attribute sinks (#38784)
    dom
    # Additionally, several methods were updated with spec comments.  That's because the "adopt the document from the element
    # document" step was missing.
    # By adding these spec comments, I also restructured some code to avoid duplication of mutation records and custom element
    # reaction queueing.
    # Node.textContent doesn't propagate the error yet, as that method has a lot of separate callers of elements that wouldn't
    # fail.  I will refactor those in a follow-up PR to keep things manageable.
    # This implements part of the DOM integration from https://github.com/whatwg/dom/pull/1268
    # Part of #36258
>>> 2025-08-23T06:05:31Z
-https://github.com/servo/servo/pull/38882	(@dependabot[bot], @dependabot[bot], #38882)	build(deps): bump winnow from 0.7.12 to 0.7.13 (#38882)
    # Bumps [winnow](https://github.com/winnow-rs/winnow) from 0.7.12 to 0.7.13.
    # Changelog Sourced from winnow's changelog.
    # [0.7.13] - 2025-08-22 Features
    # Allow accumulating String into String Allow accumulating Cow&lt;str&gt; into String
    # Commits
    # 79b3941 chore: Release dd97729 docs: Update changelog fa07b8b Merge pull request #817 from lu-zero/accumulate-to-string
    # 36d52b3 feat(stream): Generalize Accumulate for String dd6b4b6 docs: Update changelog 6f70ded Merge pull request #805
    # from pingshuijie/main 192293d docs: remove redundant word See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=winnow&package-manager=cargo&p
    # revious-version=0.7.12&new-version=0.7.13)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-de
    # pendabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38881	(@dependabot[bot], @dependabot[bot], #38881)	build(deps): bump idna from 1.0.3 to 1.1.0 (#38881)
    # Bumps [idna](https://github.com/servo/rust-url) from 1.0.3 to 1.1.0.
    # Commits
    # See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=idna&package-manager=cargo&pre
    # vious-version=1.0.3&new-version=1.1.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-depend
    # abot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38880	(@dependabot[bot], @dependabot[bot], #38880)	build(deps): bump sea-query from 1.0.0-rc.10 to 1.0.0-rc.11 (#38880)
    # Bumps [sea-query](https://github.com/SeaQL/sea-query) from 1.0.0-rc.10 to 1.0.0-rc.11.
    # Commits
    # See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=sea-query&package-manager=carg
    # o&previous-version=1.0.0-rc.10&new-version=1.0.0-rc.11)](https://docs.github.com/en/github/managing-security-vulnerabili
    # ties/about-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/38115	(@jdm, #38115)	IndexedDB: Handle missing object stores in object store operations (#38115)
    indexeddb
    # These changes fix a large number of panics that can manifest as intermittent test failures.  They also add more
    # specification text to various IDBObjectStore methods and implement missing steps that check for whether an object store
    # is deleted.
    # Testing: Existing test coverage.
+https://github.com/servo/servo/pull/38734	(@TimvdLippe, #38734)	Remove event handlers when attribute is removed (#38734)
    dom
    # We wouldn't handle the AttributeMutation::Removed for attribute event listeners and wouldn't remove the corresponding
    # event listener.  Added the necessary logic (using the newly EventTarget::is_content_event_handler to correctly only do
    # this for known event handlers) and added links to the relevant parts of the spec.
-https://github.com/servo/servo/pull/38863	(@atouchet, #38863)	Remove accesskit_winit from dependabot.yml (#38863)
    # See: https://github.com/servo/servo/pull/38792#issuecomment-3207312249
    # Testing: No tests for dependabot.yml edit.
+https://github.com/servo/servo/pull/38871	(@TimvdLippe, #38871)	Propagate Trusted Types errors for Node.textContent (#38871)
    dom
    # Part of #36258
-https://github.com/servo/servo/pull/38853	(@mrobinson, #38853)	mach: Split out post build tasks into their own command (#38853)
    # The main reason for this change is that this makes working on this part of the build a lot easier.
    # Testing: No tests for this change as it just rearranges code in the build scripts.
-https://github.com/servo/servo/pull/38868	(@dependabot[bot], @dependabot[bot], #38868)	build(deps): bump cc from 1.2.33 to 1.2.34 (#38868)
    # Bumps [cc](https://github.com/rust-lang/cc-rs) from 1.2.33 to 1.2.34.
    # Changelog Sourced from cc's changelog.
    # 1.2.34 - 2025-08-22 Fixed
    # add -mcpu=mvp and -mmutable-globals for wasm32v1-none (#1524)
    # Other
    # Optimize parse_version in find_tools.rs (#1527) Fallback to manually searching for tool dir (#1526)
    # Commits
    # 06f7709 chore: release v1.2.34 (#1528) 5cee826 Optimize parse_version in find_tools.rs (#1527) 3b6457d Fallback to
    # manually searching for tool dir (#1526) 48f676e fix: add -mcpu=mvp and -mmutable-globals for wasm32v1-none (#1524) See
    # full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=cc&package-manager=cargo&previ
    # ous-version=1.2.33&new-version=1.2.34)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-depend
    # abot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/38857	(@mrobinson, #38857)	script: Do not iterate through all image frames when advancing animated images (#38857)
    performance
    # Instead of iterating through all frames every time we are looking for a particular frame, just index into the `Vec` of
    # frames directly.  This should do less work on every frame transition.
    # Testing: This is just a small optimization, so shouldn't change observable behavior.
-https://github.com/servo/servo/pull/38865	(@dependabot[bot], @dependabot[bot], #38865)	build(deps): bump bitflags from 2.9.2 to 2.9.3 (#38865)
    # Bumps [bitflags](https://github.com/bitflags/bitflags) from 2.9.2 to 2.9.3.
    # Release notes Sourced from bitflags's releases.
    # 2.9.3 What's Changed
    # Streamline generated code by @​nnethercote in bitflags/bitflags#458 Prepare for 2.9.3 release by @​KodrAus in
    # bitflags/bitflags#459
    # New Contributors
    # @​nnethercote made their first contribution in bitflags/bitflags#458
    # Full Changelog: https://github.com/bitflags/bitflags/compare/2.9.2...2.9.3
    # Changelog Sourced from bitflags's changelog.
    # 2.9.3 What's Changed
    # Streamline generated code by @​nnethercote in bitflags/bitflags#458
    # New Contributors
    # @​nnethercote made their first contribution in bitflags/bitflags#458
    # Full Changelog: https://github.com/bitflags/bitflags/compare/2.9.2...2.9.3
    # Commits
    # f59ad49 Merge pull request #459 from KodrAus/cargo/2.9.3 2c3a4f4 prepare for 2.9.3 release 9e1cf3e Merge pull request
    # #458 from nnethercote/streamline-generated-code a3f1f78 Avoid calling InternalBitFlags::{bits,from_bits_retain}.
    # aead794 Avoid local variables in generated code.  See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=bitflags&package-manager=cargo
    # &previous-version=2.9.2&new-version=2.9.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-de
    # pendabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38864	(@dependabot[bot], @dependabot[bot], #38864)	build(deps): bump percent-encoding from 2.3.1 to 2.3.2 (#38864)
    # Bumps [percent-encoding](https://github.com/servo/rust-url) from 2.3.1 to 2.3.2.
    # Commits
    # See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=percent-encoding&package-manag
    # er=cargo&previous-version=2.3.1&new-version=2.3.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/
    # about-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38861	(@dependabot[bot], @dependabot[bot], #38861)	build(deps): bump memmap2 from 0.9.7 to 0.9.8 (#38861)
    # Bumps [memmap2](https://github.com/RazrFalcon/memmap2-rs) from 0.9.7 to 0.9.8.
    # Changelog Sourced from memmap2's changelog.
    # [0.9.8] - 2025-08-22 Added
    # MmapOptions::no_reserve_swap.  @​nhtyy
    # Commits
    # 05b2d0e Merge pull request #154 from RazrFalcon/release/v0.9.8 b59eb44 Bump version to 0.9.8.  2907b1e Merge pull
    # request #153 from nhtyy/n/noreserve 8bfe4e5 Rename noreserve in impl to no_reserve.  3fcecb6 Also support
    # no_reserve_swap() on Illumos.  c8235d7 chore: run cargo fmt beb3d3a fix: apply suggestions to comments 2abbcd6 fix: cfg
    # target_os 7b67e0d fix: update stub and comments ec72e01 fix: noreserve -&gt; noreserve_swap Additional commits viewable
    # in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=memmap2&package-manager=cargo&
    # previous-version=0.9.7&new-version=0.9.8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dep
    # endabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38855	(@euclid.ye@huawei.com, #38855)	webdriver: Simplify webview related steps that are guaranteed to succeed (#38855)
    # Testing: Semantically it is the same.  But still run the test locally and in
    # [try](https://github.com/yezhizhen/servo/actions/runs/17159323926) as I was worried about some unexpected side effect
    # from 176e42d36d49bce2f9b759c3e93faa929e38fa39.  But seems everything is good.
-https://github.com/servo/servo/pull/38860	(@nicoburns, #38860)	Upgrade vello, vello_cpu, skrifa, and read-fonts (#38860)
    # Bumps `vello`, `vello_cpu`,`skrifa`, and `read-fonts` dependencies.
    # Notes: - The primary motivation for this is so that our version of `read-fonts` matches the version used by current
    # releases of `harfrust` - `vello_cpu` now defaults to `RenderMode::OptimizeSpeed` so we don't need to pass this
    # explicitly.
-https://github.com/servo/servo/pull/38856	(@mrobinson, #38856)	fonts: Stop using deprecated functions in `dwrote` (#38856)
    # The new version of the functions return `Result` types.
    # Testing: No tests because this should not change behavior.
-https://github.com/servo/servo/pull/38851	(@mrobinson, #38851)	fonts: Use `fontations` to read the OS/2 table of DirectWrite fonts (#38851)
    # Instead of copying the font table data in memory and parsing it with the `truetype` crate, use a non-copying API from
    # DirectWrite to implement a `fontations` `TableProvider`.  This has two benefits:
    # - We remove the dependency on the `truetype` crate finally.  - We do not have to make an in-memory copy of the table
    # data when
    #   parsing the table.
    # The hope is that the `TableProvider` will be more generally useful in the future.
    # Testing: There are no automated tests for Windows, but I manually verified that the data retrived via `fontations`
    # matched that retrived by `truetype`.
+https://github.com/servo/servo/pull/38495	(@abdelrahman1234567, #38495)	script: Add `FocusOptions` argument to `Element.focus` and implement `FocusOptions.preventScroll` (#38495)
    dom
    # This is an implementation of the `prevent_scroll` feature in the focus transaction system.  It allows to control whether
    # focusing an element should prevent scrolling or not.
    # Spec: https://html.spec.whatwg.org/multipage/interaction.html#dom-focusoptions-preventscroll Testing: Existing WPT tests
+https://github.com/servo/servo/pull/38831	(@mrobinson, #38831)	fonts: Add font variations support for Windows (#38831)
    css
    # Unlike other platforms where we read the default axis values and combine it with variations from style to make the font
    # face, we set the variations from the style when creating the font face and then read the final variations from the face.
    # It seems that DirectWrite does the normalization of variation values internally.
    # This depends on servo/dwrote-rs#68.
    # Testing: We currently don't have tests for Windows, but variation support is covered by the WPT tests.  Fixes: This is
    # part of #38800.
+https://github.com/servo/servo/pull/38832	(@mrobinson, #38832)	fonts: Add support for `format(*-variations)` to `@font-face` (#38832)
    css
    # This is necessary to fully support font variations.
    # Testing: This will be tested once variations are enabled.  Fixes: This is part of #38800.
+https://github.com/servo/servo/pull/38825	(@shubhamg13, #38825)	layout: Remove workaround for `body` while building overflow frame for `StackingContextTree` construction. (#38825)
    layout
    # While building the stacking context tree we were assuming that `` would have propagated its `overflow` value to the
    # viewport, and thus its used `overflow` would be `visible`.
    # However, the element that propagates `overflow` can be the root element instead.  Since #38598 we are correctly taking
    # this into account in `effective_overflow()`, so we no longer need to do anything special in the stacking context logic.
    # Testing: `css/css-overflow/overflow-body-propagation-012.html`
    # Fixes: #38799
-https://github.com/servo/servo/pull/38759	(@mrobinson, #38759)	script: Ensure that leaving the `WebView` sets the cursor back to the default cursor (#38759)
    # This changes makes a variety of changes to ensure that the cursor is set back to the default cursor when it leaves the
    # `WebView`:
    # 1.  Display list updates can come after a mouse leaves the `WebView`, so
    #    when refreshing the cursor after the update, base the updated cursor on the last hovered location in the
    #    `DocumentEventHandler`, rather than the compositor.  This allows us to catch when the last hovered position is `None`
    #    (ie the cursor has left the `WebView`).
    # 2.  When handling `MouseLeftViewport` events for the cursor leaving the
    #    entire WebView, properly set the MouseLeftViewport::focus_moving_to_another_iframe` on the input event passed to the
    #    script thread.
    # 3.  When moving out of the `WebView` entirely, explicitly ask the
    #    embedder to set the cursor back to the default.
    # Testing: This change adds a unit test verifying this behavior.  Fixes: #38710.
+https://github.com/servo/servo/pull/38841	(@euclid.ye@huawei.com, #38841)	webdriver: Consider shadow including descendant when computing "obscured" step of “element click” (#38841)
    webdriver
    # Testing: WebDriver Conformance test.  In addition to fixing all "Element Intercepted" errors in
    # https://github.com/yezhizhen/servo/actions/runs/17142506541, we are able to fix many other tests.  Fixes: #38837
+https://github.com/servo/servo/pull/38444	(@Kenzie.Raditya.Tirtarahardja@huawei.com, @euclid.ye@huawei.com, #38444)	webdriver: Element Send keys use dispatch actions for KeyboardEvent (#38444)
    webdriver
    # Previously we immediately passed the KeyboardEvent to embedder.  Now we make element send keys go through the dispatch
    # action which required by spec.  CompositionEvent still immediately passed through embedder
    # Testing: Should make `./tests/wpt/tests/webdriver/tests/classic/element_send_keys/` more stable.  Fixes:
    # https://github.com/servo/servo/issues/38354 Fixes: https://github.com/servo/servo/issues/38442
-https://github.com/servo/servo/pull/38834	(@criskell, #38834)	Make transaction field non-null in IDBObjectStore (#38834)
    # In the `IDBObjectStore::new` constructor, the `transaction` field is initialized to null, but when using this
    # constructor, we always execute `set_transaction` immediately afterward.  Therefore, we refactored to require the
    # `transaction` field to be specified during construction and thereby also removed some no longer necessary assertions.
    # We also updated the `transaction` field in WebIDL to remove the nullable capability.
    # Testing: WPT Fixes: #38814
+https://github.com/servo/servo/pull/38676	(@gterzian, @mrobinson, #38676)	script: abort planned form navigations (#38676)
    dom
    # Servo shows a behavior unlike FF and Safari(I don't have Chrome), where stopping a window does not cancel planned form
    # navigation, resulting in an infinite navigation loop.  The current behavior of Servo does seem to follow the wording of
    # the spec, so I will open a [companion issue at the spec](https://github.com/whatwg/html/issues/11562), and I have also
    # written a WPT tests for the non-standard but widely followed behavior.  This PR also adds a beginning of an
    # implementation of the "ongoing navigation" concept, which is used by the spec to cancel navigations, and which is used
    # in this PR only to cancel planned form navigations.  The generation id concept, which corresponds to the planned
    # navigation concept in the spec, is turned into a simple struct private cell, and is documented per the spec.
    # Testing: A new WPT test is added Fixes: Only one part of https://github.com/servo/servo/issues/36747
-https://github.com/servo/servo/pull/38821	(@stevennovaryo, #38821)	dom: Implement textual `<input>` lazy initialized placeholder (#38821)
    # Following #37527, every textual input is constructing the containers for value and placeholder.  However not all of
    # textual `` element require the initialization of such placeholder container.  This is apparent with JS UI framework that
    # defines its own placeholder management.
    # This PR add lazy initialization for placeholder which construct the relevant HTML elements for placeholder container
    # whenever it is necessary.
    # Testing: Existing WPT coverage
-https://github.com/servo/servo/pull/38838	(@euclid.ye@huawei.com, #38838)	webdriver: Simplify deserialize `window_handles: Vec<String>` (#38838)
    # We don't need to serialize internal String and then serialize the Result type.
    # Testing: Tested.  No behaviour change.
>>> 2025-08-24T06:15:09Z
-https://github.com/servo/servo/pull/38892	(@arihant2math@gmail.com, #38892)	cargo: Remove unused workspace dependencies (#38892)
    # These aren't referenced anywhere, so they needlessly clutter the `workspace.dependencies` section.
    # Testing: N/A Fixes: None
-https://github.com/servo/servo/pull/38893	(@servo-wpt-sync, #38893)	Sync WPT with upstream (24-08-2025) (#38893)
    # Automated downstream sync of changes from upstream as of 24-08-2025 [no-wpt-sync]
-https://github.com/servo/servo/pull/38870	(@nicoburns, @mrobinson, #38870)	Use `Tag` type from font-types crate to represent opentype tags (#38870)
    # The `font-types` crate is the tiny type-only base crate of `fontations`.  This uses a strongly typed representation of
    # open type tags, and allows us to remove our custom macro for creating them.
-https://github.com/servo/servo/pull/38887	(@jschwe, #38887)	mach: Improve test-speedometer error reporting (#38887)
    # Currently speedometer results are parsed by parsing the console output from stdout (or a file in the case of ohos).
    # Currently json decode errors just cause mach to crash.  Instead print an error message, point to the problematic
    # location and exit.  A crash can happen if something else also prints, e.g.  on macos, we have the `xx threads are still
    # running` message at shutdown.  Hence this PR doesn't really fix the unreliable nature of the current implementation, but
    # at least adds a helpful error message, which would point people in the right direction.
    # Testing: test-speedometer is run in CI
-https://github.com/servo/servo/pull/38867	(@dependabot[bot], @dependabot[bot], #38867)	build(deps): bump io-uring from 0.7.9 to 0.7.10 (#38867)
    # Bumps [io-uring](https://github.com/tokio-rs/io-uring) from 0.7.9 to 0.7.10.
    # Commits
    # See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=io-uring&package-manager=cargo
    # &previous-version=0.7.9&new-version=0.7.10)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-d
    # ependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38869	(@dependabot[bot], @dependabot[bot], #38869)	build(deps): bump form_urlencoded from 1.2.1 to 1.2.2 (#38869)
    # Bumps [form_urlencoded](https://github.com/servo/rust-url) from 1.2.1 to 1.2.2.
    # Commits
    # da5c7c6 Auto merge of #233 - nox:ice, r=SimonSapin 72b95ed Bump version to 1.2.2 63142b2 Work around an unfortunate ICE
    # 8a4fb9b Auto merge of #232 - hngiang:master, r=SimonSapin 99d3b1b Auto merge of #231 - Arnavion:fix-230, r=SimonSapin
    # f20288d Change word URl to uppercase URL 6492574 Teach to_file_path to understand percent-encoded drive letters on
    # Windows.  See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=form_urlencoded&package-manage
    # r=cargo&previous-version=1.2.1&new-version=1.2.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/a
    # bout-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/38884	(@kongbai1996, @yezhizhen, #38884)	layout: Skip adding `ScrollFrameHitTestItem` to stacking context tree if the `BoxFragment` has inherited style `pointer-events: none` (#38884)
    layout
    # **fix some page cannot slide** In the refactoring of https://github.com/servo/servo/pull/38480, a segment of logic was
    # missing.
    # https://github.com/servo/servo/blob/11844ca5af97999f35b12d082ea9bfda9d18a74a/components/layout/display_list/mod.rs#L405-
    # L410
    # Testing: The page can be scrolled on the OpenHarmony device.  Fixes:
    # https://github.com/servo/servo/pull/38480#issuecomment-3213734994
>>> 2025-08-25T06:06:59Z
-https://github.com/servo/servo/pull/38854	(@jschwe, #38854)	generic_channel: Preserve IPC errors (#38854)
    # We should not be using `route_ipc_receiver_to_new_crossbeam_receiver` or similar methods, that `unwrap()` on the ROUTER
    # thread if they encounter IPC errors.  Instead, we now propagate the error to the crossbeam receiver.  In the
    # GenericChannel::Crossbeam case this means, that we need to use a `Result` as the data type, even though the Result
    # variant is always okay, so that the receiver type is the same regardless of `IPC` or not.  This is required, so we have
    # the same channel type, and can pass the inner crossbeam channel into e.g.  `select!`, without having to wrap or
    # re-implement select.
    # This also means, that as we switch towards GenericChannel, we will gradually improve our error handling and eventually
    # remove the existing panics on IPC errors.
    # These changes were extracted out of https://github.com/servo/servo/pull/38782
    # Testing: Covered by existing tests.  No new panics were introduced.
-https://github.com/servo/servo/pull/38899	(@sagudev, #38899)	CODEOWNERS: add sagudev for canvas and WebGPU components (#38899)
    # Not sure how useful it is given that I usually deal with these two components, but at least it will keep stuff from
    # other people on my radar.
    # Testing: Not needed, just github stuff
-https://github.com/servo/servo/pull/38898	(@mrobinson, #38898)	fonts: Add more types to `fonts_traits` (#38898)
    # This is necessary so that `constellation_traits` can get these types via a dependency on `fonts_traits`.  This will
    # allow sending IPC channels to shared workers so that they can have access to a shared `FontContext` from `script`.
    # Testing: This just moves code between crates, so is covered by existing tests.
+https://github.com/servo/servo/pull/38889	(@euclid.ye@huawei.com, #38889)	webdriver: Focus when "switch to window" (#38889)
    webdriver
    # Add logic that was accidentally removed in #38745.  Otherwise it is very weird when using webdriver as a human, as we
    # still stays on the original tab.
    # Testing: ~this should not affect any test.  Even if the tab is not "visible" previously, all programmatic interaction
    # works fine.~ Stably pass `test_history_pushstate` in `back.py` and `forward.py`.
-https://github.com/servo/servo/pull/38879	(@dependabot[bot], @dependabot[bot], @mrobinson, #38879)	build(deps): bump url from 2.5.3 to 2.5.6 (#38879)
    # Bumps [url](https://github.com/servo/rust-url) from 2.5.3 to 2.5.6.
    # Release notes Sourced from url's releases.
    # v2.5.5 What's Changed
    # ci: downgrade crates when building for Rust 1.67.0 by @​mxinden in servo/rust-url#1003 ci: run unit tests with
    # sanitizers by @​mxinden in servo/rust-url#1002 fix small typo by @​hkBst in servo/rust-url#1011 chore: fix clippy errors
    # on main by @​dsherret in servo/rust-url#1019 perf: remove heap allocation in parse_query by @​dsherret in
    # servo/rust-url#1020 perf: slightly improve parsing a port by @​dsherret in servo/rust-url#1022 perf: improve
    # to_file_path() by @​dsherret in servo/rust-url#1018 perf: make parse_scheme slightly faster by @​dsherret in
    # servo/rust-url#1025 update LICENSE-MIT by @​wmjae in servo/rust-url#1029 perf: url encode path segments in longer string
    # slices by @​dsherret in servo/rust-url#1026 Disable the default features on serde by @​rilipco in servo/rust-url#1033
    # docs: base url relative join by @​tisonkun in servo/rust-url#1013 perf: remove heap allocation in parse_host by
    # @​dsherret in servo/rust-url#1021 Update tests to Unicode 16.0 by @​hsivonen in servo/rust-url#1045 Add some some basic
    # functions to Mime by @​mrobinson in servo/rust-url#1047 ran cargo clippy --fix -- -Wclippy::use_self by @​mrobinson in
    # servo/rust-url#1048 Fix MSRV and clippy CI by @​Manishearth in servo/rust-url#1058 Update Url::domain docs to show that
    # it includes subdomain by @​supercoolspy in servo/rust-url#1057 set_hostname should error when encountering colon ':' by
    # @​edgul in servo/rust-url#1060 version bump to 2.5.5 by @​edgul in servo/rust-url#1061
    # New Contributors
    # @​mxinden made their first contribution in servo/rust-url#1003 @​hkBst made their first contribution in
    # servo/rust-url#1011 @​wmjae made their first contribution in servo/rust-url#1029 @​rilipco made their first contribution
    # in servo/rust-url#1033 @​tisonkun made their first contribution in servo/rust-url#1013 @​supercoolspy made their first
    # contribution in servo/rust-url#1057
    # Full Changelog: https://github.com/servo/rust-url/compare/v2.5.4...v2.5.5 v2.5.4 What's Changed
    # Revert &quot;Normalize URL paths: convert /.//p, /..//p, and //p to p (#943)&quot; by @​valenting in servo/rust-url#999
    # Updates the MSRV to 1.63 required though the libc v0.2.164 dependency
    # Full Changelog: https://github.com/servo/rust-url/compare/v2.5.3...v2.5.4
    # Commits
    # See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=url&package-manager=cargo&prev
    # ious-version=2.5.3&new-version=2.5.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependa
    # bot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38894	(@arihant2math@gmail.com, #38894)	script: Move webaudio DOM interfaces to `script/dom/audio/` (#38894)
    # Moves interfaces defined by the webaudio spec (27 files) to the new `script/dom/audio/` module from the `script/dom/`
    # module.
    # Testing: Just a refactor shouldn't need any testing Fixes: N/A
>>> 2025-08-26T06:02:20Z
-https://github.com/servo/servo/pull/38896	(@criskell, #38896)	Move unsafe to the wrap method for global objects (#38896)
    # The method now doesn't need unsafe in its signature because it no longer accepts unsafe pointers as arguments.  We move
    # the unsafe marker to the method itself.
    # Testing: I opened the browser and went to google.com; I ran some WPT (IndexedDB) tests.  Fixes: #38361
-https://github.com/servo/servo/pull/38919	(@jschwe, #38919)	script: Clean-up IpcSend .sender().send() pattern (#38919)
    # The IpcSend trait defines a `send()` method, so doing .sender().send() seems like it just adds a useless clone of the
    # sender, when we could just `send()` directly.  This only cleans up the direct usages of this pattern, there are more
    # instances, where a helper method is defined, which returns the IpcSender, and the only usages also just directly call
    # send.
    # Testing: No functional changes
+https://github.com/servo/servo/pull/38739	(@gterzian, #38739)	script: when handling page headers, stop if pipeline closed already (#38739)
    stability
    # Previously, the script-thread would assert the pipeline was closed if no pending load was found, but it did not check
    # whether the pipeline was closed before processing the page headers.  Since incomplete loads are removed only when page
    # headers are processed, this means the page headers were processed even if the pipeline had been closed before the page
    # headers were available.  If the pipeline had been closed as part of exiting the constellation, it was possible for the
    # constellation to have exited by the time the page headers became available(since the script-thread closes a pipeline
    # independently from ongoing navigation fetches), which would produce a panic on trying to communicate with the
    # constellation to obtain the browsing context info.
    # Note: due to the nature of the problem, I cannot verify that this fixes the crash test, although logically this appears
    # to make sense, and a couple of days of WPT runs should tell us more.
    # Testing: A crash test was added; unfortunately the crash was intermittent.  Fixes:
    # https://github.com/servo/servo/issues/36747
-https://github.com/servo/servo/pull/38915	(@jschwe, #38915)	webdriver: Port WebDriverLoadStatus to Generic Channel (#38915)
    # Ports the channel for WebDriverLoadStatus to GenericChannel.
    # Testing: No functional changes - Covered by existing webdriver tests Part of #38912
+https://github.com/servo/servo/pull/38916	(@ibluegalaxy_taoj@163.com, #38916)	script: mark image-related node dirty only when image resource loaded (#38916)
    performance
    # Previously, we would always mark the image-related nodes as dirty whenever the fetch status of the image resources
    # changed.  However, the corresponding `ImageDisplayItem`s for these image resources are only generated after the image
    # resources have been fully fetched and decoded.  Therefore, we only mark the corresponding DOM nodes as dirty when the
    # image resources are completely loaded, thereby reducing the occurrence of reflows.
-https://github.com/servo/servo/pull/38913	(@jschwe, #38913)	constellation: Migrate namespace channel to GenericChannel (#38913)
    # Migrates the namespace sender and receiver to use GenericChannel
    # Testing: Covered by existing tests Part of #38912
-https://github.com/servo/servo/pull/38908	(@mrobinson, #38908)	script: Wrap unsafe code in `globalscope.rs` in `unsafe {}` blocks (#38908)
    # This is a step toward fixing Rust warnings about unsafe code needing to be wrapped in `unsafe {}` blocks.
    # Testing: This does not change behavior is thus covered by existing tests.
-https://github.com/servo/servo/pull/38782	(@jschwe, #38782)	GenericChannel: Migrate compositor channels to GenericChannel (#38782)
    # Besides migrating the channel to GenericChannel, this PR adds `routed_channel_with_local_sender()` to `generic_channel`.
    # This is for existing use-cases, where we want to provide both an IPC capable GenericSender, as well as a crossbeam
    # Sender, for efficient sending if the sender is in the same process.
    # Testing: All of our channels should send / receive at least some messages during WPT tests.
-https://github.com/servo/servo/pull/38873	(@jschwe, #38873)	generic_channel: Support sending GenericChannel::Crossbeam over IPC (#38873)
    # In Single-process mode, sending crossbeam channels over an ipc channel is perfectly safe to do (since everything is in
    # the same process) and allows us to more easily incrementally port channels.
    # In Multi-process mode, GenericChannels will always be IPC channels, so we won't hit the "serialize crossbeam channels"
    # branch (since the only way to construct channels, checks the process mode).  This property is ensured by `channel()`
    # being the only way to construct a `GenericSender` and Receiver pair.  To achieve this, we make the previously `pub` enum
    # private, and wrap it in a newtype, so that the type can't be constructed from outside the module.  To be extra safe, we
    # still check if we are in multiprocess mode or not during (de-)serialization and emit an error.
    # Testing: Add a new unit-test to ensure sending GenericSender / Receivers over an ipc_channel works.
-https://github.com/servo/servo/pull/38897	(@mrobinson, #38897)	canvas: Make clippy allow statements more fine-grained in `canvas_paint_thread.rs` (#38897)
    # Move `allow(too_many_arguments)` to the functions that have that issue and remove `allow(unreachable_pattern)`.  Since
    # the `Canvas` enum is also using conditional compilation the default pattern is not necessary.
    # Testing: This should not change any behavior and thus is covered by existing tests.
>>> 2025-08-27T06:11:40Z
-https://github.com/servo/servo/pull/38958	(@dependabot[bot], @dependabot[bot], #38958)	build(deps): bump clap from 4.5.45 to 4.5.46 (#38958)
    # Bumps [clap](https://github.com/clap-rs/clap) from 4.5.45 to 4.5.46.
    # Release notes Sourced from clap's releases.
    # v4.5.46 [4.5.46] - 2025-08-26 Features
    # Expose StyledStr::push_str
    # Changelog Sourced from clap's changelog.
    # [4.5.46] - 2025-08-26 Features
    # Expose StyledStr::push_str
    # Commits
    # acf9abb chore: Release 9186a18 docs: Update changelog 233c316 Merge pull request #5926 from
    # sorairolake/feature/value-parser-factory-for-sa...  13931a2 Merge pull request #5923 from Reverier-Xu/master 536e29f
    # feat(builder): Add ValueParserFactory for Saturating\&lt;T&gt; 45ed71c chore: Avoid using gen for rust 2024 preserved
    # keyword 5029bb3 chore: Avoid using gen for rust 2024 preserved keyword 8a1d59b chore(deps): Update Rust Stable to v1.85
    # (#5921) 9caee53 docs(changelog): Clarify 5.0.0 cb2352f Merge pull request #5918 from epage/test Additional commits
    # viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=clap&package-manager=cargo&pre
    # vious-version=4.5.45&new-version=4.5.46)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-depe
    # ndabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38862	(@dependabot[bot], @dependabot[bot], @mrobinson, @euclid.ye@huawei.com, #38862)	build(deps): bump data-url from 0.3.1 to 0.3.2 (#38862)
    # Bumps [data-url](https://github.com/servo/rust-url) from 0.3.1 to 0.3.2.
    # Commits
    # See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=data-url&package-manager=cargo
    # &previous-version=0.3.1&new-version=0.3.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-de
    # pendabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38935	(@stevennovaryo, #38935)	layout: Parameterize content box query (#38935)
    # Parameterize and rename both `Layout::content_box_query` and `Layout::content_boxes_query` to support the query of
    # rendered padding area and content area that accounts for transform and scroll.  Both of these query have been misleading
    # for a time since they are using border box, instead of content box of a Node.
    # This PR adds a new type `layout_api::BoxAreaType` to be passed from `ScriptThread` to `LayoutThread` to query the
    # respective area.  It is then used for the query within `IntersectionObserver` to pass several WPTs.
    # Testing: Existing WPT Coverage.
-https://github.com/servo/servo/pull/38932	(@jschwe, #38932)	Port StorageThreadMsg to GenericChannel (#38932)
    # This change includes the following additions to GenericChannel: - Add a GenericSend trait which is meant to replace the
    # `IpcSend` trait over time, as channels are migrated.  For the time being this means, that we often need to use
    # `GenericSend::send()` to disambiguate from the `IpcSend::send` function, until all usages of `IpcSend` have been
    # replaced.  - Add an OpaqueSender impl for GenericSender - Add a profiled version of GenericChannel.  The profiling is
    # 1:1 the same as for the existing profiled IPC channel, namely that only the blocked time during `recv` is measured.
    # Testing: No functional changes, covered by existing tests Part of #38912
-https://github.com/servo/servo/pull/38950	(@simonwuelker, #38950)	Update image to 0.25 (#38950)
    # Testing: These changes should be covered by existing web platform tests and `image`'s own test suite.
-https://github.com/servo/servo/pull/38954	(@dependabot[bot], @dependabot[bot], #38954)	build(deps): bump zvariant from 5.6.0 to 5.7.0 (#38954)
    # Bumps [zvariant](https://github.com/dbus2/zbus) from 5.6.0 to 5.7.0.
    # Release notes Sourced from zvariant's releases.
    # 🔖 zvariant 5.7.0
    # 🐛 Reduce allocations in OwnedValue::try_from.
    #  Add Value::try_into_owned.  Doing as few allocations as possible.
    # 📝 Document when ObjectPath::into_owned clones.
    # Commits
    # 0e33c8e Merge pull request #1476 from zeenix/releases f1aa56a 🔖 zb: Release 5.10.0 b6f6d81 🔖 zv: Release 5.7.0 70edef0
    # 🔖 zu: Release 3.2.1 62122f5 ️ micro: Update quick-xml to v0.38.3 (#1475) 568375f ️ micro: Update url to v2.5.7 (#1474)
    # 6550f22 Merge pull request #1472 from swick/wip/fix-creds-group-lookup c5cd9cc 🐛 zb: Fall back to no groups rather than
    # erroring out for peer creds a24251f ️ micro: Update winnow to v0.7.13 (#1473) 54ec4ba ️ micro: Update url to v2.5.6
    # (#1471) Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=zvariant&package-manager=cargo
    # &previous-version=5.6.0&new-version=5.7.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-de
    # pendabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38951	(@simonwuelker, #38951)	script: Move operations in `window_named_properties::get_own_property_descriptor` & `webdriver_handlers::clone_an_object` into unsafe blocks (#38951)
    # Testing: Covered by existing tests Part of https://github.com/servo/servo/issues/35955
-https://github.com/servo/servo/pull/38941	(@mrobinson, @mukilan, #38941)	script: Integrate animated image updates into `ScriptThread` event loop (#38941)
    # Instead of manually triggering `ScriptThread::update_the_rendering`, have animated images trigger rendering updates via
    # the `ScriptThread` event loop.  This should result in fewer calls to `ScriptThread::update_the_rendering`.
    # Testing: This should not change behavior and is thus covered by existing tests.
-https://github.com/servo/servo/pull/38858	(@mrobinson, #38858)	script: Generate only a single frame during "update the rendering" (#38858)
    # Instead of generating a frame for every display list, which might be one rendered frame per ``, generate only a single
    # frame per call to "update the rendering." This should make rendering more efficient when there are ``s present and also
    # open up optimizations for non-display list frames.
    # Testing: This could potentially reduce flashing of content during rendering updates, but that is very difficult to test.
-https://github.com/servo/servo/pull/38918	(@mrobinson, #38918)	script: Move `FontContext` from `Window` to `GlobalScope` (#38918)
    # This change makes it so that every `GlobalScope` can contain an optional `FontContext`.  This will be necessary for
    # every `GlobalScope` that accesses canvas.  Currently, `FontContext` is created and accessed via the canvas worker
    # thread, but this means that web fonts are not available to canvas.  This change will eventually make it possible for
    # canvas to share web fonts with the `Document` that owns them.
    # Testing: This should not change behavior and is thus covered by existing tests.
-https://github.com/servo/servo/pull/38923	(@gterzian, @mrobinson, #38923)	constellation: send EmbedderMsg::ShutdownComplete as last (#38923)
    # To help ensure our internal threads have shut-down before we deinit Servo, the last thing the constellation should do,
    # is sending the `EmbedderMsg::ShutdownComplete`.
    # Testing: Manual testing by starting Servo and then closing the window.  Fixes: Part of
    # https://github.com/servo/servo/issues/30849
-https://github.com/servo/servo/pull/38940	(@mukilan, #38940)	Revert "GenericChannel: Migrate compositor channels to GenericChannel (#38782)" (#38940)
    # This reverts commit fb1c0a4c48dee5791b8785e5d5d4906b935bdb76.
    # Previously in `create_compositor_channel`, the [routing callback][1] was setup so that a message received on the
    # Compositor's IPC receiver will be forwarded to the local receiver using the `CompositorProxy` which also takes care of
    # waking up the event loop.  In #38782, this was changed so that the routing callbacks simply forwards the message
    # directly without going via the `CompositorProxy`.  This breaks behaviours that rely on the event loop being woken up on
    # message sending, e.g.  updating image frames for animated gifs.
    # Since the GenericChannel API doesn't allow custom routing callbacks, revert this change until we figure out a better
    # solution.
    # [1]: https://github.com/servo/servo/blob/d2ccce6052a6cff7ddee67f4e8d2823a04366058/components/servo/lib.rs#L1114
    # Signed-off-by: Mukilan Thiyagarajan
+https://github.com/servo/servo/pull/38943	(@euclid.ye@huawei.com, #38943)	script: Fix wrong procedure when deserializing `JSValue` from mozjs `HandleValue` (#38943)
    webdriver
    # Spec: https://w3c.github.io/webdriver/#dfn-internal-json-clone
    # This PR 1.  moves [clone an object](https://w3c.github.io/webdriver/#dfn-clone-an-object) to `fn clone_an_object` to
    # make things clearer.  2.  Fixes the bug where we wrongly put `element` and `WindowProxy` as part of [clone an
    # object](https://w3c.github.io/webdriver/#dfn-clone-an-object), which leads to false-positive `JSError` before.  3.
    # Update spec links to correct ones.
    # Testing: New passing in `{execute_async_script,execute_script}/node.py`
-https://github.com/servo/servo/pull/38924	(@gterzian, #38924)	layout: Shut down style thread-pool when exiting a content process / shutting down the Constellation (#38924)
    # To ensure a clean-shutdown of Servo, we need to shutdown our internal threading before deinit.  This shuts down the
    # style thread pool either using the constellation(in single-process mode), or when a content process exits.
    # Testing: Manual testing by opening a window, opening and closing multiple tabs, and closing the window, with a sleep
    # added before deinit and a sample taken to ensure the loose threads previously noticed are gone.  Fixes: part of
    # https://github.com/servo/servo/issues/30849
-https://github.com/servo/servo/pull/38922	(@criskell, #38922)	Add scroll tree measurement in IOCompositor (#38922)
    # Adds a new memory report that aggregates the size of all scroll trees from within all pipelines for each web view.
    # Testing: Acessing `about:memory` Fixes: #38726
-https://github.com/servo/servo/pull/38930	(@dependabot[bot], @dependabot[bot], #38930)	build(deps): bump async-compression from 0.4.27 to 0.4.28 (#38930)
    # Bumps async-compression from 0.4.27 to 0.4.28.
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=async-compression&package-mana
    # ger=cargo&previous-version=0.4.27&new-version=0.4.28)](https://docs.github.com/en/github/managing-security-vulnerabiliti
    # es/about-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38933	(@delan, @atbrakhi, #38933)	devtools: Reland test improvements from #38614 minus CI changes (#38933)
    # #38614 was reverted due to CI flakiness, but it also included several improvements to the devtools tests.  this patch
    # relands those improvements, described below.
    # we make three changes that speed up the devtools tests from 73 → 65 → 56 → 51 seconds:
    # - we replace the hardcoded sleep(1) after starting servoshell with a loop that waits until the devtools port is open
    # (this also fixes intermittent failures when servoshell starts too slowly, especially on macOS) - we start the internal
    # web servers once, and reuse them across all tests - we run servoshell in headless mode (this is also required because
    # most CI runners have no GUI)
    # and we fix two bugs that cause very noisy but not very interesting error messages:
    # - in the test code, we use a [context manager](https://docs.python.org/3/reference/datamodel.html#context-managers) to
    # ensure the devtools client is disconnected unconditionally, even if test methods or assert helper methods raise
    # exceptions (this was causing errors on all platforms) - in the devtools server, we treat “connection reset” errors when
    # reading from the client like a normal EOF, rather than as a failure (this was causing errors on Windows)
    # on self-hosted linux builds, there are still spurious error messages like the following, but we can fix them later:
    # ``` error: XDG_RUNTIME_DIR not set in the environment.  libEGL warning: egl: failed to create dri2 screen ```
    # Testing: this patch improves the devtools tests, but does not change their coverage Fixes: part of #36325
-https://github.com/servo/servo/pull/38937	(@dependabot[bot], @dependabot[bot], #38937)	build(deps): bump regex from 1.11.1 to 1.11.2 (#38937)
    # Bumps [regex](https://github.com/rust-lang/regex) from 1.11.1 to 1.11.2.
    # Changelog Sourced from regex's changelog.
    # 1.11.2 (2025-08-24) This is a new patch release of regex with some minor fixes.  A larger number of typo or lint fix
    # patches were merged.  Also, we now finally recommend using std::sync::LazyLock.  Improvements:
    # [BUG #1217](rust-lang/regex#1217): Switch recommendation from once_cell to std::sync::LazyLock.  [BUG
    # #1225](rust-lang/regex#1225): Add DFA::set_prefilter to regex-automata.
    # Bug fixes:
    # [BUG #1165](rust-lang/regex#1150): Remove std dependency from perf-literal-multisubstring crate feature.  [BUG
    # #1165](rust-lang/regex#1165): Clarify the meaning of (?R)$ in the documentation.  [BUG #1281](rust-lang/regex#1281):
    # Remove fuzz/ and record/ directories from published crate on crates.io.
    # Commits
    # d0aa586 1.11.2 a3bf4ad regex-cli-0.2.2 25a15e2 rure-0.2.3 45c3da7 regex-lite-0.1.7 873ed80 regex-automata-0.4.10 ea834f8
    # regex-syntax-0.8.6 86836fb changelog: 1.11.2 63a26c1 cargo: ensure that 'perf' doesn't enable 'std' implicitly (#1150)
    # dd96592 doc: clarify CRLF mode effect 931dae0 cargo: point repository metadata to clonable URLs Additional commits
    # viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=regex&package-manager=cargo&pr
    # evious-version=1.11.1&new-version=1.11.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dep
    # endabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38934	(@dependabot[bot], @dependabot[bot], #38934)	build(deps): bump indexmap from 2.10.0 to 2.11.0 (#38934)
    # Bumps [indexmap](https://github.com/indexmap-rs/indexmap) from 2.10.0 to 2.11.0.
    # Changelog Sourced from indexmap's changelog.
    # 2.11.0 (2025-08-22)
    # Added insert_sorted_by and insert_sorted_by_key methods to IndexMap, IndexSet, and VacantEntry, like customizable
    # versions of insert_sorted.  Added is_sorted, is_sorted_by, and is_sorted_by_key methods to IndexMap and IndexSet, as
    # well as their Slice counterparts.  Added sort_by_key and sort_unstable_by_key methods to IndexMap and IndexSet, as well
    # as parallel counterparts.  Added replace_index methods to IndexMap, IndexSet, and VacantEntry to replace the key (or set
    # value) at a given index.  Added optional sval serialization support.
    # Commits
    # 91d53ad Merge pull request #409 from cuviper/release-2.11.0 cf566a7 Release 2.11.0 2e173dc Merge pull request #408 from
    # cuviper/is_sorted e4bb7d0 Add is_sorted{,_by,_by_key} 0f40489 Merge pull request #407 from cuviper/sort_by_key ab9e461
    # Add sort_by_key and sort_unstable_by_key a468ca4 Normalize to ASCII apostrophes 7939ae9 Merge pull request #406 from
    # cuviper/more-insert_sorted_by 354345b Take two entries in insert_sorted_by 314ec7d Add quick checks for insert_sorted_by
    # Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=indexmap&package-manager=cargo
    # &previous-version=2.10.0&new-version=2.11.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-
    # dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38931	(@dependabot[bot], @dependabot[bot], #38931)	build(deps): bump zvariant_derive from 5.6.0 to 5.7.0 (#38931)
    # Bumps [zvariant_derive](https://github.com/dbus2/zbus) from 5.6.0 to 5.7.0.
    # Commits
    # 32f3a31 Merge pull request #1374 from zeenix/zbus-release 731d658 🔖 zb,zm: Release 5.7.0 2a4d53d Merge pull request
    # #1373 from dbus2/zv-release 8cfdf90 🔖 zv,zd: Release 5.5.2 b08ec81 ️ all: Bump micro version in Cargo.lock 6cced13
    # Merge pull request #1372 from zeenix/split-zv-tests 48d397c ♻️ zv: Split out zvariant tests into separate files 2222483
    # Merge pull request #1369 from zeenix/undeprecate-dict-derives f4e9586 📝 book: Remove 2 redundant comments c187e24 📝
    # book: Update FAQ section on dict (de)serialization Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=zvariant_derive&package-manage
    # r=cargo&previous-version=5.6.0&new-version=5.7.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/a
    # bout-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38911	(@rodion.borovyk@gmail.com, #38911)	indexeddb: Initialize DB version to zero in unit tests (#38911)
    # Continuation of https://github.com/servo/servo/pull/38819
    # Testing: Fixes indexeddb unit tests
-https://github.com/servo/servo/pull/38927	(@dependabot[bot], @dependabot[bot], #38927)	build(deps): bump libdbus-sys from 0.2.5 to 0.2.6 (#38927)
    # Bumps [libdbus-sys](https://github.com/diwic/dbus-rs) from 0.2.5 to 0.2.6.
    # Commits
    # See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=libdbus-sys&package-manager=ca
    # rgo&previous-version=0.2.5&new-version=0.2.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about
    # -dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/38909	(@euclid.ye@huawei.com, #38909)	webdriver: Raise `WebView` to top when focus (#38909)
    webdriver
    # - Add a helper function `focus_and_raise_to_top` to `WebView`.  - For webdriver, raise webview to top when focus, to
    # make it consistent with user interaction.
    # Testing: Should reduce some flaky TIMEOUT when combined with another PR later.  Fixes: A small patch before the PR for
    # #38906.
-https://github.com/servo/servo/pull/38914	(@mrobinson, #38914)	deps: Upgrade `surfman` to 0.10.0 (#38914)
    # Fixes: #38902
-https://github.com/servo/servo/pull/38929	(@dependabot[bot], @dependabot[bot], #38929)	build(deps): bump jobserver from 0.1.33 to 0.1.34 (#38929)
    # Bumps [jobserver](https://github.com/rust-lang/jobserver-rs) from 0.1.33 to 0.1.34.
    # Commits
    # 4bcd123 chore: bump to 0.1.34 8d04a3f Merge pull request #113 from bjorn3/miri_fixes 5f0b099 Disable helper thread
    # cleanup signals in miri c5f6152 Fix a warning 588c01d Use pipe2 libc wrapper rather than a raw syscall fcb9137 Pipe2 is
    # always available on Linux See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jobserver&package-manager=carg
    # o&previous-version=0.1.33&new-version=0.1.34)](https://docs.github.com/en/github/managing-security-vulnerabilities/about
    # -dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38888	(@TimvdLippe, #38888)	script: Add remaining unique element event listeners (#38888)
    # This adds the remaining window as well as specific svg and animation listeners.  The test suite was erroring before, as
    # we don't implement `SVGAnimationElement` yet.  Now, the test gracefully checks if the interface exists before doing a
    # lookup.
    # Part of #36258
-https://github.com/servo/servo/pull/38921	(@jschwe, #38921)	script: send StorageThreadMsg directly (#38921)
    # Remove the intermediate clone of an IpcSender, by directly sending.
    # Testing: No functional changes
-https://github.com/servo/servo/pull/38926	(@dependabot[bot], @dependabot[bot], #38926)	build(deps): bump zvariant_utils from 3.2.0 to 3.2.1 (#38926)
    # Bumps [zvariant_utils](https://github.com/dbus2/zbus) from 3.2.0 to 3.2.1.
    # Commits
    # 4d256bd zv,zd: Bugfix release 3.2.1 3bca315 Merge branch 'ease-cargo-publish' into 'main' 341f943 zm,zd: Don't specify
    # version of dev-dep on main crates 3d77b0a Merge branch 'fix-struct-enum-deser' into 'main' 0852989 zv: More robust check
    # for non-unit enum deserialization ebba64e zv: Add a test case for issue#265 84a28d0 Release 2.0.2 31ea805 Merge branch
    # 'fix-polkit-features' into 'main' fc134fb zp: Fix build by adding features like zbus 5b1063a Merge branch
    # 'polkit-tokio-support' into 'main' Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=zvariant_utils&package-manager
    # =cargo&previous-version=3.2.0&new-version=3.2.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/ab
    # out-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
>>> 2025-08-28T06:16:30Z
-https://github.com/servo/servo/pull/38986	(@dependabot[bot], @dependabot[bot], #38986)	build(deps): bump the servo-media-related group with 12 updates (#38986)
    # Bumps the servo-media-related group with 12 updates:
    # | Package | From | To | | --- | --- | --- | | [servo-media](https://github.com/servo/media) | ``a57b0e6`` | ``de1ebef``
    # | | [servo-media-dummy](https://github.com/servo/media) | ``a57b0e6`` | ``de1ebef`` | |
    # [servo-media-gstreamer](https://github.com/servo/media) | ``a57b0e6`` | ``de1ebef`` | | servo-media-audio | ``a57b0e6``
    # | ``de1ebef`` | | servo-media-derive | ``a57b0e6`` | ``de1ebef`` | | servo-media-gstreamer-render | ``a57b0e6`` |
    # ``de1ebef`` | | servo-media-gstreamer-render-android | ``a57b0e6`` | ``de1ebef`` | | servo-media-gstreamer-render-unix |
    # ``a57b0e6`` | ``de1ebef`` | | servo-media-player | ``a57b0e6`` | ``de1ebef`` | | servo-media-streams | ``a57b0e6`` |
    # ``de1ebef`` | | servo-media-traits | ``a57b0e6`` | ``de1ebef`` | | servo-media-webrtc | ``a57b0e6`` | ``de1ebef`` |
    # Updates `servo-media` from `a57b0e6` to `de1ebef`
    # Commits
    # de1ebef Add clean-shutdown of backend (#448) See full diff in compare view
    # Updates `servo-media-dummy` from `a57b0e6` to `de1ebef`
    # Commits
    # de1ebef Add clean-shutdown of backend (#448) See full diff in compare view
    # Updates `servo-media-gstreamer` from `a57b0e6` to `de1ebef`
    # Commits
    # de1ebef Add clean-shutdown of backend (#448) See full diff in compare view
    # Updates `servo-media-audio` from `a57b0e6` to `de1ebef`
    # Updates `servo-media-derive` from `a57b0e6` to `de1ebef`
    # Updates `servo-media-gstreamer-render` from `a57b0e6` to `de1ebef`
    # Updates `servo-media-gstreamer-render-android` from `a57b0e6` to `de1ebef`
    # Updates `servo-media-gstreamer-render-unix` from `a57b0e6` to `de1ebef`
    # Updates `servo-media-player` from `a57b0e6` to `de1ebef`
    # Updates `servo-media-streams` from `a57b0e6` to `de1ebef`
    # Updates `servo-media-traits` from `a57b0e6` to `de1ebef`
    # Updates `servo-media-webrtc` from `a57b0e6` to `de1ebef`
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/38984	(@euclid.ye@huawei.com, #38984)	script: Support decomposing ShadowRoot from mozjs `HandleValue` (#38984)
    dom
    # - Add `ShadowRoot` to `JSValue` to avoid `WebDriverJSError::UnknownType`, and
    # `JavaScriptEvaluationError::SerializationError` when execute JS from embedder.  - Add unit test.  - Move
    # [is_detached](https://w3c.github.io/webdriver/#dfn-is-detached) to `fn is_detached` to be reused.  - Other random
    # simplification.
    # Testing: WebDriver conformance tests.
-https://github.com/servo/servo/pull/38976	(@dependabot[bot], @dependabot[bot], #38976)	build(deps): bump async-executor from 1.13.2 to 1.13.3 (#38976)
    # Bumps [async-executor](https://github.com/smol-rs/async-executor) from 1.13.2 to 1.13.3.
    # Release notes Sourced from async-executor's releases.
    # v1.13.3
    # Avoid places where the code had a possibility to block or panic.  (#147)
    # Changelog Sourced from async-executor's changelog.
    # Version 1.13.3
    # Avoid places where the code had a possibility to block or panic.  (#147)
    # Commits
    # 1e8d245 v1.13.3 08c3fc4 Don't explicitly panic or block when avoidable (#147) 58411d6 Update criterion requirement from
    # 0.6 to 0.7 95ec34d Update criterion requirement from 0.5 to 0.6 (#142) b3269e1 Ignore clippy::unused_unit lint 87a287a
    # Fix clippy::uninlined_format_args warning See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=async-executor&package-manager
    # =cargo&previous-version=1.13.2&new-version=1.13.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/
    # about-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/38876	(@sebsebmc@gmail.com, #38876)	script: Do not include fragments when comparing URLs in `CookieStore` (#38876)
    dom
    # Fixes a check for empty options in `getAll(options)` and makes url comparison with exclude fragments set to true.
    # Testing: New passing WPT tests Part of #37674
+https://github.com/servo/servo/pull/38623	(@TimvdLippe, #38623)	Implement trusted types processing for JavaScript URL (#38623)
    dom
    # We pass in the new trait implementation to process the value, which the CSP crate calls in its implementation.
    # Additionally, since the request url can change, we need to propagate that to load_data as well.
    # This also avoids a crash when a discarded browsing context is accessed while navigating the iframes in the WPT tests.
    # This is a known issue, but hampers investigation into actual Trusted Types support.
    # All tests using iframes don't work, as they don't have the correct browsing context.  The other tests do work, but some
    # fail on header ascii parsing (#36801) or error while handling errors.  That last one I don't understand based on the
    # current code and I would need to do a deep-dive in the existing code to understand better what's going on.
    # Part of #36258 Part of #37920
-https://github.com/servo/servo/pull/38981	(@dependabot[bot], @dependabot[bot], #38981)	build(deps): bump image-webp from 0.2.3 to 0.2.4 (#38981)
    # Bumps [image-webp](https://github.com/image-rs/image-webp) from 0.2.3 to 0.2.4.
    # Changelog Sourced from image-webp's changelog.
    # Version 0.2.4 Changes:
    # Changed default upscaling to bilinear interpolation to match libwebp (#147)
    # Bug fixes:
    # Fixed all remaining divergences against libwebp in loop filtering (#148, #149)
    # Optimizations:
    # Optimized predictors in lossless_transform (#152) Improved performance of horizontal loop filtering (#151, #156)
    # Commits
    # See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=image-webp&package-manager=car
    # go&previous-version=0.2.3&new-version=0.2.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-
    # dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/36680	(@simonwuelker, #36680)	servoshell: Display favicons in tab bar (#36680)
    servoshell
    # Before: ![image](https://github.com/user-attachments/assets/476ecc6b-8649-4f29-b138-aa94b938d846)
    # After: ![image](https://github.com/user-attachments/assets/33a37a64-2070-4c88-963d-719e32e7e8af)
    # This PR moves the favicon, title and close button into a single egui Frame.  Doing this allows us to get rid of some of
    # the previous layout magic (like setting a border radius on the left corners of the label and the right corners of the
    # button so they appear as one widget).  It also ensures that the tab is highlighted when the close button (not the label)
    # is hovered.
-https://github.com/servo/servo/pull/38900	(@arihant2math@gmail.com, #38900)	script: Move gamepad DOM interfaces to `script/dom/gamepad/` (#38900)
    # Moves interfaces defined by the gamepad spec to the `script/dom/gamepad/` module from `script/dom/`.
    # Testing: Just a refactor shouldn't need any testing Fixes: N/A
-https://github.com/servo/servo/pull/38978	(@dependabot[bot], @dependabot[bot], #38978)	build(deps): bump camino from 1.1.11 to 1.1.12 (#38978)
    # Bumps [camino](https://github.com/camino-rs/camino) from 1.1.11 to 1.1.12.
    # Release notes Sourced from camino's releases.
    # camino 1.1.12 Added
    # Utf8PathBuf::from_os_string and Utf8Path::from_os_str conversions.  TryFrom&lt;OsString&gt; for Utf8PathBuf and
    # TryFrom&lt;&amp;OsStr&gt; for &amp;Utf8Path conversions.
    # Thanks to BenjaminBrienen for your first contribution!
    # Changelog Sourced from camino's changelog.
    # [1.1.12] - 2025-08-26 Added
    # Utf8PathBuf::from_os_string and Utf8Path::from_os_str conversions.  TryFrom&lt;OsString&gt; for Utf8PathBuf and
    # TryFrom&lt;&amp;OsStr&gt; for &amp;Utf8Path conversions.
    # Thanks to BenjaminBrienen for your first contribution!
    # Commits
    # e5edcb9 [camino] version 1.1.12 9c1eff0 prepare release bb1c1c9 feature: Add support for converting from OsStr and
    # OsString (#107) 281007b chore: Documentation fixes See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=camino&package-manager=cargo&p
    # revious-version=1.1.11&new-version=1.1.12)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-de
    # pendabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/38564	(@simonwuelker, #38564)	script: Support custom element states (#38564)
    css
    # Also adds support for `:state`.
    # Testing: Covered by existing tests
+https://github.com/servo/servo/pull/38949	(@simonwuelker, #38949)	script: Load and rasterize favicons before passing them to the embedder (#38949)
    servoshell
    # Currently the embedding API only provides the embedder with the URL for a favicon.  This is not great, for multiple
    # reasons: * Loading the icon should happen according to the fetch spec which is not easy for the embedder to recreate
    # (consider CSP, timing information etc) * Rasterizing a svg favicon is not trivial
    # With this change, servo fetches and rasterizes the icon to a bitmap which is then passed to the embedder.
    # Testing: I'm not sure how I can write tests for the embedding api.  I've tested the correctness manually using
    # https://github.com/servo/servo/pull/36680.  Prepares for https://github.com/servo/servo/pull/36680
-https://github.com/servo/servo/pull/38972	(@jschwe, @mrobinson, #38972)	compositor: Preserve CompositorMsg deserialization errors (#38972)
    # Forward any deserialization errors to the receiver, instead of panicking on the router thread.  This change was
    # previously part of #38782, which got reverted, since generic channels don't support custom router callbacks yet.
    # Propagating the error is still something we want, and landing this separately will reduce the diff of the PR that
    # introduces generic callbacks.
    # Testing: Should be covered by existing tests.  Also manually tested https://github.com/servo/servo/issues/38939
-https://github.com/servo/servo/pull/38969	(@atbrakhi, @delan, #38969)	devtools: Fix flaky source list test assertions (#38969)
    # In the sources list tests, we assert that the sources for each target are given to us in the same order as we specified
    # in the test case, but this is only true for classic &lt;script> and &lt;script src>.  ES module scripts and async/defer
    # scripts are loaded asynchronously, so we can’t rely on the order being the same every time.
    # this patch changes the test assertions to use a frozen multiset for each target’s sources, rather than a frozen list
    # (tuple), so the sources can appear in any order but must still appear the expected number of times.  we also change the
    # test assertions to use a multiset ([Counter](https://docs.python.org/3/library/collections.html#counter-objects)) of
    # frozen multisets, rather than a set of multisets, so now two targets can have the same set of sources without breaking
    # tests.
    # Testing: this patch improves existing tests, but does not change coverage Fixes: part of #38658
-https://github.com/servo/servo/pull/38962	(@mrobinson, #38962)	canvas: Remove the `raqote` backend (#38962)
    # In general, `raqote` is essentially umaintained and has issues with quality (for instance text rendering has lots of
    # issues) and removing it finally lets us remove our dependency on `font-kit`.  Although, `vello_cpu` performance is not
    # yet equal to raqote, rendering quality is a lot better.  It's expected that `vello` and `vello_cpu` performance will
    # keep improving.
    # Testing: This is covered by existing WPT tests.
+https://github.com/servo/servo/pull/38944	(@rodion.borovyk@gmail.com, #38944)	indexeddb: Use UUIDs instead of sanitization of object store names (#38944)
    indexeddb
    # Sanitization of object store names brought some problems because of replacing special characters and making it
    # impossible to have certain object store names that are allowed by the spec.  These changes make sure deterministic UUIDs
    # are used for file paths plus object store names are inserted into SQLite without sanitization.
    # Testing: Covered by existing tests and new unit tests were added.  Fixes: #37569
-https://github.com/servo/servo/pull/38961	(@jdm, #38961)	script: Extract DOMException creation from throwing an exception. (#38961)
    # This is preparation for #38740, which wants to use DOMExceptions without immediately throwing them and aborting
    # execution.
    # Testing: Existing WPT coverage will suffice for this refactor.
+https://github.com/servo/servo/pull/38946	(@araya@araya.dev, #38946)	net: Ignore `pragma: no-cache` if cache-control is understood (#38946)
   net
    # This PR fixes a failed WPT:
    # https://wpt.fyi/results/fetch/http-cache/pragma-no-cache-with-cache-control.html?product=servo
    # [As RFC9111 mentions,](https://www.rfc-editor.org/rfc/rfc9111.html#section-5.4) the Pragma header field is deprecated.
    # And, in WPT, it expects the Pragma header field is ignored if a cache-control header field is specified and understood
    # by UA.
    # Testing: running `./mach test-wpt fetch/http-cache/pragma-no-cache-with-cache-control.html`
-https://github.com/servo/servo/pull/38963	(@jschwe, #38963)	compositor: Hide IpcSender as implementation detail (#38963)
    # The `CrossProcessCompositorApi` already provides methods for most messages.  Remove the `sender()` method, and hide the
    # IpcSender as an implementation detail.  This is a preparation for abstracting over the internal IpcSender.
    # Testing: No functional changes
-https://github.com/servo/servo/pull/38938	(@atbrakhi, @delan, #38938)	devtools: Use correct servoshell path on Windows (#38938)
    # When we landed #38614, the devtools tests consistently failed on GitHub-hosted Windows builds, because we were
    # hardcoding the target directory.  This patch fixes that by taking the `CARGO_TARGET_DIR` into account.
    # - before: `[D:\a\servo\servo\]target/release/servo` - after: `C:\a\servo\servo\target\release\servo.exe`
    # Testing (cherry picked onto #38614 so it runs in CI): - GitHub-hosted, before: - GitHub-hosted, after: - self-hosted,
    # after:
    # Fixes: part of #38658
-https://github.com/servo/servo/pull/38917	(@jschwe, #38917)	compositor: Port GenerateFontKeys result sender to generic channel (#38917)
    # Ports the channel returning the result of `GenerateFontKeys` to generic channel
    # Testing: No functional changes - Covered by existing tests Part of https://github.com/servo/servo/issues/38912
-https://github.com/servo/servo/pull/38964	(@atbrakhi, @delan, #38964)	devtools: Fix `test_source_breakable_lines_and_positions_with_functions` (#38964)
    # In #38933 we removed `start_web_server` but `test_source_breakable_lines_and_positions_with_functions` was not updated
    # because it was added later.  In this patch we remove `start_web_server` in that test as well.
    # Testing: fixes an existing test Fixes: Part of #36325
-https://github.com/servo/servo/pull/38844	(@sagudev, #38844)	canvas: Use vello_cpu as default canvas backend (#38844)
    # We really want to remove font-kit from dep tree, so this is the first step into removing raqote from servo.  While
    # vello_cpu is not perfect replacement, I am confident that we will resolve all issues eventually:
    # https://github.com/servo/servo/issues/38345 (most important ones already have PRs).
    # Reviewable per commit.
    # Testing: Existing WPT tests.  Try run: https://github.com/sagudev/servo/actions/runs/17138369290
-https://github.com/servo/servo/pull/38960	(@dependabot[bot], @dependabot[bot], #38960)	build(deps): bump bit_field from 0.10.2 to 0.10.3 (#38960)
    # Bumps [bit_field](https://github.com/phil-opp/rust-bit-field) from 0.10.2 to 0.10.3.
    # Changelog Sourced from bit_field's changelog.
    # 0.10.3 – 2025-08-26
    # add #[inline] to to_regular_range allow empty range on get/set bits Add Security Policy
    # Commits
    # d2d5f13 Release version 0.10.3 7faef58 Update cargo-release configuration to latest version 595b537 Update changelog for
    # #29, #30, #34 5cb64a5 Merge pull request #34 from jaamesd/patch-1 8f5e697 allow empty range on get/set bits 1680157
    # Merge pull request #30 from Freax13/enhancement/inline-to_regular_range eb9f014 add #[inline] to to_regular_range
    # a530c70 Merge pull request #29 from gabibguti/master d832849 Create SECURITY.md See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=bit_field&package-manager=carg
    # o&previous-version=0.10.2&new-version=0.10.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about
    # -dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38959	(@dependabot[bot], @dependabot[bot], #38959)	build(deps): bump zbus_macros from 5.9.0 to 5.10.0 (#38959)
    # Bumps [zbus_macros](https://github.com/dbus2/zbus) from 5.9.0 to 5.10.0.
    # Release notes Sourced from zbus_macros's releases.
    # 🔖 zbus_macros 3.14.0.
    #  Allow unicast signals through the dbus_interface.  Fixes #374.
    # ️ Bump our MSRV.  More and more dependencies are requiring Rust 1.64.0, so let's bump our MSRV to match.  🔥 Drop manual
    # Default impl of PropertyEmitsChangedSignal.  After Rust 1.64, we can use the derive for this.  ⏪️ Revert locking of
    # winnow version.  We've bumped our MSRV so there is no need for this workaround anymore.  🎨 Code comments should also
    # adhere to 100 character limit.
    # Commits
    # 0e33c8e Merge pull request #1476 from zeenix/releases f1aa56a 🔖 zb: Release 5.10.0 b6f6d81 🔖 zv: Release 5.7.0 70edef0
    # 🔖 zu: Release 3.2.1 62122f5 ️ micro: Update quick-xml to v0.38.3 (#1475) 568375f ️ micro: Update url to v2.5.7 (#1474)
    # 6550f22 Merge pull request #1472 from swick/wip/fix-creds-group-lookup c5cd9cc 🐛 zb: Fall back to no groups rather than
    # erroring out for peer creds a24251f ️ micro: Update winnow to v0.7.13 (#1473) 54ec4ba ️ micro: Update url to v2.5.6
    # (#1471) Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=zbus_macros&package-manager=ca
    # rgo&previous-version=5.9.0&new-version=5.10.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/abou
    # t-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38947	(@jschwe, #38947)	dependabot: Specify time and reduce PR limit (#38947)
    # The merge queue today was greatly affected by many dependabot PRs in the European morning, which caused a long merge
    # queue for the rest of the day.  Let's attempt to schedule dependabot updates during less busy times, and also reduce the
    # limit of open PRs.  [Dependabot
    # documentation](https://docs.github.com/en/code-security/dependabot/working-with-dependabot/dependabot-options-reference#
    # schedule-)
    # Testing: No testing.
+https://github.com/servo/servo/pull/38874	(@TimvdLippe, #38874)	script: Implement trusted types for `Range.createContextualFragment` (#38874)
    dom
    # Part of #36258
+https://github.com/servo/servo/pull/38872	(@TimvdLippe, #38872)	script: Implement trusted types for `DOMParser.parseFromString` (#38872)
    dom
    # Part of #36258
>>> 2025-08-29T06:07:34Z
-https://github.com/servo/servo/pull/38845	(@jerensl, @mukilan, #38845)	script_bindings(python): Add type around CG class in `codegen.py` (#38845)
    # Add type around CG class for code generatio Web IDL in codegen.py
    # Testing: *Describe how this pull request is tested or why it doesn't require tests* Fixes: *Link to an issue this pull
    # requests fixes or remove this line if there is no issue*
-https://github.com/servo/servo/pull/38990	(@jschwe, #38990)	Port ScriptToConstellation channel to generic channel (#38990)
    # This change was previously part of fb1c0a4c48dee5791b8785e5d5d4906b935bdb76, which got reverted due to an issue with the
    # compositor channel.
    # Split this change out into a separate PR, as it probably should have been in the first place.  Presumably it was one
    # change before, since serialization of crossbeam generic channels in single-process mode was not implemented yet at the
    # time.
    # Testing: Covered by existing tests.  No custom callbacks involved.
    # Part of #38912
-https://github.com/servo/servo/pull/39006	(@dependabot[bot], @dependabot[bot], #39006)	build(deps): bump async-compression from 0.4.28 to 0.4.29 (#39006)
    # Bumps [async-compression](https://github.com/Nullus157/async-compression) from 0.4.28 to 0.4.29.
    # Commits
    # 44383ce chore: release v0.4.29 (#374) 3b5c52b Update Deps.rs badge (#380) 905b484 refactor: move async-compression to
    # crates/ (#379) ccefbeb Refactor: update use of compression_core::assert_* (#375) 776b25f Refactor compression_core::util
    # (#373) See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=async-compression&package-mana
    # ger=cargo&previous-version=0.4.28&new-version=0.4.29)](https://docs.github.com/en/github/managing-security-vulnerabiliti
    # es/about-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/39007	(@dependabot[bot], @dependabot[bot], #39007)	build(deps): bump compression-core from 0.4.28 to 0.4.29 (#39007)
    # Bumps [compression-core](https://github.com/Nullus157/async-compression) from 0.4.28 to 0.4.29.
    # Release notes Sourced from compression-core's releases.
    # compression-core-v0.4.29 Other
    # Update Deps.rs badge (#380) move async-compression to crates/ (#379) Refactor compression_core::util (#373)
    # Commits
    # 44383ce chore: release v0.4.29 (#374) 3b5c52b Update Deps.rs badge (#380) 905b484 refactor: move async-compression to
    # crates/ (#379) ccefbeb Refactor: update use of compression_core::assert_* (#375) 776b25f Refactor compression_core::util
    # (#373) See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=compression-core&package-manag
    # er=cargo&previous-version=0.4.28&new-version=0.4.29)](https://docs.github.com/en/github/managing-security-vulnerabilitie
    # s/about-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/39005	(@simonwuelker, #39005)	script: Remove a `println` statement in `canvas_state.rs` (#39005)
    # This was (presumably accidentally) added in #38979, cc @mrobinson
-https://github.com/servo/servo/pull/39003	(@dependabot[bot], @dependabot[bot], #39003)	build(deps): bump compression-codecs from 0.4.28 to 0.4.29 (#39003)
    # Bumps [compression-codecs](https://github.com/Nullus157/async-compression) from 0.4.28 to 0.4.29.
    # Release notes Sourced from compression-codecs's releases.
    # compression-codecs-v0.4.29 Other
    # Update Deps.rs badge (#380) move async-compression to crates/ (#379)
    # Commits
    # 44383ce chore: release v0.4.29 (#374) 3b5c52b Update Deps.rs badge (#380) 905b484 refactor: move async-compression to
    # crates/ (#379) ccefbeb Refactor: update use of compression_core::assert_* (#375) 776b25f Refactor compression_core::util
    # (#373) See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=compression-codecs&package-man
    # ager=cargo&previous-version=0.4.28&new-version=0.4.29)](https://docs.github.com/en/github/managing-security-vulnerabilit
    # ies/about-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
-https://github.com/servo/servo/pull/38999	(@jschwe, #38999)	storage: Port Reply senders to GenericSender (#38999)
    # Port the reply / back channels of StorageThreadMsg to GenericChannel.
    # Testing: No functional changes Part of #38912
-https://github.com/servo/servo/pull/38995	(@andrei.volykhin@gmail.com, @volykhin.andrei@huawei.com, #38995)	script: Move WebGL DOM interfaces to script/dom/webgl/ (#38995)
    # Move interfaces defined by the WebGL spec to the `script/dom/webgl/ `module from `script/dom/`.
    # `script/dom/webgl*.rs` -> `script/dom/webgl/` `script/dom/webgl_extensions` -> `script/dom/webgl/extensions`
    # `script/dom/webgl_validations` -> `script/dom/webgl/validations`
    # Testing: No changes, just a refactoring
    # Fixes (partially): #38901
+https://github.com/servo/servo/pull/38886	(@TimvdLippe, #38886)	Disallow invalid trusted type policy names (#38886)
    dom
    # Actual fix is in the CSP crate.
    # Part of #36258
+https://github.com/servo/servo/pull/38993	(@Gae24, #38993)	`XMLHttpRequest` `Send`: fix Content-Type failures (#38993)
    dom
    # Replaced usage of `typed_insert` since it ended converting `UTF-8` to lowercase.  Removed one of the test cases since it
    # wasn't following spec since [xhr/205](https://github.com/whatwg/xhr/pull/205).
    # Testing: Changes covered by wpt Fixes: #20436
+https://github.com/servo/servo/pull/38979	(@mrobinson, #38979)	canvas: Move font selection and text shaping to `script` (#38979)
    dom
    # Instead of doing font selection and text shaping in `canvas`, move this to `script`.  This allows canvas to use the
    # shared `Document` `FontContext`, which has access to web fonts.  In addition, ensure that there is a font style
    # accessible for `OffscreenCanvas` in workers.
    # Testing: This causes a number of WPT tests to start to pass as web fonts are supported on canvas again.  In addition,
    # some start to fail as they expose other issues:
    #  - The lack of support for the `Context2D.fontStretch` property - Issues with zerosize gradient interpolation.  -
    #  Differences between quoted and unquoted font family names.  This seems like
    #    a timing issue with the way we are handling web fonts.  The test seems to be expecting Local fonts to be available
    #    immediately (without waiting for them to load).  This isn't how Servo works ATM.  Seems like an issue with the test.
+https://github.com/servo/servo/pull/38740	(@arihant2math@gmail.com, @jdm, #38740)	script: correctly handle indexeddb backend errors (#38740)
    indexeddb
    # Sets the indexeddb request error when the backend errors out.  This also matches statements to the spec.
    # Testing: Covered by WPT Fixes: General indexeddb
-https://github.com/servo/servo/pull/38974	(@arihant2math@gmail.com, #38974)	script: Fix bluetooth module clippy lint position to be consistent (#38974)
    # As per discussion in #38900
    # Testing: None, minor refactor
-https://github.com/servo/servo/pull/38987	(@dependabot[bot], @dependabot[bot], #38987)	build(deps): bump sea-query from 1.0.0-rc.11 to 1.0.0-rc.12 (#38987)
    # Bumps [sea-query](https://github.com/SeaQL/sea-query) from 1.0.0-rc.11 to 1.0.0-rc.12.
    # Commits
    # See full diff in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=sea-query&package-manager=carg
    # o&previous-version=1.0.0-rc.11&new-version=1.0.0-rc.12)](https://docs.github.com/en/github/managing-security-vulnerabili
    # ties/about-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
>>> 2025-08-30T06:07:26Z
-https://github.com/servo/servo/pull/39030	(@dependabot[bot], @dependabot[bot], @euclid.ye@huawei.com, #39030)	build(deps): bump tracing-subscriber from 0.3.19 to 0.3.20 (#39030)
    # Bumps [tracing-subscriber](https://github.com/tokio-rs/tracing) from 0.3.19 to 0.3.20.
    # Release notes Sourced from tracing-subscriber's releases.
    # tracing-subscriber 0.3.20 Security Fix: ANSI Escape Sequence Injection (CVE-TBD) Impact Previous versions of
    # tracing-subscriber were vulnerable to ANSI escape sequence injection attacks.  Untrusted user input containing ANSI
    # escape sequences could be injected into terminal output when logged, potentially allowing attackers to:
    # Manipulate terminal title bars Clear screens or modify terminal display Potentially mislead users through terminal
    # manipulation
    # In isolation, impact is minimal, however security issues have been found in terminal emulators that enabled an attacker
    # to use ANSI escape sequences via logs to exploit vulnerabilities in the terminal emulator.  Solution Version 0.3.20
    # fixes this vulnerability by escaping ANSI control characters in when writing events to destinations that may be printed
    # to the terminal.  Affected Versions All versions of tracing-subscriber prior to 0.3.20 are affected by this
    # vulnerability.  Recommendations Immediate Action Required: We recommend upgrading to tracing-subscriber 0.3.20
    # immediately, especially if your application:
    # Logs user-provided input (form data, HTTP headers, query parameters, etc.) Runs in environments where terminal output is
    # displayed to users
    # Migration This is a patch release with no breaking API changes.  Simply update your Cargo.toml: [dependencies]
    # tracing-subscriber = &quot;0.3.20&quot;
    # Acknowledgments We would like to thank zefr0x who responsibly reported the issue at security@tokio.rs.  If you believe
    # you have found a security vulnerability in any tokio-rs project, please email us at security@tokio.rs.
    # Commits
    # 4c52ca5 fmt: fix ANSI escape sequence injection vulnerability (#3368) f71cebe subscriber: impl Clone for EnvFilter
    # (#3360) 3a1f571 Fix CI (#3361) e63ef57 chore: prepare tracing-attributes 0.1.30 (#3316) 6e59a13 attributes: fix
    # tracing::instrument regression around shadowing (#3311) e4df761 tracing: update core to 0.1.34 and attributes to 0.1.29
    # (#3305) 643f392 chore: prepare tracing-attributes 0.1.29 (#3304) d08e7a6 chore: prepare tracing-core 0.1.34 (#3302)
    # 6e70c57 tracing-subscriber: count numbers of enters in Timings (#2944) c01d4fd fix docs and enable CI on main branch
    # (#3295) Additional commits viewable in compare view
    # [![Dependabot compatibility
    # score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=tracing-subscriber&package-man
    # ager=cargo&previous-version=0.3.19&new-version=0.3.20)](https://docs.github.com/en/github/managing-security-vulnerabilit
    # ies/about-dependabot-security-updates#about-compatibility-scores)
    # Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself.  You can also trigger a
    # rebase manually by commenting `@dependabot rebase`.
    # [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)
+https://github.com/servo/servo/pull/39020	(@andrei.volykhin@gmail.com, @volykhin.andrei@huawei.com, #39020)	webgpu: Add the dedicated WebGPU task source (#39020)
    dom
    # According to the WebGPU specification there are the dedicated task source which is used to queue a global task for a
    # GPUDevice on content timeline.  https://gpuweb.github.io/gpuweb/#-webgpu-task-source
    # Tasks on content timeline: - to fire "uncaptureevent" event - to resolve GPUDevice.lost promise
    # Also fixed the "isTrusted" attribute status (false -> true) of the "uncaptureevent" event by using non JS version of
    # event dispatching.
    # Testing: No changes in WebGPU CTS expectations - webgpu:api,operation,uncapturederror:* -
    # webgpu:api,operation,device,lost:* - webgpu:api,validation,state,device_lost,destroy:*
+https://github.com/servo/servo/pull/38891	(@arihant2math@gmail.com, #38891)	indexeddb: Add index schemas (#38891)
    indexeddb
    # Creates schemas to hold index information.  These tables are created when the database is initialized.  These tables are
    # not updated however.
    # Testing: WPT and unit Fixes: Partially #38100
-https://github.com/servo/servo/pull/39024	(@sagudev, #39024)	script: Always provide canvas epoch on update_rendering (#39024)
    # We never not provided it.
    # Testing: Existing tests.
-https://github.com/servo/servo/pull/39022	(@sagudev, #39022)	script: do not update `Document` rendering when waiting on asynchronous canvas image updates (#39022)
    # This is fixup for #37776.  We forget to skip documents with waiting_on_canvas_image_updates flag.
    # Testing: Existing WPT tests and manual testing Fixes: #39021
-https://github.com/servo/servo/pull/39023	(@andrei.volykhin@gmail.com, @volykhin.andrei@huawei.com, #39023)	script: Move WebRTC DOM interfaces to script/dom/webrtc/ (#39023)
    # Move interfaces defined by the WebRTC specification to the `script/dom/webrtc/` module from `script/dom/`.
    # `script/dom/rtc*.rs -> script/dom/webrtc/`
    # Testing: No changes, just a refactoring
    # Fixes (partially): #38901
-https://github.com/servo/servo/pull/39018	(@jschwe, #39018)	EmbedderMsg: port reply channels to GenericChannel (#39018)
    # This change ports all `EmbedderMsg` reply channels that don't use the `ROUTER` to GenericChannel.  The remaining reply
    # channels that use the router are blocked until #38973 is merged.  This is a breaking change in the API between libservo
    # and embedders.
    # Future work: A lot of the reply channels in this PR look like they conceptually should be oneshot ipc channels.  It
    # might make sense to provide a `OneshotGenericChannel` abstraction that encodes this.
    # Testing: No functional changes - covered by existing tests.  None of the channels changed here uses the Router Part of
    # #38912
+https://github.com/servo/servo/pull/39001	(@darryl@dpogue.ca, #39001)	fonts: Use `Helvetica` as the `system-ui` font on macOS (#39001)
    font
    # Helvetica isn't quite right but it's a better default choice than a monospaced font like Menlo (it should be some
    # variant of Apple's San Francisco font, but that isn't easily exposed)
    # Testing: Untested, but matches the font family used for `sans-serif` so it should be safe
+https://github.com/servo/servo/pull/37776	(@sagudev, @mrobinson, #37776)	compositor: Allow canvas to upload rendered contents asynchronously (#37776)
    dom
    # Adds epoch to each WR image op command that is sent to compositor.  The renderer now has a `FrameDelayer` data structure
    # that is responsible for tracking when a frame is ready to be displayed.  When asking canvases to update their rendering,
    # they are given an optional `Epoch` which denotes the `Document`'s canvas epoch.  When all image updates for that `Epoch`
    # are seen in the renderer, the frame can be displayed.
    # Testing: Existing WPT tests Fixes: #35733
-https://github.com/servo/servo/pull/39015	(@sagudev, #39015)	canvas: Update vello_cpu to use SIMD on x86 (#39015)
    # Set vello commit to https://github.com/linebender/vello/commit/5e3e12559781891b204553161aee761900c7e92d.  This improves
    # performance: [#vello > Servo 2D canvas backend @
    # 💬](https://xi.zulipchat.com/#narrow/channel/197075-vello/topic/Servo.202D.20canvas.20backend/near/536745909).
    # Testing: Existing WPT tests.
+https://github.com/servo/servo/pull/39012	(@euclid.ye@huawei.com, #39012)	webdriver: Improve parsing of Frame and Window (#39012)
    webdriver
    # In #38745, we changed the id of Frame and Window as the result of `ToString` trait.  This PR - adapts the parsing of
    # frame/window accordingly.  - for frame, return the
    # [WindowProxy](https://developer.mozilla.org/en-US/docs/Web/API/WindowProxy) object of the iframe as it's supposed to do.
    # Testing: `execute_{async_}script/arguments.py`
>>> 2025-08-31T06:05:33Z
+https://github.com/servo/servo/pull/38723	(@arihant2math@gmail.com, #38723)	indexeddb: Implement autoincremented keys and report autoincrementedness properly through DOM interface (#38723)
    indexeddb
    # Autoincrementedness was previously being reported as always false.  This PR makes the state become queried from the
    # backend, as the spec specifies.  Additionally this PR ensures the backend correctly handles an object store which
    # autoincrements.
    # Testing: WPT Fixes: None
-https://github.com/servo/servo/pull/39049	(@servo-wpt-sync, #39049)	Sync WPT with upstream (31-08-2025) (#39049)
    # Automated downstream sync of changes from upstream as of 31-08-2025 [no-wpt-sync]
-https://github.com/servo/servo/pull/39046	(@arihant2math@gmail.com, #39046)	script: Move HTML DOM interfaces to `script/dom/html/` (#39046)
    # See #38901.
    # Testing: Refactor Fixes: Partially #38901
-https://github.com/servo/servo/pull/39048	(@Loirooriol, #39048)	layout: Refactor `InlineFormattingContextBuilder::is_empty` (#39048)
    # This method could iterate all the items in the inline formatting context that was being created.  This patch turns it
    # into a field, replacing `has_uncollapsible_text_content` (so this doesn't increase memory).
    # Testing: Not needed, no behavior change
-https://github.com/servo/servo/pull/39045	(@atouchet, #39045)	Update non-breaking dependencies (#39045)
    # Update non-breaking dependencies.
    # Testing: No tests for dependency updates.
-https://github.com/servo/servo/pull/39044	(@jdm, #39044)	servoshell: Hide information about outstanding threads by default. (#39044)
    # This output doesn't matter to most developers and testers, and it breaks `./mach test-speedometer`.  Let's hide it by
    # default and add a flag to opt in.
    # Testing: No testing for debug output.
-https://github.com/servo/servo/pull/39043	(@jdm, #39043)	script_bindings: Remove Cell wrapper from thread-local RootCollection. (#39043)
    # This doesn't appear to make a big difference in speedometer results, but this removes some code from the hot path of
    # creating DomRoot values.
    # Before: `Score: 30.381097406624708 ± 2.0393225244958018` After: `Score: 30.344639420871395 ± 1.9359337921154696`
    # Testing: Existing WPT coverage
-https://github.com/servo/servo/pull/39042	(@atouchet, #39042)	Update x11rb and dedupe windows-targets 0.48 (#39042)
    # Update x11rb and dedupe windows-targets 0.48.
    # Testing: No tests for dependency updates.
-https://github.com/servo/servo/pull/38973	(@jschwe, @jdm, #38973)	Add generic cross process callback mechanism (#38973)
    # One commonly encountered mechanism in servo is using ipc channels together with the router, to register a custom
    # callback to run in the current process, when receiving a reply.  The new `GenericCallback` abstracts over this, and
    # allows executing an arbitrary callback in the process of the `GenericCallback` creator.  In multiprocess mode, this
    # internally uses ipc channels and follows the existing pattern.  In single process mode, we execute the callback
    # directly, which avoids one call to the router.  Executing the callback still incurs synchronization, since we need to
    # support cloning the abstraction, and the callback closure may be `FnMut`.  Future work could provide more optimized
    # abstractions for callbacks that don't have these requirements.
    # This PR allows applying #38782 again, which was previously reverted in #38940 due to the lack of custom callback
    # support.
    # See also the module documentation in `generic_channel/callback.rs`.
    # Testing: This PR adds unit tests.  Also passes the manual testcase from #38939
    # Part of #38912
+https://github.com/servo/servo/pull/38159	(@jdm, #38159)	servoshell: Support runtime preference manipulation (#38159)
   servoshell
    # These changes add a custom servo:preferences URL that allows modifying selected preferences at runtime.  The goal of
    # this work is to make it easy to test pages while toggling experimental web platform features, and support quickly
    # changing the User-Agent header.
    # Testing: Manually verified that spacex.com loads correctly after changing the user agent, and that https://polygon.io/
    # displays grid elements correctly and no console errors with the experimental prefs enabled.  Fixes: #35862
-https://github.com/servo/servo/pull/38875	(@jdm, #38875)	script: Reduce ScriptThread TLS usage (#38875)
    # We store a pointer to the ScriptThread singleton for a thread in thread-local storage.  While we don't have yet have
    # profiles pointing to this TLS access as a hot spot, we can remove a potential performance footgun without a lot of
    # effort by passing around small pieces of data that we otherwise need to fetch from the ScriptThread.
    # Testing: Existing WPT is sufficient Fixes: part of #37969
+https://github.com/servo/servo/pull/39038	(@averyrudelphe@gmail.com, #39038)	servoshell: Redraw on closing a dialog (#39038)
    servoshell
    # Fixes an issue where clicking to close a dialog didn't redraw the screen until a key was pressed or the mouse was moved.
    # Testing: Manual testing.  Fixes: #38968
+https://github.com/servo/servo/pull/38850	(@kkoyung, #38850)	script: Initialize IDBCursor and IDBCursorWithValue interfaces (#38850)
    indexeddb
    # Testing: Update WPT test expectation Fixes: Part of #38111
-https://github.com/servo/servo/pull/39036	(@sagudev, #39036)	git: Mark `tests/blink_perf_tests` as linguist-vendored (#39036)
    # Hopefully this will make repo rust again.
    # Testing: No tests for .gitattributes Fixes:
+https://github.com/servo/servo/pull/39011	(@kot@kot.pink, #39011)	script: Clear all associated event listeners when removing an event listener content attribute. (#39011)
    dom
    # This change allows callers of `remove_event_listener` to specify `None` for the `options` argument to skip phase
    # (bubble/capture) checking (and remove either type of listener).
    # Notably, this changes the HTMLElement `attribute_mutated` code to remove all event listeners rather than ones with just
    # `capture: false`, which should be [correct
    # behavior](https://html.spec.whatwg.org/multipage/webappapis.html#deactivate-an-event-handler).
    # Testing: `mach try linux-wpt`: https://github.com/kotx/servo/actions/runs/17313405730 Fixes:
    # https://github.com/servo/servo/issues/38742
>>> 2025-09-01T06:03:13Z
